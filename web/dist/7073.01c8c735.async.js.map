{"version":3,"file":"7073.01c8c735.async.js","mappings":"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","sources":["webpack:///./src/components/knowledge-base-item.tsx","webpack:///./src/components/rerank.tsx","webpack:///./src/components/similarity-slider/index.tsx","webpack:///./src/components/top-n-item.tsx","webpack:///./src/components/ui/avatar.tsx","webpack:///./src/components/ui/badge.tsx","webpack:///./src/components/ui/button.tsx","webpack:///./src/components/ui/dialog.tsx","webpack:///./src/components/ui/dual-range-slider.tsx","webpack:///./src/components/ui/form.tsx","webpack:///./src/components/ui/label.tsx","webpack:///./src/components/ui/command.tsx","webpack:///./src/components/ui/multi-select.tsx","webpack:///./src/components/ui/popover.tsx","webpack:///./src/components/ui/select.tsx","webpack:///./src/components/ui/separator.tsx","webpack:///./src/components/ui/switch.tsx","webpack:///./src/hooks/llm-hooks.tsx","webpack:///./src/utils/llm-util.ts"],"sourcesContent":["import { DocumentParserType } from '@/constants/knowledge';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { useFetchKnowledgeList } from '@/hooks/knowledge-hooks';\nimport { UserOutlined } from '@ant-design/icons';\nimport { Avatar as AntAvatar, Form, Select, Space } from 'antd';\nimport { Book } from 'lucide-react';\nimport { useFormContext } from 'react-hook-form';\nimport { Avatar, AvatarFallback, AvatarImage } from './ui/avatar';\nimport { FormControl, FormField, FormItem, FormLabel } from './ui/form';\nimport { MultiSelect } from './ui/multi-select';\n\ninterface KnowledgeBaseItemProps {\n  required?: boolean;\n  onChange?(): void;\n}\n\nconst KnowledgeBaseItem = ({\n  required = true,\n  onChange,\n}: KnowledgeBaseItemProps) => {\n  const { t } = useTranslate('chat');\n\n  const { list: knowledgeList } = useFetchKnowledgeList(true);\n\n  const filteredKnowledgeList = knowledgeList.filter(\n    (x) => x.parser_id !== DocumentParserType.Tag,\n  );\n\n  const knowledgeOptions = filteredKnowledgeList.map((x) => ({\n    label: (\n      <Space>\n        <AntAvatar size={20} icon={<UserOutlined />} src={x.avatar} />\n        {x.name}\n      </Space>\n    ),\n    value: x.id,\n  }));\n\n  return (\n    <Form.Item\n      label={t('knowledgeBases')}\n      name=\"kb_ids\"\n      tooltip={t('knowledgeBasesTip')}\n      rules={[\n        {\n          required,\n          message: t('knowledgeBasesMessage'),\n          type: 'array',\n        },\n      ]}\n    >\n      <Select\n        mode=\"multiple\"\n        options={knowledgeOptions}\n        placeholder={t('knowledgeBasesMessage')}\n        onChange={onChange}\n      ></Select>\n    </Form.Item>\n  );\n};\n\nexport default KnowledgeBaseItem;\n\nexport function KnowledgeBaseFormField() {\n  const form = useFormContext();\n  const { t } = useTranslate('chat');\n\n  const { list: knowledgeList } = useFetchKnowledgeList(true);\n\n  const filteredKnowledgeList = knowledgeList.filter(\n    (x) => x.parser_id !== DocumentParserType.Tag,\n  );\n\n  const knowledgeOptions = filteredKnowledgeList.map((x) => ({\n    label: x.name,\n    value: x.id,\n    icon: () => (\n      <Avatar className=\"size-4 mr-2\">\n        <AvatarImage src={x.avatar} />\n        <AvatarFallback>\n          <Book />\n        </AvatarFallback>\n      </Avatar>\n    ),\n  }));\n\n  return (\n    <FormField\n      control={form.control}\n      name=\"kb_ids\"\n      render={({ field }) => (\n        <FormItem>\n          <FormLabel>{t('knowledgeBases')}</FormLabel>\n          <FormControl>\n            <MultiSelect\n              options={knowledgeOptions}\n              onValueChange={field.onChange}\n              placeholder={t('knowledgeBasesMessage')}\n              variant=\"inverted\"\n              maxCount={100}\n              defaultValue={field.value}\n              {...field}\n            />\n          </FormControl>\n        </FormItem>\n      )}\n    />\n  );\n}\n","import { LlmModelType } from '@/constants/knowledge';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { useSelectLlmOptionsByModelType } from '@/hooks/llm-hooks';\nimport { Select as AntSelect, Form, Slider } from 'antd';\nimport { useFormContext } from 'react-hook-form';\nimport { SingleFormSlider } from './ui/dual-range-slider';\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from './ui/form';\nimport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectTrigger,\n  SelectValue,\n} from './ui/select';\n\ntype FieldType = {\n  rerank_id?: string;\n  top_k?: number;\n};\n\nexport const RerankItem = () => {\n  const { t } = useTranslate('knowledgeDetails');\n  const allOptions = useSelectLlmOptionsByModelType();\n\n  return (\n    <Form.Item\n      label={t('rerankModel')}\n      name={'rerank_id'}\n      tooltip={t('rerankTip')}\n    >\n      <AntSelect\n        options={allOptions[LlmModelType.Rerank]}\n        allowClear\n        placeholder={t('rerankPlaceholder')}\n      />\n    </Form.Item>\n  );\n};\n\nconst Rerank = () => {\n  const { t } = useTranslate('knowledgeDetails');\n\n  return (\n    <>\n      <RerankItem></RerankItem>\n      <Form.Item noStyle dependencies={['rerank_id']}>\n        {({ getFieldValue }) => {\n          const rerankId = getFieldValue('rerank_id');\n          return (\n            rerankId && (\n              <Form.Item<FieldType>\n                label={t('topK')}\n                name={'top_k'}\n                initialValue={1024}\n                tooltip={t('topKTip')}\n              >\n                <Slider max={2048} min={1} />\n              </Form.Item>\n            )\n          );\n        }}\n      </Form.Item>\n    </>\n  );\n};\n\nexport default Rerank;\n\nconst RerankId = 'rerank_id';\n\nfunction RerankFormField() {\n  const form = useFormContext();\n  const { t } = useTranslate('knowledgeDetails');\n  const allOptions = useSelectLlmOptionsByModelType();\n  const options = allOptions[LlmModelType.Rerank];\n\n  return (\n    <FormField\n      control={form.control}\n      name={RerankId}\n      render={({ field }) => (\n        <FormItem>\n          <FormLabel>{t('rerankModel')}</FormLabel>\n          <FormControl>\n            <Select onValueChange={field.onChange} {...field}>\n              <SelectTrigger\n                value={field.value}\n                onReset={() => {\n                  form.resetField(RerankId);\n                }}\n              >\n                <SelectValue placeholder={t('rerankPlaceholder')} />\n              </SelectTrigger>\n              <SelectContent>\n                {options.map((x) => (\n                  <SelectGroup key={x.label}>\n                    <SelectLabel>{x.label}</SelectLabel>\n                    {x.options.map((y) => (\n                      <SelectItem\n                        value={y.value}\n                        key={y.value}\n                        disabled={y.disabled}\n                      >\n                        {y.label}\n                      </SelectItem>\n                    ))}\n                  </SelectGroup>\n                ))}\n              </SelectContent>\n            </Select>\n          </FormControl>\n          <FormMessage />\n        </FormItem>\n      )}\n    />\n  );\n}\n\nexport function RerankFormFields() {\n  const { control, watch } = useFormContext();\n  const { t } = useTranslate('knowledgeDetails');\n  const rerankId = watch(RerankId);\n\n  return (\n    <>\n      <RerankFormField></RerankFormField>\n      {rerankId && (\n        <FormField\n          control={control}\n          name={'top_k'}\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>{t('topK')}</FormLabel>\n              <FormControl>\n                <SingleFormSlider\n                  {...field}\n                  max={2048}\n                  min={1}\n                ></SingleFormSlider>\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n      )}\n    </>\n  );\n}\n","import { useTranslate } from '@/hooks/common-hooks';\nimport { Form, Slider } from 'antd';\nimport { useFormContext } from 'react-hook-form';\nimport { SingleFormSlider } from '../ui/dual-range-slider';\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '../ui/form';\n\ntype FieldType = {\n  similarity_threshold?: number;\n  // vector_similarity_weight?: number;\n};\n\ninterface IProps {\n  isTooltipShown?: boolean;\n  vectorSimilarityWeightName?: string;\n}\n\nconst SimilaritySlider = ({\n  isTooltipShown = false,\n  vectorSimilarityWeightName = 'vector_similarity_weight',\n}: IProps) => {\n  const { t } = useTranslate('knowledgeDetails');\n\n  return (\n    <>\n      <Form.Item<FieldType>\n        label={t('similarityThreshold')}\n        name={'similarity_threshold'}\n        tooltip={isTooltipShown && t('similarityThresholdTip')}\n        initialValue={0.2}\n      >\n        <Slider max={1} step={0.01} />\n      </Form.Item>\n      <Form.Item\n        label={t('vectorSimilarityWeight')}\n        name={vectorSimilarityWeightName}\n        initialValue={1 - 0.3}\n        tooltip={isTooltipShown && t('vectorSimilarityWeightTip')}\n      >\n        <Slider max={1} step={0.01} />\n      </Form.Item>\n    </>\n  );\n};\n\nexport default SimilaritySlider;\n\ninterface SimilaritySliderFormFieldProps {\n  vectorSimilarityWeightName?: string;\n  isTooltipShown?: boolean;\n}\n\nexport function SimilaritySliderFormField({\n  vectorSimilarityWeightName = 'vector_similarity_weight',\n  isTooltipShown,\n}: SimilaritySliderFormFieldProps) {\n  const form = useFormContext();\n  const { t } = useTranslate('knowledgeDetails');\n\n  return (\n    <>\n      <FormField\n        control={form.control}\n        name={'similarity_threshold'}\n        render={({ field }) => (\n          <FormItem>\n            <FormLabel tooltip={isTooltipShown && t('similarityThresholdTip')}>\n              {t('similarityThreshold')}\n            </FormLabel>\n            <FormControl>\n              <SingleFormSlider\n                {...field}\n                max={1}\n                step={0.01}\n              ></SingleFormSlider>\n            </FormControl>\n            <FormMessage />\n          </FormItem>\n        )}\n      />\n      <FormField\n        control={form.control}\n        name={vectorSimilarityWeightName}\n        render={({ field }) => (\n          <FormItem>\n            <FormLabel\n              tooltip={isTooltipShown && t('vectorSimilarityWeightTip')}\n            >\n              {t('vectorSimilarityWeight')}\n            </FormLabel>\n            <FormControl>\n              <SingleFormSlider\n                {...field}\n                max={1}\n                step={0.01}\n              ></SingleFormSlider>\n            </FormControl>\n            <FormMessage />\n          </FormItem>\n        )}\n      />\n    </>\n  );\n}\n","import { useTranslate } from '@/hooks/common-hooks';\nimport { Form, Slider } from 'antd';\nimport { useFormContext } from 'react-hook-form';\nimport { SingleFormSlider } from './ui/dual-range-slider';\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from './ui/form';\n\ntype FieldType = {\n  top_n?: number;\n};\n\ninterface IProps {\n  initialValue?: number;\n  max?: number;\n}\n\nconst TopNItem = ({ initialValue = 8, max = 30 }: IProps) => {\n  const { t } = useTranslate('chat');\n\n  return (\n    <Form.Item<FieldType>\n      label={t('topN')}\n      name={'top_n'}\n      initialValue={initialValue}\n      tooltip={t('topNTip')}\n    >\n      <Slider max={max} />\n    </Form.Item>\n  );\n};\n\nexport default TopNItem;\n\ninterface SimilaritySliderFormFieldProps {\n  max?: number;\n}\n\nexport function TopNFormField({ max = 30 }: SimilaritySliderFormFieldProps) {\n  const form = useFormContext();\n  const { t } = useTranslate('chat');\n\n  return (\n    <FormField\n      control={form.control}\n      name={'top_n'}\n      render={({ field }) => (\n        <FormItem>\n          <FormLabel tooltip={t('topNTip')}>{t('topN')}</FormLabel>\n          <FormControl>\n            <SingleFormSlider {...field} max={max}></SingleFormSlider>\n          </FormControl>\n          <FormMessage />\n        </FormItem>\n      )}\n    />\n  );\n}\n","'use client';\n\nimport * as AvatarPrimitive from '@radix-ui/react-avatar';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      'relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full',\n      className,\n    )}\n    {...props}\n  />\n));\nAvatar.displayName = AvatarPrimitive.Root.displayName;\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn('aspect-square h-full w-full', className)}\n    {...props}\n  />\n));\nAvatarImage.displayName = AvatarPrimitive.Image.displayName;\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      'flex h-full w-full items-center justify-center rounded-full bg-muted',\n      className,\n    )}\n    {...props}\n  />\n));\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName;\n\nexport { Avatar, AvatarFallback, AvatarImage };\n","import { cva, type VariantProps } from 'class-variance-authority';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst badgeVariants = cva(\n  'inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\n  {\n    variants: {\n      variant: {\n        default:\n          'border-transparent bg-primary text-primary-foreground hover:bg-primary/80',\n        secondary:\n          'border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        destructive:\n          'border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80',\n        outline: 'text-foreground',\n        tertiary:\n          'border-transparent bg-colors-background-core-strong text-colors-text-persist-light hover:bg-colors-background-core-strong/80',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  },\n);\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants };\n","import { Slot } from '@radix-ui/react-slot';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst buttonVariants = cva(\n  'inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0',\n  {\n    variants: {\n      variant: {\n        default: 'bg-primary text-primary-foreground hover:bg-primary/90',\n        destructive:\n          'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n        outline:\n          'border border-colors-outline-sentiment-primary bg-background hover:bg-accent hover:text-accent-foreground',\n        secondary:\n          'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        ghost: 'hover:bg-accent hover:text-accent-foreground',\n        link: 'text-primary underline-offset-4 hover:underline',\n        tertiary:\n          'bg-colors-background-sentiment-solid-primary text-colors-text-persist-light hover:bg-colors-background-sentiment-solid-primary/80',\n        icon: 'bg-colors-background-inverse-standard text-foreground hover:bg-colors-background-inverse-standard/80',\n      },\n      size: {\n        default: 'h-10 px-4 py-2',\n        sm: 'h-9 rounded-md px-3',\n        lg: 'h-11 rounded-md px-8',\n        icon: 'h-10 w-10',\n        auto: 'h-full px-1',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  },\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : 'button';\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  },\n);\nButton.displayName = 'Button';\n\nexport { Button, buttonVariants };\n","'use client';\n\nimport * as DialogPrimitive from '@radix-ui/react-dialog';\nimport { X } from 'lucide-react';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Dialog = DialogPrimitive.Root;\n\nconst DialogTrigger = DialogPrimitive.Trigger;\n\nconst DialogPortal = DialogPrimitive.Portal;\n\nconst DialogClose = DialogPrimitive.Close;\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      'fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0',\n      className,\n    )}\n    {...props}\n  />\n));\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName;\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        'fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-colors-background-neutral-standard p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg',\n        className,\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n));\nDialogContent.displayName = DialogPrimitive.Content.displayName;\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      'flex flex-col space-y-1.5 text-center sm:text-left',\n      className,\n    )}\n    {...props}\n  />\n);\nDialogHeader.displayName = 'DialogHeader';\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      'flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2',\n      className,\n    )}\n    {...props}\n  />\n);\nDialogFooter.displayName = 'DialogFooter';\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      'text-lg font-semibold leading-none tracking-tight',\n      className,\n    )}\n    {...props}\n  />\n));\nDialogTitle.displayName = DialogPrimitive.Title.displayName;\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn('text-sm text-muted-foreground', className)}\n    {...props}\n  />\n));\nDialogDescription.displayName = DialogPrimitive.Description.displayName;\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n};\n","'use client';\n\nimport * as SliderPrimitive from '@radix-ui/react-slider';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\ninterface DualRangeSliderProps\n  extends React.ComponentProps<typeof SliderPrimitive.Root> {\n  labelPosition?: 'top' | 'bottom';\n  label?: (value: number | undefined) => React.ReactNode;\n}\n\nconst DualRangeSlider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  DualRangeSliderProps\n>(({ className, label, labelPosition = 'top', ...props }, ref) => {\n  const initialValue = Array.isArray(props.value)\n    ? props.value\n    : [props.min, props.max];\n\n  return (\n    <SliderPrimitive.Root\n      ref={ref}\n      className={cn(\n        'relative flex w-full touch-none select-none items-center',\n        className,\n      )}\n      {...props}\n    >\n      <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n        <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n      </SliderPrimitive.Track>\n      {initialValue.map((value, index) => (\n        <React.Fragment key={index}>\n          <SliderPrimitive.Thumb className=\"relative block h-4 w-4 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 cursor-pointer\">\n            {label && (\n              <span\n                className={cn(\n                  'absolute flex w-full justify-center',\n                  labelPosition === 'top' && '-top-7',\n                  labelPosition === 'bottom' && 'top-4',\n                )}\n              >\n                {label(value)}\n              </span>\n            )}\n          </SliderPrimitive.Thumb>\n        </React.Fragment>\n      ))}\n    </SliderPrimitive.Root>\n  );\n});\nDualRangeSlider.displayName = 'DualRangeSlider';\n\ntype SingleSliderProps = Omit<\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>,\n  'onChange' | 'value'\n> & { onChange: (value: number) => void; value: number };\n\nconst SingleFormSlider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  SingleSliderProps\n>(({ value, onChange, ...props }, ref) => {\n  return (\n    <DualRangeSlider\n      ref={ref}\n      label={(value) => value}\n      value={[value]}\n      onValueChange={(vals) => {\n        onChange(vals[0]);\n      }}\n      {...props}\n    />\n  );\n});\n\nexport { DualRangeSlider, SingleFormSlider };\n","'use client';\n\nimport * as LabelPrimitive from '@radix-ui/react-label';\nimport { Slot } from '@radix-ui/react-slot';\nimport * as React from 'react';\nimport {\n  Controller,\n  ControllerProps,\n  FieldPath,\n  FieldValues,\n  FormProvider,\n  useFormContext,\n} from 'react-hook-form';\n\nimport { Label } from '@/components/ui/label';\nimport { cn } from '@/lib/utils';\nimport { Info } from 'lucide-react';\nimport { Tooltip, TooltipContent, TooltipTrigger } from './tooltip';\n\nconst Form = FormProvider;\n\ntype FormItemContextValue = {\n  id: string;\n};\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue,\n);\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> = {\n  name: TName;\n};\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue,\n);\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  );\n};\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext);\n  const itemContext = React.useContext(FormItemContext);\n  const { getFieldState, formState } = useFormContext();\n\n  const fieldState = getFieldState(fieldContext.name, formState);\n\n  if (!fieldContext) {\n    throw new Error('useFormField should be used within <FormField>');\n  }\n\n  const { id } = itemContext;\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  };\n};\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId();\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn('space-y-2', className)} {...props} />\n    </FormItemContext.Provider>\n  );\n});\nFormItem.displayName = 'FormItem';\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> & {\n    tooltip?: React.ReactNode;\n  }\n>(({ className, tooltip, ...props }, ref) => {\n  const { error, formItemId } = useFormField();\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && 'text-destructive', className, 'flex')}\n      htmlFor={formItemId}\n      {...props}\n    >\n      {props.children}\n      {tooltip && (\n        <Tooltip>\n          <TooltipTrigger>\n            <Info className=\"size-3 ml-2\" />\n          </TooltipTrigger>\n          <TooltipContent>\n            <p>{tooltip}</p>\n          </TooltipContent>\n        </Tooltip>\n      )}\n    </Label>\n  );\n});\nFormLabel.displayName = 'FormLabel';\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } =\n    useFormField();\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  );\n});\nFormControl.displayName = 'FormControl';\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField();\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn('text-sm text-muted-foreground', className)}\n      {...props}\n    />\n  );\n});\nFormDescription.displayName = 'FormDescription';\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField();\n  const body = error ? String(error?.message) : children;\n\n  if (!body) {\n    return null;\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn('text-sm font-medium text-destructive', className)}\n      {...props}\n    >\n      {body}\n    </p>\n  );\n});\nFormMessage.displayName = 'FormMessage';\n\nexport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n  useFormField,\n};\n","'use client';\n\nimport * as LabelPrimitive from '@radix-ui/react-label';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst labelVariants = cva(\n  'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70',\n);\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n));\nLabel.displayName = LabelPrimitive.Root.displayName;\n\nexport { Label };\n","'use client';\n\nimport { type DialogProps } from '@radix-ui/react-dialog';\nimport { Command as CommandPrimitive } from 'cmdk';\nimport { Search } from 'lucide-react';\nimport * as React from 'react';\n\nimport { Dialog, DialogContent } from '@/components/ui/dialog';\nimport { cn } from '@/lib/utils';\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      'flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground',\n      className,\n    )}\n    {...props}\n  />\n));\nCommand.displayName = CommandPrimitive.displayName;\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        'flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50',\n        className,\n      )}\n      {...props}\n    />\n  </div>\n));\n\nCommandInput.displayName = CommandPrimitive.Input.displayName;\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn('max-h-[300px] overflow-y-auto overflow-x-hidden', className)}\n    {...props}\n  />\n));\n\nCommandList.displayName = CommandPrimitive.List.displayName;\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n));\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName;\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      'overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground',\n      className,\n    )}\n    {...props}\n  />\n));\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName;\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn('-mx-1 h-px bg-border', className)}\n    {...props}\n  />\n));\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName;\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className,\n    )}\n    {...props}\n  />\n));\n\nCommandItem.displayName = CommandPrimitive.Item.displayName;\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        'ml-auto text-xs tracking-widest text-muted-foreground',\n        className,\n      )}\n      {...props}\n    />\n  );\n};\nCommandShortcut.displayName = 'CommandShortcut';\n\nexport {\n  Command,\n  CommandDialog,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n  CommandSeparator,\n  CommandShortcut,\n};\n","// src/components/multi-select.tsx\n\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport {\n  CheckIcon,\n  ChevronDown,\n  WandSparkles,\n  XCircle,\n  XIcon,\n} from 'lucide-react';\nimport * as React from 'react';\n\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n  CommandSeparator,\n} from '@/components/ui/command';\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from '@/components/ui/popover';\nimport { Separator } from '@/components/ui/separator';\nimport { cn } from '@/lib/utils';\n\n/**\n * Variants for the multi-select component to handle different styles.\n * Uses class-variance-authority (cva) to define different styles based on \"variant\" prop.\n */\nconst multiSelectVariants = cva(\n  'm-1 transition ease-in-out delay-150 hover:-translate-y-1 hover:scale-110 duration-300',\n  {\n    variants: {\n      variant: {\n        default:\n          'border-foreground/10 text-foreground bg-card hover:bg-card/80',\n        secondary:\n          'border-foreground/10 bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        destructive:\n          'border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80',\n        inverted: 'inverted',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  },\n);\n\n/**\n * Props for MultiSelect component\n */\ninterface MultiSelectProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof multiSelectVariants> {\n  /**\n   * An array of option objects to be displayed in the multi-select component.\n   * Each option object has a label, value, and an optional icon.\n   */\n  options: {\n    /** The text to display for the option. */\n    label: string;\n    /** The unique value associated with the option. */\n    value: string;\n    /** Optional icon component to display alongside the option. */\n    icon?: React.ComponentType<{ className?: string }>;\n  }[];\n\n  /**\n   * Callback function triggered when the selected values change.\n   * Receives an array of the new selected values.\n   */\n  onValueChange: (value: string[]) => void;\n\n  /** The default selected values when the component mounts. */\n  defaultValue?: string[];\n\n  /**\n   * Placeholder text to be displayed when no values are selected.\n   * Optional, defaults to \"Select options\".\n   */\n  placeholder?: string;\n\n  /**\n   * Animation duration in seconds for the visual effects (e.g., bouncing badges).\n   * Optional, defaults to 0 (no animation).\n   */\n  animation?: number;\n\n  /**\n   * Maximum number of items to display. Extra selected items will be summarized.\n   * Optional, defaults to 3.\n   */\n  maxCount?: number;\n\n  /**\n   * The modality of the popover. When set to true, interaction with outside elements\n   * will be disabled and only popover content will be visible to screen readers.\n   * Optional, defaults to false.\n   */\n  modalPopover?: boolean;\n\n  /**\n   * If true, renders the multi-select component as a child of another component.\n   * Optional, defaults to false.\n   */\n  asChild?: boolean;\n\n  /**\n   * Additional class names to apply custom styles to the multi-select component.\n   * Optional, can be used to add custom styles.\n   */\n  className?: string;\n}\n\nexport const MultiSelect = React.forwardRef<\n  HTMLButtonElement,\n  MultiSelectProps\n>(\n  (\n    {\n      options,\n      onValueChange,\n      variant,\n      defaultValue = [],\n      placeholder = 'Select options',\n      animation = 0,\n      maxCount = 3,\n      modalPopover = false,\n      asChild = false,\n      className,\n      ...props\n    },\n    ref,\n  ) => {\n    const [selectedValues, setSelectedValues] =\n      React.useState<string[]>(defaultValue);\n    const [isPopoverOpen, setIsPopoverOpen] = React.useState(false);\n    const [isAnimating, setIsAnimating] = React.useState(false);\n\n    const handleInputKeyDown = (\n      event: React.KeyboardEvent<HTMLInputElement>,\n    ) => {\n      if (event.key === 'Enter') {\n        setIsPopoverOpen(true);\n      } else if (event.key === 'Backspace' && !event.currentTarget.value) {\n        const newSelectedValues = [...selectedValues];\n        newSelectedValues.pop();\n        setSelectedValues(newSelectedValues);\n        onValueChange(newSelectedValues);\n      }\n    };\n\n    const toggleOption = (option: string) => {\n      const newSelectedValues = selectedValues.includes(option)\n        ? selectedValues.filter((value) => value !== option)\n        : [...selectedValues, option];\n      setSelectedValues(newSelectedValues);\n      onValueChange(newSelectedValues);\n    };\n\n    const handleClear = () => {\n      setSelectedValues([]);\n      onValueChange([]);\n    };\n\n    const handleTogglePopover = () => {\n      setIsPopoverOpen((prev) => !prev);\n    };\n\n    const clearExtraOptions = () => {\n      const newSelectedValues = selectedValues.slice(0, maxCount);\n      setSelectedValues(newSelectedValues);\n      onValueChange(newSelectedValues);\n    };\n\n    const toggleAll = () => {\n      if (selectedValues.length === options.length) {\n        handleClear();\n      } else {\n        const allValues = options.map((option) => option.value);\n        setSelectedValues(allValues);\n        onValueChange(allValues);\n      }\n    };\n\n    return (\n      <Popover\n        open={isPopoverOpen}\n        onOpenChange={setIsPopoverOpen}\n        modal={modalPopover}\n      >\n        <PopoverTrigger asChild>\n          <Button\n            ref={ref}\n            {...props}\n            onClick={handleTogglePopover}\n            className={cn(\n              'flex w-full p-1 rounded-md border min-h-10 h-auto items-center justify-between bg-inherit hover:bg-inherit [&_svg]:pointer-events-auto',\n              className,\n            )}\n          >\n            {selectedValues.length > 0 ? (\n              <div className=\"flex justify-between items-center w-full\">\n                <div className=\"flex flex-wrap items-center\">\n                  {selectedValues.slice(0, maxCount).map((value) => {\n                    const option = options.find((o) => o.value === value);\n                    const IconComponent = option?.icon;\n                    return (\n                      <Badge\n                        key={value}\n                        className={cn(\n                          isAnimating ? 'animate-bounce' : '',\n                          multiSelectVariants({ variant }),\n                        )}\n                        style={{ animationDuration: `${animation}s` }}\n                      >\n                        {IconComponent && (\n                          <IconComponent className=\"h-4 w-4 mr-2\" />\n                        )}\n                        {option?.label}\n                        <XCircle\n                          className=\"ml-2 h-4 w-4 cursor-pointer\"\n                          onClick={(event) => {\n                            event.stopPropagation();\n                            toggleOption(value);\n                          }}\n                        />\n                      </Badge>\n                    );\n                  })}\n                  {selectedValues.length > maxCount && (\n                    <Badge\n                      className={cn(\n                        'bg-transparent text-foreground border-foreground/1 hover:bg-transparent',\n                        isAnimating ? 'animate-bounce' : '',\n                        multiSelectVariants({ variant }),\n                      )}\n                      style={{ animationDuration: `${animation}s` }}\n                    >\n                      {`+ ${selectedValues.length - maxCount} more`}\n                      <XCircle\n                        className=\"ml-2 h-4 w-4 cursor-pointer\"\n                        onClick={(event) => {\n                          event.stopPropagation();\n                          clearExtraOptions();\n                        }}\n                      />\n                    </Badge>\n                  )}\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <XIcon\n                    className=\"h-4 mx-2 cursor-pointer text-muted-foreground\"\n                    onClick={(event) => {\n                      event.stopPropagation();\n                      handleClear();\n                    }}\n                  />\n                  <Separator\n                    orientation=\"vertical\"\n                    className=\"flex min-h-6 h-full\"\n                  />\n                  <ChevronDown className=\"h-4 mx-2 cursor-pointer text-muted-foreground\" />\n                </div>\n              </div>\n            ) : (\n              <div className=\"flex items-center justify-between w-full mx-auto\">\n                <span className=\"text-sm text-muted-foreground mx-3\">\n                  {placeholder}\n                </span>\n                <ChevronDown className=\"h-4 cursor-pointer text-muted-foreground mx-2\" />\n              </div>\n            )}\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent\n          className=\"w-auto p-0\"\n          align=\"start\"\n          onEscapeKeyDown={() => setIsPopoverOpen(false)}\n        >\n          <Command>\n            <CommandInput\n              placeholder=\"Search...\"\n              onKeyDown={handleInputKeyDown}\n            />\n            <CommandList>\n              <CommandEmpty>No results found.</CommandEmpty>\n              <CommandGroup>\n                <CommandItem\n                  key=\"all\"\n                  onSelect={toggleAll}\n                  className=\"cursor-pointer\"\n                >\n                  <div\n                    className={cn(\n                      'mr-2 flex h-4 w-4 items-center justify-center rounded-sm border border-primary',\n                      selectedValues.length === options.length\n                        ? 'bg-primary text-primary-foreground'\n                        : 'opacity-50 [&_svg]:invisible',\n                    )}\n                  >\n                    <CheckIcon className=\"h-4 w-4\" />\n                  </div>\n                  <span>(Select All)</span>\n                </CommandItem>\n                {options.map((option) => {\n                  const isSelected = selectedValues.includes(option.value);\n                  return (\n                    <CommandItem\n                      key={option.value}\n                      onSelect={() => toggleOption(option.value)}\n                      className=\"cursor-pointer\"\n                    >\n                      <div\n                        className={cn(\n                          'mr-2 flex h-4 w-4 items-center justify-center rounded-sm border border-primary',\n                          isSelected\n                            ? 'bg-primary text-primary-foreground'\n                            : 'opacity-50 [&_svg]:invisible',\n                        )}\n                      >\n                        <CheckIcon className=\"h-4 w-4\" />\n                      </div>\n                      {option.icon && (\n                        <option.icon className=\"mr-2 h-4 w-4 text-muted-foreground\" />\n                      )}\n                      <span>{option.label}</span>\n                    </CommandItem>\n                  );\n                })}\n              </CommandGroup>\n              <CommandSeparator />\n              <CommandGroup>\n                <div className=\"flex items-center justify-between\">\n                  {selectedValues.length > 0 && (\n                    <>\n                      <CommandItem\n                        onSelect={handleClear}\n                        className=\"flex-1 justify-center cursor-pointer\"\n                      >\n                        Clear\n                      </CommandItem>\n                      <Separator\n                        orientation=\"vertical\"\n                        className=\"flex min-h-6 h-full\"\n                      />\n                    </>\n                  )}\n                  <CommandItem\n                    onSelect={() => setIsPopoverOpen(false)}\n                    className=\"flex-1 justify-center cursor-pointer max-w-full\"\n                  >\n                    Close\n                  </CommandItem>\n                </div>\n              </CommandGroup>\n            </CommandList>\n          </Command>\n        </PopoverContent>\n        {animation > 0 && selectedValues.length > 0 && (\n          <WandSparkles\n            className={cn(\n              'cursor-pointer my-2 text-foreground bg-background w-3 h-3',\n              isAnimating ? '' : 'text-muted-foreground',\n            )}\n            onClick={() => setIsAnimating(!isAnimating)}\n          />\n        )}\n      </Popover>\n    );\n  },\n);\n\nMultiSelect.displayName = 'MultiSelect';\n","'use client';\n\nimport * as PopoverPrimitive from '@radix-ui/react-popover';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Popover = PopoverPrimitive.Root;\n\nconst PopoverTrigger = PopoverPrimitive.Trigger;\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = 'center', sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        'z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n        className,\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n));\nPopoverContent.displayName = PopoverPrimitive.Content.displayName;\n\nexport { Popover, PopoverContent, PopoverTrigger };\n","'use client';\n\nimport * as SelectPrimitive from '@radix-ui/react-select';\nimport { Check, ChevronDown, ChevronUp, X } from 'lucide-react';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\nimport { ControllerRenderProps } from 'react-hook-form';\n\nimport { FormControl } from '@/components/ui/form';\nimport { forwardRef, useCallback, useEffect } from 'react';\n\nconst Select = SelectPrimitive.Root;\n\nconst SelectGroup = SelectPrimitive.Group;\n\nconst SelectValue = SelectPrimitive.Value;\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger> & {\n    onReset?: () => void;\n    allowClear?: boolean;\n  }\n>(({ className, children, value, onReset, allowClear, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      'flex h-10 w-full items-center justify-between rounded-md border border-input bg-colors-background-inverse-weak px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1',\n      className,\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon\n      asChild\n      onPointerDown={(event) => {\n        event.stopPropagation();\n      }}\n    >\n      {value && allowClear ? (\n        <X className=\"h-4 w-4 opacity-50 cursor-pointer\" onClick={onReset} />\n      ) : (\n        <ChevronDown className=\"h-4 w-4 opacity-50\" />\n      )}\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n));\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName;\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      'flex cursor-default items-center justify-center py-1',\n      className,\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n));\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName;\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      'flex cursor-default items-center justify-center py-1',\n      className,\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n));\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName;\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = 'popper', ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        'relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n        position === 'popper' &&\n          'data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1',\n        className,\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          'p-1',\n          position === 'popper' &&\n            'h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]',\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n));\nSelectContent.displayName = SelectPrimitive.Content.displayName;\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn('py-1.5 pl-8 pr-2 text-sm font-semibold', className)}\n    {...props}\n  />\n));\nSelectLabel.displayName = SelectPrimitive.Label.displayName;\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      'relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\n      className,\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n));\nSelectItem.displayName = SelectPrimitive.Item.displayName;\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn('-mx-1 my-1 h-px bg-muted', className)}\n    {...props}\n  />\n));\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName;\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n};\n\nexport type RAGFlowSelectOptionType = {\n  label: React.ReactNode;\n  value: string;\n  disabled?: boolean;\n};\n\nexport type RAGFlowSelectGroupOptionType = {\n  label: React.ReactNode;\n  options: RAGFlowSelectOptionType[];\n};\n\nexport type RAGFlowSelectProps = Partial<ControllerRenderProps> & {\n  FormControlComponent?: typeof FormControl;\n  options?: (RAGFlowSelectOptionType | RAGFlowSelectGroupOptionType)[];\n  allowClear?: boolean;\n  placeholder?: React.ReactNode;\n  contentProps?: React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>;\n} & SelectPrimitive.SelectProps;\n\n/**\n *\n * Reference:\n * https://github.com/shadcn-ui/ui/discussions/638\n * https://github.com/radix-ui/primitives/discussions/2645#discussioncomment-8343397\n *\n * @export\n * @param {(Partial<ControllerRenderProps> & {\n *   FormControlComponent?: typeof FormControl;\n * })} {\n *   value: initialValue,\n *   onChange,\n *   FormControlComponent,\n * }\n * @return {*}\n */\nexport const RAGFlowSelect = forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  RAGFlowSelectProps\n>(function (\n  {\n    value: initialValue,\n    onChange,\n    FormControlComponent,\n    options = [],\n    allowClear,\n    placeholder,\n    contentProps = {},\n  },\n  ref,\n) {\n  const [key, setKey] = React.useState(+new Date());\n  const [value, setValue] = React.useState<string | undefined>(undefined);\n\n  const FormControlWidget = FormControlComponent\n    ? FormControlComponent\n    : ({ children }: React.PropsWithChildren) => <div>{children}</div>;\n\n  const handleChange = useCallback(\n    (val?: string) => {\n      setValue(val);\n      onChange?.(val);\n    },\n    [onChange],\n  );\n\n  const handleReset = useCallback(() => {\n    handleChange(undefined);\n    setKey(+new Date());\n  }, [handleChange]);\n\n  useEffect(() => {\n    setValue((preValue) => {\n      if (preValue !== initialValue) {\n        return initialValue;\n      }\n      return preValue;\n    });\n  }, [initialValue]);\n\n  return (\n    <Select onValueChange={handleChange} value={value} key={key}>\n      <FormControlWidget>\n        <SelectTrigger\n          className=\"bg-colors-background-inverse-weak\"\n          value={value}\n          onReset={handleReset}\n          allowClear={allowClear}\n          ref={ref}\n        >\n          <SelectValue placeholder={placeholder} />\n        </SelectTrigger>\n      </FormControlWidget>\n      <SelectContent {...contentProps}>\n        {options.map((o, idx) => {\n          if ('value' in o) {\n            return (\n              <SelectItem\n                value={o.value as RAGFlowSelectOptionType['value']}\n                key={o.value}\n                disabled={o.disabled}\n              >\n                {o.label}\n              </SelectItem>\n            );\n          }\n\n          return (\n            <SelectGroup key={idx}>\n              <SelectLabel>{o.label}</SelectLabel>\n              {o.options.map((x) => (\n                <SelectItem value={x.value} key={x.value} disabled={x.disabled}>\n                  {x.label}\n                </SelectItem>\n              ))}\n            </SelectGroup>\n          );\n        })}\n      </SelectContent>\n    </Select>\n  );\n});\n\nRAGFlowSelect.displayName = 'RAGFlowSelect';\n","'use client';\n\nimport * as SeparatorPrimitive from '@radix-ui/react-separator';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = 'horizontal', decorative = true, ...props },\n    ref,\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        'shrink-0 bg-border',\n        orientation === 'horizontal' ? 'h-[1px] w-full' : 'h-full w-[1px]',\n        className,\n      )}\n      {...props}\n    />\n  ),\n);\nSeparator.displayName = SeparatorPrimitive.Root.displayName;\n\nexport { Separator };\n","'use client';\n\nimport * as SwitchPrimitives from '@radix-ui/react-switch';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      'peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-colors-background-core-standard data-[state=unchecked]:bg-colors-background-inverse-standard',\n      className,\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        'pointer-events-none block h-5 w-5 rounded-full bg-colors-text-neutral-strong shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0',\n      )}\n    />\n  </SwitchPrimitives.Root>\n));\nSwitch.displayName = SwitchPrimitives.Root.displayName;\n\nexport { Switch };\n","import { LlmIcon } from '@/components/svg-icon';\nimport { LlmModelType } from '@/constants/knowledge';\nimport { ResponseGetType } from '@/interfaces/database/base';\nimport {\n  IFactory,\n  IMyLlmValue,\n  IThirdOAIModelCollection as IThirdAiModelCollection,\n  IThirdOAIModel,\n  IThirdOAIModelCollection,\n} from '@/interfaces/database/llm';\nimport {\n  IAddLlmRequestBody,\n  IDeleteLlmRequestBody,\n} from '@/interfaces/request/llm';\nimport userService from '@/services/user-service';\nimport { sortLLmFactoryListBySpecifiedOrder } from '@/utils/common-util';\nimport { getLLMIconName, getRealModelName } from '@/utils/llm-util';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { Flex, message } from 'antd';\nimport { DefaultOptionType } from 'antd/es/select';\nimport { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport const useFetchLlmList = (\n  modelType?: LlmModelType,\n): IThirdAiModelCollection => {\n  const { data } = useQuery({\n    queryKey: ['llmList'],\n    initialData: {},\n    queryFn: async () => {\n      const { data } = await userService.llm_list({ model_type: modelType });\n\n      return data?.data ?? {};\n    },\n  });\n\n  return data;\n};\n\nexport const useSelectLlmOptions = () => {\n  const llmInfo: IThirdOAIModelCollection = useFetchLlmList();\n\n  const embeddingModelOptions = useMemo(() => {\n    return Object.entries(llmInfo).map(([key, value]) => {\n      return {\n        label: key,\n        options: value.map((x) => ({\n          label: getRealModelName(x.llm_name),\n          value: `${x.llm_name}@${x.fid}`,\n          disabled: !x.available,\n        })),\n      };\n    });\n  }, [llmInfo]);\n\n  return embeddingModelOptions;\n};\n\nfunction buildLlmOptionsWithIcon(x: IThirdOAIModel) {\n  return {\n    label: (\n      <Flex align=\"center\" gap={6}>\n        <LlmIcon\n          name={getLLMIconName(x.fid, x.llm_name)}\n          width={26}\n          height={26}\n          size={'small'}\n        />\n        <span>{getRealModelName(x.llm_name)}</span>\n      </Flex>\n    ),\n    value: `${x.llm_name}@${x.fid}`,\n    disabled: !x.available,\n  };\n}\n\nexport const useSelectLlmOptionsByModelType = () => {\n  const llmInfo: IThirdOAIModelCollection = useFetchLlmList();\n\n  const groupImage2TextOptions = () => {\n    const modelType = LlmModelType.Image2text;\n    const modelTag = modelType.toUpperCase();\n\n    return Object.entries(llmInfo)\n      .map(([key, value]) => {\n        return {\n          label: key,\n          options: value\n            .filter(\n              (x) =>\n                (x.model_type.includes(modelType) ||\n                  (x.tags && x.tags.includes(modelTag))) &&\n                x.available,\n            )\n            .map(buildLlmOptionsWithIcon),\n        };\n      })\n      .filter((x) => x.options.length > 0);\n  };\n\n  const groupOptionsByModelType = (modelType: LlmModelType) => {\n    return Object.entries(llmInfo)\n      .filter(([, value]) =>\n        modelType ? value.some((x) => x.model_type.includes(modelType)) : true,\n      )\n      .map(([key, value]) => {\n        return {\n          label: key,\n          options: value\n            .filter(\n              (x) =>\n                (modelType ? x.model_type.includes(modelType) : true) &&\n                x.available,\n            )\n            .map(buildLlmOptionsWithIcon),\n        };\n      })\n      .filter((x) => x.options.length > 0);\n  };\n\n  return {\n    [LlmModelType.Chat]: groupOptionsByModelType(LlmModelType.Chat),\n    [LlmModelType.Embedding]: groupOptionsByModelType(LlmModelType.Embedding),\n    [LlmModelType.Image2text]: groupImage2TextOptions(),\n    [LlmModelType.Speech2text]: groupOptionsByModelType(\n      LlmModelType.Speech2text,\n    ),\n    [LlmModelType.Rerank]: groupOptionsByModelType(LlmModelType.Rerank),\n    [LlmModelType.TTS]: groupOptionsByModelType(LlmModelType.TTS),\n  };\n};\n\nexport const useComposeLlmOptionsByModelTypes = (\n  modelTypes: LlmModelType[],\n) => {\n  const allOptions = useSelectLlmOptionsByModelType();\n\n  return modelTypes.reduce<\n    (DefaultOptionType & {\n      options: { label: JSX.Element; value: string; disabled: boolean }[];\n    })[]\n  >((pre, cur) => {\n    const options = allOptions[cur];\n    options.forEach((x) => {\n      const item = pre.find((y) => y.label === x.label);\n      if (item) {\n        item.options.push(...x.options);\n      } else {\n        pre.push(x);\n      }\n    });\n\n    return pre;\n  }, []);\n};\n\nexport const useFetchLlmFactoryList = (): ResponseGetType<IFactory[]> => {\n  const { data, isFetching: loading } = useQuery({\n    queryKey: ['factoryList'],\n    initialData: [],\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await userService.factories_list();\n\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading };\n};\n\nexport type LlmItem = { name: string; logo: string } & IMyLlmValue;\n\nexport const useFetchMyLlmList = (): ResponseGetType<\n  Record<string, IMyLlmValue>\n> => {\n  const { data, isFetching: loading } = useQuery({\n    queryKey: ['myLlmList'],\n    initialData: {},\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await userService.my_llm();\n\n      return data?.data ?? {};\n    },\n  });\n\n  return { data, loading };\n};\n\nexport const useSelectLlmList = () => {\n  const { data: myLlmList, loading: myLlmListLoading } = useFetchMyLlmList();\n  const { data: factoryList, loading: factoryListLoading } =\n    useFetchLlmFactoryList();\n\n  const nextMyLlmList: Array<LlmItem> = useMemo(() => {\n    return Object.entries(myLlmList).map(([key, value]) => ({\n      name: key,\n      logo: factoryList.find((x) => x.name === key)?.logo ?? '',\n      ...value,\n      llm: value.llm.map((x) => ({ ...x, name: x.name })),\n    }));\n  }, [myLlmList, factoryList]);\n\n  const nextFactoryList = useMemo(() => {\n    const currentList = factoryList.filter((x) =>\n      Object.keys(myLlmList).every((y) => y !== x.name),\n    );\n    return sortLLmFactoryListBySpecifiedOrder(currentList);\n  }, [factoryList, myLlmList]);\n\n  return {\n    myLlmList: nextMyLlmList,\n    factoryList: nextFactoryList,\n    loading: myLlmListLoading || factoryListLoading,\n  };\n};\n\nexport interface IApiKeySavingParams {\n  llm_factory: string;\n  api_key: string;\n  llm_name?: string;\n  model_type?: string;\n  base_url?: string;\n}\n\nexport const useSaveApiKey = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['saveApiKey'],\n    mutationFn: async (params: IApiKeySavingParams) => {\n      const { data } = await userService.set_api_key(params);\n      if (data.code === 0) {\n        message.success(t('message.modified'));\n        queryClient.invalidateQueries({ queryKey: ['myLlmList'] });\n        queryClient.invalidateQueries({ queryKey: ['factoryList'] });\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, saveApiKey: mutateAsync };\n};\n\nexport interface ISystemModelSettingSavingParams {\n  tenant_id: string;\n  name?: string;\n  asr_id: string;\n  embd_id: string;\n  img2txt_id: string;\n  llm_id: string;\n}\n\nexport const useSaveTenantInfo = () => {\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['saveTenantInfo'],\n    mutationFn: async (params: ISystemModelSettingSavingParams) => {\n      const { data } = await userService.set_tenant_info(params);\n      if (data.code === 0) {\n        message.success(t('message.modified'));\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, saveTenantInfo: mutateAsync };\n};\n\nexport const useAddLlm = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['addLlm'],\n    mutationFn: async (params: IAddLlmRequestBody) => {\n      const { data } = await userService.add_llm(params);\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['myLlmList'] });\n        queryClient.invalidateQueries({ queryKey: ['factoryList'] });\n        message.success(t('message.modified'));\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, addLlm: mutateAsync };\n};\n\nexport const useDeleteLlm = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['deleteLlm'],\n    mutationFn: async (params: IDeleteLlmRequestBody) => {\n      const { data } = await userService.delete_llm(params);\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['myLlmList'] });\n        queryClient.invalidateQueries({ queryKey: ['factoryList'] });\n        message.success(t('message.deleted'));\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, deleteLlm: mutateAsync };\n};\n\nexport const useDeleteFactory = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['deleteFactory'],\n    mutationFn: async (params: IDeleteLlmRequestBody) => {\n      const { data } = await userService.deleteFactory(params);\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['myLlmList'] });\n        queryClient.invalidateQueries({ queryKey: ['factoryList'] });\n        message.success(t('message.deleted'));\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, deleteFactory: mutateAsync };\n};\n","export const getLLMIconName = (fid: string, llm_name: string) => {\n  if (fid === 'FastEmbed') {\n    return llm_name.split('/').at(0) ?? '';\n  }\n\n  return fid;\n};\n\nexport const getLlmNameAndFIdByLlmId = (llmId?: string) => {\n  const [llmName, fId] = llmId?.split('@') || [];\n\n  return { fId, llmName };\n};\n\n// The names of the large models returned by the interface are similar to \"deepseek-r1___OpenAI-API\"\nexport function getRealModelName(llmName: string) {\n  return llmName.split('__').at(0) ?? '';\n}\n"],"names":["KnowledgeBaseFormField","form","useFormContext","t","useTranslate","knowledgeOptions","useFetchKnowledgeList","list","filter","x","parser_id","DocumentParserType","Tag","map","label","name","value","id","icon","_jsxs","Avatar","className","children","_jsx","AvatarImage","src","avatar","AvatarFallback","Book","FormField","control","render","_ref2","field","FormItem","FormLabel","FormControl","MultiSelect","_objectSpread","options","onValueChange","onChange","placeholder","variant","maxCount","defaultValue","_ref","_ref$required","required","Space","AntAvatar","size","UserOutlined","Form","Item","tooltip","rules","message","type","Select","mode","RerankItem","allOptions","useSelectLlmOptionsByModelType","AntSelect","LlmModelType","Rerank","allowClear","_Fragment","noStyle","dependencies","getFieldValue","initialValue","Slider","max","min","RerankId","RerankFormField","SelectTrigger","onReset","resetField","SelectValue","SelectContent","SelectGroup","SelectLabel","y","SelectItem","disabled","FormMessage","RerankFormFields","_useFormContext","watch","rerankId","_ref3","SingleFormSlider","SimilaritySliderFormField","_ref2$vectorSimilarit","vectorSimilarityWeightName","isTooltipShown","step","_ref4","_ref$isTooltipShown","_ref$vectorSimilarity","TopNFormField","_ref2$max","_ref$initialValue","_ref$max","_excluded","_excluded2","_excluded3","React","ref","props","_objectWithoutProperties","AvatarPrimitive","cn","displayName","badgeVariants","cva","variants","default","secondary","destructive","outline","tertiary","defaultVariants","Badge","buttonVariants","ghost","link","sm","lg","auto","Button","_ref$asChild","asChild","Comp","Slot","_excluded4","_excluded5","_excluded6","Dialog","DialogPrimitive","DialogPortal","DialogOverlay","DialogContent","X","DialogHeader","DialogFooter","DialogTitle","_ref5","_ref6","DualRangeSlider","_ref$labelPosition","labelPosition","Array","isArray","SliderPrimitive","index","vals","FormProvider","FormItemContext","FormFieldContext","Object","assign","_objectDestructuringEmpty","Provider","Controller","useFormField","fieldContext","itemContext","getFieldState","formState","fieldState","Error","formItemId","concat","formDescriptionId","formMessageId","_useFormField","error","Label","htmlFor","Tooltip","TooltipTrigger","Info","TooltipContent","_useFormField2","FormDescription","_useFormField4","body","String","labelVariants","LabelPrimitive","_excluded7","Command","CommandPrimitive","CommandInput","Search","Input","CommandList","List","CommandEmpty","Empty","CommandGroup","Group","CommandSeparator","Separator","CommandItem","_ref7","multiSelectVariants","inverted","_ref$defaultValue","_ref$placeholder","_ref$animation","animation","_ref$maxCount","_ref$modalPopover","modalPopover","_React$useState","_React$useState2","_slicedToArray","selectedValues","setSelectedValues","_React$useState3","_React$useState4","isPopoverOpen","setIsPopoverOpen","_React$useState5","_React$useState6","isAnimating","setIsAnimating","toggleOption","option","newSelectedValues","includes","_toConsumableArray","handleClear","Popover","open","onOpenChange","modal","PopoverTrigger","onClick","prev","length","slice","find","o","IconComponent","style","animationDuration","XCircle","event","stopPropagation","XIcon","orientation","ChevronDown","PopoverContent","align","onEscapeKeyDown","onKeyDown","key","currentTarget","pop","onSelect","allValues","CheckIcon","isSelected","WandSparkles","PopoverPrimitive","_ref$align","_ref$sideOffset","sideOffset","SelectPrimitive","onPointerDown","SelectScrollUpButton","ChevronUp","SelectScrollDownButton","_ref4$position","position","Check","RAGFlowSelect","forwardRef","_ref8","FormControlComponent","_ref8$options","_ref8$contentProps","contentProps","Date","setKey","undefined","setValue","FormControlWidget","_ref9","handleChange","useCallback","val","handleReset","useEffect","preValue","idx","_ref$orientation","_ref$decorative","decorative","SeparatorPrimitive","Switch","SwitchPrimitives","useFetchLlmList","modelType","_queryFn","_useQuery","useQuery","queryKey","initialData","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_data$data","_yield$userService$ll","data","wrap","_context","next","userService","llm_list","model_type","sent","abrupt","stop","apply","arguments","buildLlmOptionsWithIcon","Flex","gap","LlmIcon","getLLMIconName","fid","llm_name","width","height","getRealModelName","available","modelTag","llmInfo","groupOptionsByModelType","entries","some","_defineProperty","Chat","Embedding","Image2text","toUpperCase","tags","Speech2text","TTS","useComposeLlmOptionsByModelTypes","modelTypes","reduce","pre","cur","forEach","_item$options","item","push","useSelectLlmList","_queryFn3","_useQuery3","_queryFn2","_useQuery2","_useFetchMyLlmList","gcTime","_callee3","_data$data3","_yield$userService$my","_context3","my_llm","loading","isFetching","myLlmList","myLlmListLoading","_useFetchLlmFactoryLi","_callee2","_data$data2","_yield$userService$fa","_context2","factories_list","factoryList","factoryListLoading","useMemo","_ref10","_factoryList$find$log","_factoryList$find","_ref11","logo","llm","currentList","keys","every","sortLLmFactoryListBySpecifiedOrder","useSaveApiKey","_mutationFn","queryClient","useQueryClient","useTranslation","_useMutation","useMutation","mutationKey","mutationFn","_callee4","params","_yield$userService$se","_context4","set_api_key","code","success","invalidateQueries","_x","isPending","saveApiKey","mutateAsync","useSaveTenantInfo","_mutationFn2","_useMutation2","_callee5","_yield$userService$se2","_context5","set_tenant_info","_x2","saveTenantInfo","useAddLlm","_mutationFn3","_useMutation3","_callee6","_yield$userService$ad","_context6","add_llm","_x3","addLlm","useDeleteLlm","_mutationFn4","_useMutation4","_callee7","_yield$userService$de","_context7","delete_llm","_x4","deleteLlm","useDeleteFactory","_mutationFn5","_useMutation5","_callee8","_yield$userService$de2","_context8","deleteFactory","_x5","_llm_name$split$at","split","at","getLlmNameAndFIdByLlmId","llmId","llmName","fId","_llmName$split$at"],"sourceRoot":""}