{"version":3,"file":"1282.d69f8a04.async.js","mappings":"mIAOmBA,E,gJAQfC,EAA+C,GAEnD,IAVmBD,EAWKE,EAAAA,OAAtBD,EAVaD,EAAeG,OAAOC,KAAI,SAACC,GAEtC,MAAO,CAAEC,KADID,EAAIE,QAAQ,iBAAkB,MAC5BC,MAAOR,EAAeK,GACvC,GAQF,CAAE,MAAOI,GACPC,QAAQC,KAAKF,GACbR,EAAY,EACd,CASA,IAAMW,EAAU,SAAHC,GAAgE,IAA1DP,EAAIO,EAAJP,KAAMQ,EAAKD,EAALC,MAAOC,EAAMF,EAANE,OAAQC,EAAQH,EAARG,SAAaC,EAASC,IAAAL,EAAAM,GACtDC,EAAWnB,EAAUoB,MAAK,SAACC,GAAI,OAAKA,EAAKhB,OAASA,CAAI,IAC5D,OACEiB,EAAAA,EAAAA,KAACC,EAAAA,EAAIC,IAAA,CACHC,UAAW,kBACTH,EAAAA,EAAAA,KAAA,OACEI,IAAKP,aAAQ,EAARA,EAAUZ,MACfoB,IAAI,GACJd,MAAOA,EACPC,OAAQA,EACRc,WAAWC,EAAAA,EAAAA,IAAGd,EAAU,eACxB,GAECC,GAGX,EAEac,EAAU,SAAHC,GAYd,IAXJ1B,EAAI0B,EAAJ1B,KAAI2B,EAAAD,EACJjB,OAAAA,OAAM,IAAAkB,EAAG,GAAEA,EAAAC,EAAAF,EACXlB,MAAAA,OAAK,IAAAoB,EAAG,GAAEA,EAAAC,EAAAH,EACVI,KAAAA,OAAI,IAAAD,EAAG,QAAOA,EACdnB,EAAQgB,EAARhB,SAQMqB,EAAOC,EAAAA,EAAQhC,GAErB,OAAO+B,GACLd,EAAAA,EAAAA,KAACX,EAAO,CACNN,KAAI,OAAAiC,OAASF,GACbvB,MAAOA,EACPC,OAAQA,EACRC,SAAUA,KAGZO,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CAACC,MAAM,SAASL,KAAMA,EAAMC,MAAMd,EAAAA,EAAAA,KAACmB,EAAAA,EAAY,KAE1D,EAEA,K,6WC5EavB,EAAA,cAAAwB,EAAA,wBAAAC,EAAA,cAAAC,EAAA,yBAmBPC,EAAOC,EAAAA,GAMPC,EAAkBC,EAAAA,cACtB,CAAC,GAUGC,EAAmBD,EAAAA,cACvB,CAAC,GAGGE,EAAY,SAAHtC,GAK6B,IADvCuC,EAAKC,OAAAC,OAAA,IAAAC,IAAA1C,GAAAA,IAER,OACEU,EAAAA,EAAAA,KAAC2B,EAAiBM,SAAQ,CAAChD,MAAO,CAAEF,KAAM8C,EAAM9C,MAAOmD,UACrDlC,EAAAA,EAAAA,KAACmC,EAAAA,GAAUjC,IAAA,GAAK2B,KAGtB,EAEMO,EAAe,WACnB,IAAMC,EAAeX,EAAAA,WAAiBC,GAChCW,EAAcZ,EAAAA,WAAiBD,GACrCc,GAAqCC,EAAAA,EAAAA,MAA7BC,EAAaF,EAAbE,cAAeC,EAASH,EAATG,UAEjBC,EAAaF,EAAcJ,EAAatD,KAAM2D,GAEpD,IAAKL,EACH,MAAM,IAAIO,MAAM,kDAGlB,IAAQC,EAAOP,EAAPO,GAER,OAAA3C,IAAA,CACE2C,GAAAA,EACA9D,KAAMsD,EAAatD,KACnB+D,WAAY,GAAF9B,OAAK6B,EAAE,cACjBE,kBAAmB,GAAF/B,OAAK6B,EAAE,0BACxBG,cAAe,GAAFhC,OAAK6B,EAAE,uBACjBF,EAEP,EAEMM,EAAWvB,EAAAA,YAGf,SAAAjB,EAA0ByC,GAAQ,IAA/B5C,EAASG,EAATH,UAAcuB,EAAKlC,IAAAc,EAAAb,GAChBiD,EAAKnB,EAAAA,QAEX,OACE1B,EAAAA,EAAAA,KAACyB,EAAgBQ,SAAQ,CAAChD,MAAO,CAAE4D,GAAAA,GAAKX,UACtClC,EAAAA,EAAAA,KAAA,MAAAE,IAAA,CAAKgD,IAAKA,EAAK5C,WAAWC,EAAAA,EAAAA,IAAG,YAAaD,IAAgBuB,KAGhE,IACAoB,EAASE,YAAc,WAEvB,IAAMC,EAAY1B,EAAAA,YAKhB,SAAA2B,EAAmCH,GAAQ,IAAxC5C,EAAS+C,EAAT/C,UAAWgD,EAAOD,EAAPC,QAAYzB,EAAKlC,IAAA0D,EAAAjC,GAC/BmC,EAA8BnB,IAAtBlD,EAAKqE,EAALrE,MAAO4D,EAAUS,EAAVT,WAEf,OACEU,EAAAA,EAAAA,MAACC,EAAAA,EAAKvD,IAAAA,IAAA,CACJgD,IAAKA,EACL5C,WAAWC,EAAAA,EAAAA,IAAGrB,GAAS,mBAAoBoB,EAAW,QACtDoD,QAASZ,GACLjB,GAAK,IAAAK,SAAA,CAERL,EAAMK,SACNoB,IACCE,EAAAA,EAAAA,MAACG,EAAAA,EAAO,CAAAzB,SAAA,EACNlC,EAAAA,EAAAA,KAAC4D,EAAAA,GAAc,CAAA1B,UACblC,EAAAA,EAAAA,KAAC6D,EAAAA,EAAI,CAACvD,UAAU,mBAElBN,EAAAA,EAAAA,KAAC8D,EAAAA,GAAc,CAAA5B,UACblC,EAAAA,EAAAA,KAAA,KAAAkC,SAAIoB,YAMhB,IACAF,EAAUD,YAAc,YAExB,IAAMY,EAAcrC,EAAAA,YAGlB,SAAAsC,EAAed,GAAQ,IAAjBrB,EAAKC,OAAAC,OAAA,IAAAC,IAAAgC,GAAAA,IACXC,EACE7B,IADMlD,EAAK+E,EAAL/E,MAAO4D,EAAUmB,EAAVnB,WAAYC,EAAiBkB,EAAjBlB,kBAAmBC,EAAaiB,EAAbjB,cAG9C,OACEhD,EAAAA,EAAAA,KAACkE,EAAAA,GAAIhE,IAAA,CACHgD,IAAKA,EACLL,GAAIC,EACJ,mBACG5D,EACuB,GAAA8B,OACjB+B,EAAiB,KAAA/B,OAAIgC,GAFtB,GAAAhC,OACC+B,GAGT,iBAAgB7D,GACZ2C,GAGV,IACAkC,EAAYZ,YAAc,cAE1B,IAAMgB,EAAkBzC,EAAAA,YAGtB,SAAA0C,EAA0BlB,GAAQ,IAA/B5C,EAAS8D,EAAT9D,UAAcuB,EAAKlC,IAAAyE,EAAA/C,GACd0B,EAAsBX,IAAtBW,kBAER,OACE/C,EAAAA,EAAAA,KAAA,IAAAE,IAAA,CACEgD,IAAKA,EACLL,GAAIE,EACJzC,WAAWC,EAAAA,EAAAA,IAAG,gCAAiCD,IAC3CuB,GAGV,IACAsC,EAAgBhB,YAAc,kBAE9B,IAAMkB,EAAc3C,EAAAA,YAGlB,SAAA4C,EAAoCpB,GAAQ,IAAzC5C,EAASgE,EAAThE,UAAW4B,EAAQoC,EAARpC,SAAaL,EAAKlC,IAAA2E,EAAAhD,GAChCiD,EAAiCnC,IAAzBlD,EAAKqF,EAALrF,MAAO8D,EAAauB,EAAbvB,cACTwB,EAAOtF,EAAQuF,OAAOvF,aAAK,EAALA,EAAOwF,SAAWxC,EAE9C,OAAKsC,GAKHxE,EAAAA,EAAAA,KAAA,IAAAE,IAAAA,IAAA,CACEgD,IAAKA,EACLL,GAAIG,EACJ1C,WAAWC,EAAAA,EAAAA,IAAG,uCAAwCD,IAClDuB,GAAK,IAAAK,SAERsC,KAVI,IAaX,IACAH,EAAYlB,YAAc,a,wKCvLbvD,EAAA,cAQP+E,GAAgBC,EAAAA,EAAAA,GACpB,8FAGInB,EAAQ/B,EAAAA,YAIZ,SAAApC,EAA0B4D,GAAG,IAA1B5C,EAAShB,EAATgB,UAAcuB,EAAKlC,IAAAL,EAAAM,GAAA,OACtBI,EAAAA,EAAAA,KAAC6E,EAAAA,EAAmB3E,IAAA,CAClBgD,IAAKA,EACL5C,WAAWC,EAAAA,EAAAA,IAAGoE,IAAiBrE,IAC3BuB,GACJ,IAEJ4B,EAAMN,YAAc0B,EAAAA,EAAoB1B,W,6rBCM3B2B,EAAqB,WAChC,IAAAC,GAAuBC,EAAAA,EAAAA,MAGvB,OAHwCC,IAAAF,EAAA,GAArB,GACkBG,IAAI,OAEf,EAC5B,EAEaC,EAAqC,WAChD,IAMSC,EANHC,EAAkBP,IAExBQ,GAAsCC,EAAAA,EAAAA,GAAqB,CACzDC,SAAU,CAAC,wBACXC,YAAa,CAAC,EACdC,OAAQ,EACRC,SAAOP,EAAAQ,IAAAC,MAAAC,MAAE,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAL,MAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACgBC,EAAAA,GAAUC,cAAc,CAC7CC,MAAOpB,IACP,OAFU,OAEVY,EAAAG,EAAAM,KAFMR,EAAID,EAAJC,KAAIE,EAAAO,OAAA,SAGK,QAHLX,EAGLE,aAAI,EAAJA,EAAMA,YAAI,IAAAF,EAAAA,EAAI,CAAC,GAAC,wBAAAI,EAAAQ,OAAA,GAAAb,EAAA,KACxB,kBAAAX,EAAAyB,MAAA,KAAAC,UAAA,KAGH,MAAO,CAAEZ,KAZGZ,EAAJY,KAYOa,QAZkBzB,EAAnB0B,WAahB,EAEaC,EAAwB,WAKhC,IAKMC,EATTC,EAAwCL,UAAAM,OAAA,QAAAC,IAAAP,UAAA,IAAAA,UAAA,GAKxCQ,GAAsC/B,EAAAA,EAAAA,GAAS,CAC7CC,SAAU,CAAC,sBACXC,YAAa,GACbC,OAAQ,EACRC,SAAOuB,EAAAtB,IAAAC,MAAAC,MAAE,SAAAyB,IAAA,IAAAC,EAAAC,EAAAC,EAAAxB,EAAAyB,EAAA,OAAA9B,MAAAM,MAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAAAsB,EAAAtB,KAAA,EACgBC,EAAAA,GAAUsB,UAAS,OACR,OADQH,EAAAE,EAAAlB,KAAlCR,EAAIwB,EAAJxB,KACFyB,EAAsB,QAAlBH,EAAGtB,SAAU,QAANuB,EAAJvB,EAAMA,YAAI,IAAAuB,OAAA,EAAVA,EAAYK,WAAG,IAAAN,EAAAA,EAAI,GAAEI,EAAAjB,OAAA,SAC3BQ,EACHQ,EAAKI,QAAO,SAACC,GAAa,OAAKA,EAAEC,UAAY,CAAC,IAC9CN,GAAI,wBAAAC,EAAAhB,OAAA,GAAAW,EAAA,KACT,kBAAAL,EAAAL,MAAA,KAAAC,UAAA,KAGH,MAAO,CAAEa,KAbGL,EAAJpB,KAaaa,QAbYO,EAAnBN,WAchB,EAEakB,EAA4B,WACvC,IAAQP,EAASV,IAATU,KAOR,OALgBA,aAAI,EAAJA,EAAM9I,KAAI,SAACkB,GAAI,MAAM,CACnCoI,MAAOpI,EAAKhB,KACZE,MAAOc,EAAK8C,GACb,GAGH,EAEauF,EAAgC,WAC3C,IAcSC,EAdTC,GAA4CC,EAAAA,EAAAA,MAApCC,EAAYF,EAAZE,aAAcC,EAAiBH,EAAjBG,kBAChBC,GAAwBC,EAAAA,EAAAA,GAAYH,EAAc,CAAEI,KAAM,MAGhEC,GAQIC,EAAAA,EAAAA,GAAiB,CACnBtD,SAAU,CAAC,6BAA8BkD,GACzC/C,SAAO0C,EAAAzC,IAAAC,MAAAC,MAAE,SAAAiD,EAAAzJ,GAAA,IAAA0J,EAAAC,EAAAC,EAAAhD,EAAAyB,EAAA,OAAA9B,MAAAM,MAAA,SAAAgD,GAAA,cAAAA,EAAA9C,KAAA8C,EAAA7C,MAAA,OAAkB,OAAT2C,EAAS3J,EAAT2J,UAASE,EAAA7C,KAAA,EACFC,EAAAA,GAAUsB,QAAQ,CACvCuB,KAAMH,EACNI,UAdW,GAeXC,SAAUZ,IACV,OAC2B,OAD3BQ,EAAAC,EAAAzC,KAJMR,EAAIgD,EAAJhD,KAKFyB,EAAiB,QAAbqB,EAAG9C,aAAI,EAAJA,EAAMA,YAAI,IAAA8C,EAAAA,EAAI,GAAEG,EAAAxC,OAAA,SACtBgB,GAAI,wBAAAwB,EAAAvC,OAAA,GAAAmC,EAAA,KACZ,SAAAQ,GAAA,OAAAlB,EAAAxB,MAAA,KAAAC,UAAA,GACD0C,iBAAkB,EAClBC,iBAAkB,SAACC,EAAUC,EAAOC,GAClC,GAtBa,GAsBTA,GAA4BF,EAASG,MACvC,OAAOD,EAAgB,CAG3B,IAxBA1D,EAAI2C,EAAJ3C,KACAhH,EAAK2J,EAAL3J,MACA4K,EAAajB,EAAbiB,cACAC,EAAWlB,EAAXkB,YACA/C,EAAU6B,EAAV7B,WAsBF,MAAO,CACLd,KAAAA,EACAa,QAASC,EACT9H,MAAAA,EACA4K,cAAAA,EACAC,YAAAA,EACA/C,WAAAA,EACAgD,mBA5BkBnB,EAAlBmB,mBA6BAC,OA5BMpB,EAANoB,OA6BAxB,kBAAAA,EACAD,aAAAA,EAEJ,EAEa0B,EAAqB,WAChC,IAOYC,EAPNC,GAAcC,EAAAA,EAAAA,MACpBC,GAIIC,EAAAA,EAAAA,GAAY,CACdC,YAAa,CAAC,mBACdC,YAAUN,EAAAvE,IAAAC,MAAAC,MAAE,SAAA4E,EAAOC,GAAqC,IAAAC,EAAAC,EAAA3E,EAAA,OAAAL,MAAAM,MAAA,SAAA2E,GAAA,cAAAA,EAAAzE,KAAAyE,EAAAxE,MAAA,cAAAwE,EAAAxE,KAAA,EAC1BC,EAAAA,GAAUwE,SAASJ,GAAO,OAMrD,OANqDC,EAAAE,EAAApE,KAAAmE,EAAAD,EAA9C1E,KACU,KADVA,OAAI,IAAA2E,EAAG,CAAC,EAACA,GACRG,OACPtG,EAAAA,GAAQuG,QACNC,EAAAA,EAAKC,EAAE,WAADnK,OAAY2J,SAAAA,EAAQ9H,GAAK,WAAa,aAE9CuH,EAAYgB,kBAAkB,CAAE5F,SAAU,CAAC,yBAC5CsF,EAAAnE,OAAA,SACMT,GAAI,wBAAA4E,EAAAlE,OAAA,GAAA8D,EAAA,KACZ,SAAAW,GAAA,OAAAlB,EAAAtD,MAAA,KAAAC,UAAA,KAGH,MAAO,CAAEZ,KAjBHoE,EAAJpE,KAiBaa,QAhBKuD,EAAlBgB,UAgBsBC,gBAfXjB,EAAXkB,YAgBJ,EAEaC,EAAqB,WAChC,IAOYC,EAPNtB,GAAcC,EAAAA,EAAAA,MACpBsB,GAIIpB,EAAAA,EAAAA,GAAY,CACdC,YAAa,CAAC,mBACdC,YAAUiB,EAAA9F,IAAAC,MAAAC,MAAE,SAAA8F,EAAO/I,GAAU,IAAAgJ,EAAAC,EAAA5F,EAAA,OAAAL,MAAAM,MAAA,SAAA4F,GAAA,cAAAA,EAAA1F,KAAA0F,EAAAzF,MAAA,cAAAyF,EAAAzF,KAAA,EACJC,EAAAA,GAAUyF,KAAK,CAAEvF,MAAO5D,IAAK,OAMnD,OANmDiJ,EAAAC,EAAArF,KAClC,KADVR,EAAI4F,EAAJ5F,MACC8E,OACPtG,EAAAA,GAAQuG,QAAQC,EAAAA,EAAKC,EAAE,oBACvBf,EAAYgB,kBAAkB,CAC5B5F,SAAU,CAAC,iCAEduG,EAAApF,OAAA,SACgB,QADhBkF,EACM3F,aAAI,EAAJA,EAAMA,YAAI,IAAA2F,EAAAA,EAAI,IAAE,wBAAAE,EAAAnF,OAAA,GAAAgF,EAAA,KACxB,SAAAK,GAAA,OAAAP,EAAA7E,MAAA,KAAAC,UAAA,KAGH,MAAO,CAAEZ,KAjBHyF,EAAJzF,KAiBaa,QAhBK4E,EAAlBL,UAgBsBY,gBAfXP,EAAXH,YAgBJ,EAIaW,EAAqB,WAChC,IAQYC,EARN/G,EAAkBP,IAClBsF,GAAcC,EAAAA,EAAAA,MACpBgC,GAII9B,EAAAA,EAAAA,GAAY,CACdC,YAAa,CAAC,iBACdC,YAAU2B,EAAAxG,IAAAC,MAAAC,MAAE,SAAAwG,EAAO3B,GAA2B,IAAA4B,EAAAC,EAAAtG,EAAA,OAAAL,MAAAM,MAAA,SAAAsG,GAAA,cAAAA,EAAApG,KAAAoG,EAAAnG,MAAA,cAAAmG,EAAAnG,KAAA,EAChBC,EAAAA,GAAUmG,SAAQxM,IAAC,CAC7CuG,MAAOpB,GACJsF,IACH,OAID,OAJC4B,EAAAE,EAAA/F,KAAA8F,EAAAD,EAHMrG,KAIU,KAJVA,OAAI,IAAAsG,EAAG,CAAC,EAACA,GAIRxB,OACPtG,EAAAA,GAAQuG,QAAQC,EAAAA,EAAKC,EAAE,oBACvBf,EAAYgB,kBAAkB,CAAE5F,SAAU,CAAC,2BAC5CiH,EAAA9F,OAAA,SACMT,GAAI,wBAAAuG,EAAA7F,OAAA,GAAA0F,EAAA,KACZ,SAAAK,GAAA,OAAAP,EAAAvF,MAAA,KAAAC,UAAA,KAGH,MAAO,CAAEZ,KAlBHmG,EAAJnG,KAkBaa,QAjBKsF,EAAlBf,UAiBsBsB,2BAhBXP,EAAXb,YAiBJ,EAMaqB,EAAwB,WAGnC,IAUYC,EAVNzH,EAAkBP,IACxBiI,GAAiCC,EAAAA,EAAAA,MAAzB5D,EAAI2D,EAAJ3D,KAAY6D,EAAQF,EAAdlM,KAEdqM,GAII3C,EAAAA,EAAAA,GAAY,CACdC,YAAa,CAAC,aACd9E,OAAQ,EACR+E,YAAUqC,EAAAlH,IAAAC,MAAAC,MAAE,SAAAqH,EAAOC,GAAW,IAAAC,EAAAC,EAAAC,EAAArH,EAAAsH,EAAA,OAAA3H,MAAAM,MAAA,SAAAsH,GAAA,cAAAA,EAAApH,KAAAoH,EAAAnH,MAAA,cAAAmH,EAAAnH,KAAA,EACLC,EAAAA,GAAUmH,eAAcxN,IAAAA,IAAC,CAAC,EAC5CkN,GAAM,IACT3G,MAAmB,QAAd4G,EAAED,EAAO3G,aAAK,IAAA4G,EAAAA,EAAIhI,EACvB+D,KAAAA,EACAvI,KAAMoM,KACN,OALU,GAKVM,EAAAE,EAAA/G,KACgB,KANVR,EAAIqH,EAAJrH,MAMC8E,KAAU,CAAAyC,EAAAnH,KAAA,QACI,OAAfkH,EAAMtH,EAAKA,KAAIuH,EAAA9G,OAAA,SAAAzG,IAAAA,IAAA,GAEhBsN,GAAG,IACNG,UAAWH,EAAII,YAAQ,cAAAH,EAAA9G,OAAA,SAIf,QAJe2G,EAIzBpH,aAAI,EAAJA,EAAMA,YAAI,IAAAoH,EAAAA,EAAI,CACZO,OAAQ,GACRF,UAAW,GACX9D,MAAO,IACR,wBAAA4D,EAAA7G,OAAA,GAAAuG,EAAA,KAEJ,SAAAW,GAAA,OAAAhB,EAAAjG,MAAA,KAAAC,UAAA,KA3BDZ,EAAIgH,EAAJhH,KA8BF,MAAO,CACLA,KAAMA,QAAAA,EAAQ,CAAE2H,OAAQ,GAAIF,UAAW,GAAI9D,MAAO,GAClD9C,QA/BkBmG,EAAlB5B,UAgCAyC,UA/BWb,EAAX1B,YAiCJ,EAEawC,EAAoB,WAC/B,OAAOC,EAAAA,EAAAA,GAAc,CAAEzD,YAAa,CAAC,eAAkB,CACzD,EAEa0D,EAAyB,WAAsB,IAAAC,EAO1D,OAAmB,QAAnBA,GANaC,EAAAA,EAAAA,GAAiB,CAC5BC,QAAS,CAAE7D,YAAa,CAAC,cACzB8D,OAAQ,SAACC,GACP,OAAOA,EAASC,MAAMtI,IACxB,IAEWuI,IAAI,UAAE,IAAAN,EAAAA,EAAI,CACrBN,OAAQ,GACRF,UAAW,GACX9D,MAAO,EAEX,EAEa6E,EAA4B,WAOvC,MAAyB,aANVN,EAAAA,EAAAA,GAAiB,CAC9BC,QAAS,CAAE7D,YAAa,CAAC,cACzB8D,OAAQ,SAACC,GACP,OAAOA,EAASC,MAAMvE,MACxB,IAEYwE,IAAI,EACpB,EAKaE,EAAkB,WAC7B,IAMSC,EANHvJ,EAAkBP,IAExB+J,GAAsCtJ,EAAAA,EAAAA,GAAkC,CACtEC,SAAU,CAAC,gBACXC,YAAa,GACbC,OAAQ,EACRC,SAAOiJ,EAAAhJ,IAAAC,MAAAC,MAAE,SAAAgJ,IAAA,IAAAC,EAAA7I,EAAAyB,EAAA,OAAA9B,MAAAM,MAAA,SAAA6I,GAAA,cAAAA,EAAA3I,KAAA2I,EAAA1I,MAAA,cAAA0I,EAAA1I,KAAA,GACgB2I,EAAAA,EAAAA,IAAQ5J,GAAgB,OAClB,OADkB0J,EAAAC,EAAAtI,KAAvCR,EAAI6I,EAAJ7I,KACFyB,GAAOzB,aAAI,EAAJA,EAAMA,OAAQ,GAAE8I,EAAArI,OAAA,SACtBgB,GAAI,wBAAAqH,EAAApI,OAAA,GAAAkI,EAAA,KACZ,kBAAAF,EAAA/H,MAAA,KAAAC,UAAA,KAGH,MAAO,CAAEa,KAXGkH,EAAJ3I,KAWaa,QAXY8H,EAAnB7H,WAYhB,EAEakI,EAAe,WAC1B,IASYC,EATN9J,EAAkBP,IAElBsF,GAAcC,EAAAA,EAAAA,MACpB+E,GAII7E,EAAAA,EAAAA,GAAY,CACdC,YAAa,CAAC,aACdC,YAAU0E,EAAAvJ,IAAAC,MAAAC,MAAE,SAAAuJ,EAAOC,GAAc,IAAAC,EAAAC,EAAAtJ,EAAA,OAAAL,MAAAM,MAAA,SAAAsJ,GAAA,cAAAA,EAAApJ,KAAAoJ,EAAAnJ,MAAA,cAAAmJ,EAAAnJ,KAAA,GACRoJ,EAAAA,EAAAA,IAAUrK,EAAiBiK,GAAK,OAMtD,OANsDE,EAAAC,EAAA/I,KACrC,KADVR,EAAIsJ,EAAJtJ,MACC8E,OACPtG,EAAAA,GAAQuG,QAAQC,EAAAA,EAAKC,EAAE,oBACvBf,EAAYgB,kBAAkB,CAC5B5F,SAAU,CAAC,mBAEdiK,EAAA9I,OAAA,SACgB,QADhB4I,EACMrJ,aAAI,EAAJA,EAAMA,YAAI,IAAAqJ,EAAAA,EAAI,IAAE,wBAAAE,EAAA7I,OAAA,GAAAyI,EAAA,KACxB,SAAAM,GAAA,OAAAR,EAAAtI,MAAA,KAAAC,UAAA,KAGH,MAAO,CAAEZ,KAjBHkJ,EAAJlJ,KAiBaa,QAhBKqI,EAAlB9D,UAgBsBsE,UAfXR,EAAX5D,YAgBJ,EAEaqE,EAAe,WAC1B,IASYC,EATNzK,EAAkBP,IAElBsF,GAAcC,EAAAA,EAAAA,MACpB0F,GAIIxF,EAAAA,EAAAA,GAAY,CACdC,YAAa,CAAC,aACdC,YAAUqF,EAAAlK,IAAAC,MAAAC,MAAE,SAAAkK,EAAOrF,GAAkB,IAAAsF,EAAAC,EAAAhK,EAAA,OAAAL,MAAAM,MAAA,SAAAgK,GAAA,cAAAA,EAAA9J,KAAA8J,EAAA7J,MAAA,cAAA6J,EAAA7J,KAAA,GACZ8J,EAAAA,EAAAA,IAAU/K,EAAiBsF,GAAO,OAMxD,OANwDuF,EAAAC,EAAAzJ,KACvC,KADVR,EAAIgK,EAAJhK,MACC8E,OACPtG,EAAAA,GAAQuG,QAAQC,EAAAA,EAAKC,EAAE,qBACvBf,EAAYgB,kBAAkB,CAC5B5F,SAAU,CAAC,mBAEd2K,EAAAxJ,OAAA,SACgB,QADhBsJ,EACM/J,aAAI,EAAJA,EAAMA,YAAI,IAAA+J,EAAAA,EAAI,IAAE,wBAAAE,EAAAvJ,OAAA,GAAAoJ,EAAA,KACxB,SAAAK,GAAA,OAAAP,EAAAjJ,MAAA,KAAAC,UAAA,KAGH,MAAO,CAAEZ,KAjBH6J,EAAJ7J,KAiBaa,QAhBKgJ,EAAlBzE,UAgBsB8E,UAfXL,EAAXvE,YAgBJ,EAEa8E,EAAmB,WAC9B,OAAOrC,EAAAA,EAAAA,GAAc,CAAEzD,YAAa,CAAC,eAAkB,CACzD,EAEa+F,EAAgC,WAC3C,IAOSC,EAPTC,GAAwCC,EAAAA,EAAAA,UAAmB,IAAGC,EAAA1L,IAAAwL,EAAA,GAAvDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAEpCG,GAAsCvL,EAAAA,EAAAA,GAAkC,CACtEC,SAAU,CAAC,8BACXuL,QAASH,EAAaxJ,OAAS,EAC/B3B,YAAa,GACbC,OAAQ,EACRC,SAAO6K,EAAA5K,IAAAC,MAAAC,MAAE,SAAAkL,IAAA,IAAAC,EAAA/K,EAAAyB,EAAA,OAAA9B,MAAAM,MAAA,SAAA+K,GAAA,cAAAA,EAAA7K,KAAA6K,EAAA5K,MAAA,cAAA4K,EAAA5K,KAAA,EACgBC,EAAAA,GAAU4K,sBAAsB,CACrDC,OAAQR,EAAaS,KAAK,OAC1B,OAC2B,OAD3BJ,EAAAC,EAAAxK,KAFMR,EAAI+K,EAAJ/K,KAGFyB,GAAOzB,aAAI,EAAJA,EAAMA,OAAQ,GAAEgL,EAAAvK,OAAA,SACtBgB,GAAI,wBAAAuJ,EAAAtK,OAAA,GAAAoK,EAAA,KACZ,kBAAAR,EAAA3J,MAAA,KAAAC,UAAA,KAGH,MAAO,CAAEa,KAdGmJ,EAAJ5K,KAcaa,QAdY+J,EAAnB9J,WAcgB6J,gBAAAA,EAChC,EAIO,SAASS,IACd,IAOSC,EAPHlM,EAAkBP,IAExB0M,GAAsCjM,EAAAA,EAAAA,GAA0B,CAC9DC,SAAU,CAAC,sBAAuBH,GAClCI,YAAa,CAAEgM,MAAO,CAAC,EAAGC,SAAU,CAAC,GACrCX,UAAW1L,EACXK,OAAQ,EACRC,SAAO4L,EAAA3L,IAAAC,MAAAC,MAAE,SAAA6L,IAAA,IAAAC,EAAA1L,EAAA,OAAAL,MAAAM,MAAA,SAAA0L,GAAA,cAAAA,EAAAxL,KAAAwL,EAAAvL,MAAA,cAAAuL,EAAAvL,KAAA,GACgBwL,EAAAA,EAAAA,IAAkBzM,GAAgB,OAA7C,OAA6CuM,EAAAC,EAAAnL,KAAjDR,EAAI0L,EAAJ1L,KAAI2L,EAAAlL,OAAA,SACLT,aAAI,EAAJA,EAAMA,MAAI,wBAAA2L,EAAAjL,OAAA,GAAA+K,EAAA,KAClB,kBAAAJ,EAAA1K,MAAA,KAAAC,UAAA,KAGH,MAAO,CAAEZ,KAXGsL,EAAJtL,KAWOa,QAXkByK,EAAnBxK,WAYhB,C,qfClXa+K,EAAkB,SAC7BC,GAEA,IAGS5M,EAHTE,GAAiBC,EAAAA,EAAAA,GAAS,CACxBC,SAAU,CAAC,WACXC,YAAa,CAAC,EACdE,SAAOP,EAAAQ,IAAAC,MAAAC,MAAE,SAAAC,IAAA,IAAAC,EAAAiM,EAAA/L,EAAA,OAAAL,MAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACgB4L,EAAAA,GAAYC,SAAS,CAAEC,WAAYJ,IAAY,OAA1D,OAA0DC,EAAA7L,EAAAM,KAA9DR,EAAI+L,EAAJ/L,KAAIE,EAAAO,OAAA,SAEK,QAFLX,EAELE,aAAI,EAAJA,EAAMA,YAAI,IAAAF,EAAAA,EAAI,CAAC,GAAC,wBAAAI,EAAAQ,OAAA,GAAAb,EAAA,KACxB,kBAAAX,EAAAyB,MAAA,KAAAC,UAAA,KAGH,OAVYxB,EAAJY,IAWV,EAqBA,SAASmM,EAAwBrK,GAC/B,MAAO,CACLG,OACE3E,EAAAA,EAAAA,MAAC8O,EAAAA,EAAI,CAACC,MAAM,SAASC,IAAK,EAAEtQ,SAAA,EAC1BlC,EAAAA,EAAAA,KAACQ,EAAAA,EAAO,CACNzB,MAAM0T,EAAAA,EAAAA,IAAezK,EAAE0K,IAAK1K,EAAE2K,UAC9BpT,MAAO,GACPC,OAAQ,GACRqB,KAAM,WAERb,EAAAA,EAAAA,KAAA,QAAAkC,UAAO0Q,EAAAA,EAAAA,IAAiB5K,EAAE2K,eAG9B1T,MAAO,GAAF+B,OAAKgH,EAAE2K,SAAQ,KAAA3R,OAAIgH,EAAE0K,KAC1BG,UAAW7K,EAAE8K,UAEjB,CAEO,IAAMC,EAAiC,WAC5C,IAGQf,EACAgB,EAJFC,EAAoClB,IAuBpCmB,EAA0B,SAAClB,GAC/B,OAAOlQ,OAAOqR,QAAQF,GACnBlL,QAAO,SAAA3D,GAAA,IAAInF,EAAJgG,IAAAb,EAAA,GAAS,UACf4N,GAAY/S,EAAMmU,MAAK,SAACpL,GAAC,OAAKA,EAAEoK,WAAWiB,SAASrB,EAAU,GAAQ,IAEvEnT,KAAI,SAAAyU,GAAkB,IAAAC,EAAAtO,IAAAqO,EAAA,GACrB,MAAO,CACLnL,MAFMoL,EAAA,GAGNC,QAHaD,EAAA,GAIVxL,QACC,SAACC,GAAC,QACCgK,GAAYhK,EAAEoK,WAAWiB,SAASrB,KACnChK,EAAE8K,SAAS,IAEdjU,IAAIwT,GAEX,IACCtK,QAAO,SAACC,GAAC,OAAKA,EAAEwL,QAAQpM,OAAS,CAAC,GACvC,EAEA,OAAAqM,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAA,GACGC,EAAAA,GAAaC,KAAOT,EAAwBQ,EAAAA,GAAaC,OACzDD,EAAAA,GAAaE,UAAYV,EAAwBQ,EAAAA,GAAaE,YAC9DF,EAAAA,GAAaG,YA3CR7B,EAAY0B,EAAAA,GAAaG,WACzBb,EAAWhB,EAAU8B,cAEpBhS,OAAOqR,QAAQF,GACnBpU,KAAI,SAAAwE,GAAkB,IAAAW,EAAAiB,IAAA5B,EAAA,GACrB,MAAO,CACL8E,MAFMnE,EAAA,GAGNwP,QAHaxP,EAAA,GAIV+D,QACC,SAACC,GAAC,OACCA,EAAEoK,WAAWiB,SAASrB,IACpBhK,EAAEsH,MAAQtH,EAAEsH,KAAK+D,SAASL,KAC7BhL,EAAE8K,SAAS,IAEdjU,IAAIwT,GAEX,IACCtK,QAAO,SAACC,GAAC,OAAKA,EAAEwL,QAAQpM,OAAS,CAAC,MA2BpCsM,EAAAA,GAAaK,YAAcb,EAC1BQ,EAAAA,GAAaK,cAEdL,EAAAA,GAAaM,OAASd,EAAwBQ,EAAAA,GAAaM,SAC3DN,EAAAA,GAAaO,IAAMf,EAAwBQ,EAAAA,GAAaO,KAE7D,EAEaC,EAAmC,SAC9CC,GAEA,IAAMC,EAAarB,IAEnB,OAAOoB,EAAWE,QAIhB,SAACC,EAAKC,GAWN,OAVgBH,EAAWG,GACnBC,SAAQ,SAACxM,GACf,IACUyM,EADJ1U,EAAOuU,EAAIxU,MAAK,SAAC4U,GAAC,OAAKA,EAAEvM,QAAUH,EAAEG,KAAK,IAC5CpI,GACF0U,EAAA1U,EAAKyT,SAAQmB,KAAI9N,MAAA4N,EAAAG,IAAI5M,EAAEwL,UAEvBc,EAAIK,KAAK3M,EAEb,IAEOsM,CACT,GAAG,GACL,EAoCaO,EAAmB,WAC9B,IAXSxM,EAJTwG,EAfS3H,EAJTI,EAkCAwN,GAfAjG,GAAsCtJ,EAAAA,EAAAA,GAAS,CAC7CC,SAAU,CAAC,aACXC,YAAa,CAAC,EACdC,OAAQ,EACRC,SAAO0C,EAAAzC,IAAAC,MAAAC,MAAE,SAAAiD,IAAA,IAAAC,EAAA+L,EAAA7O,EAAA,OAAAL,MAAAM,MAAA,SAAAgD,GAAA,cAAAA,EAAA9C,KAAA8C,EAAA7C,MAAA,cAAA6C,EAAA7C,KAAA,EACgB4L,EAAAA,GAAY8C,SAAQ,OAA/B,OAA+BD,EAAA5L,EAAAzC,KAAnCR,EAAI6O,EAAJ7O,KAAIiD,EAAAxC,OAAA,SAEK,QAFLqC,EAEL9C,aAAI,EAAJA,EAAMA,YAAI,IAAA8C,EAAAA,EAAI,CAAC,GAAC,wBAAAG,EAAAvC,OAAA,GAAAmC,EAAA,KACxB,kBAAAV,EAAAxB,MAAA,KAAAC,UAAA,KAGI,CAAEZ,KAXG2I,EAAJ3I,KAWOa,QAXkB8H,EAAnB7H,aAeAiO,EAASH,EAAf5O,KAA0BgP,EAAgBJ,EAAzB/N,QACzBoO,GAnCA7N,GAAsC/B,EAAAA,EAAAA,GAAS,CAC7CC,SAAU,CAAC,eACXC,YAAa,GACbC,OAAQ,EACRC,SAAOuB,EAAAtB,IAAAC,MAAAC,MAAE,SAAAyB,IAAA,IAAAE,EAAA2N,EAAAlP,EAAA,OAAAL,MAAAM,MAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAAAsB,EAAAtB,KAAA,EACgB4L,EAAAA,GAAYmD,iBAAgB,OAAvC,OAAuCD,EAAAxN,EAAAlB,KAA3CR,EAAIkP,EAAJlP,KAAI0B,EAAAjB,OAAA,SAEK,QAFLc,EAELvB,aAAI,EAAJA,EAAMA,YAAI,IAAAuB,EAAAA,EAAI,IAAE,wBAAAG,EAAAhB,OAAA,GAAAW,EAAA,KACxB,kBAAAL,EAAAL,MAAA,KAAAC,UAAA,KAGI,CAAEZ,KAXGoB,EAAJpB,KAWOa,QAXkBO,EAAnBN,aAmCAsO,EAAWH,EAAjBjP,KAA4BqP,EAAkBJ,EAA3BpO,QAmB3B,MAAO,CACLkO,WAjBoCO,EAAAA,EAAAA,UAAQ,WAC5C,OAAO1T,OAAOqR,QAAQ8B,GAAWpW,KAAI,SAAA4W,GAAA,IAAAC,EAAAC,EAAAC,EAAA3Q,IAAAwQ,EAAA,GAAE3W,EAAG8W,EAAA,GAAE3W,EAAK2W,EAAA,UAAA1V,IAAAA,IAAA,CAC/CnB,KAAMD,EACN+W,KAAmD,QAA/CH,EAAyC,QAAzCC,EAAEL,EAAYxV,MAAK,SAACkI,GAAC,OAAKA,EAAEjJ,OAASD,CAAG,WAAC,IAAA6W,OAAA,EAAvCA,EAAyCE,YAAI,IAAAH,EAAAA,EAAI,IACpDzW,GAAK,IACR6W,IAAK7W,EAAM6W,IAAIjX,KAAI,SAACmJ,GAAC,OAAA9H,IAAAA,IAAA,GAAW8H,GAAC,IAAEjJ,KAAMiJ,EAAEjJ,MAAI,KAAI,GAEvD,GAAG,CAACkW,EAAWK,IAWbA,aATsBE,EAAAA,EAAAA,UAAQ,WAC9B,IAAMO,EAAcT,EAAYvN,QAAO,SAACC,GAAC,OACvClG,OAAOlD,KAAKqW,GAAWe,OAAM,SAACtB,GAAC,OAAKA,IAAM1M,EAAEjJ,IAAI,GAAC,IAEnD,OAAOkX,EAAAA,EAAAA,IAAmCF,EAC5C,GAAG,CAACT,EAAaL,IAKflO,QAASmO,GAAoBK,EAEjC,EAUaW,EAAgB,WAC3B,IAQY/L,EARNC,GAAcC,EAAAA,EAAAA,MACZc,GAAMgL,EAAAA,EAAAA,MAANhL,EACRb,GAIIC,EAAAA,EAAAA,GAAY,CACdC,YAAa,CAAC,cACdC,YAAUN,EAAAvE,IAAAC,MAAAC,MAAE,SAAA4E,EAAOC,GAA2B,IAAAyL,EAAAlQ,EAAA,OAAAL,MAAAM,MAAA,SAAA2E,GAAA,cAAAA,EAAAzE,KAAAyE,EAAAxE,MAAA,cAAAwE,EAAAxE,KAAA,EACrB4L,EAAAA,GAAYmE,YAAY1L,GAAO,OAKrD,OALqDyL,EAAAtL,EAAApE,KACpC,KADVR,EAAIkQ,EAAJlQ,MACC8E,OACPtG,EAAAA,GAAQuG,QAAQE,EAAE,qBAClBf,EAAYgB,kBAAkB,CAAE5F,SAAU,CAAC,eAC3C4E,EAAYgB,kBAAkB,CAAE5F,SAAU,CAAC,kBAC5CsF,EAAAnE,OAAA,SACMT,EAAK8E,MAAI,wBAAAF,EAAAlE,OAAA,GAAA8D,EAAA,KACjB,SAAAnB,GAAA,OAAAY,EAAAtD,MAAA,KAAAC,UAAA,KAGH,MAAO,CAAEZ,KAhBHoE,EAAJpE,KAgBaa,QAfKuD,EAAlBgB,UAesBgL,WAdXhM,EAAXkB,YAeJ,EAWa+K,EAAoB,WAC/B,IAOY7K,EAPJP,GAAMgL,EAAAA,EAAAA,MAANhL,EACRQ,GAIIpB,EAAAA,EAAAA,GAAY,CACdC,YAAa,CAAC,kBACdC,YAAUiB,EAAA9F,IAAAC,MAAAC,MAAE,SAAA8F,EAAOjB,GAAuC,IAAA6L,EAAAtQ,EAAA,OAAAL,MAAAM,MAAA,SAAA4F,GAAA,cAAAA,EAAA1F,KAAA0F,EAAAzF,MAAA,cAAAyF,EAAAzF,KAAA,EACjC4L,EAAAA,GAAYuE,gBAAgB9L,GAAO,OAGzD,OAHyD6L,EAAAzK,EAAArF,KACxC,KADVR,EAAIsQ,EAAJtQ,MACC8E,MACPtG,EAAAA,GAAQuG,QAAQE,EAAE,qBACnBY,EAAApF,OAAA,SACMT,EAAK8E,MAAI,wBAAAe,EAAAnF,OAAA,GAAAgF,EAAA,KACjB,SAAAP,GAAA,OAAAK,EAAA7E,MAAA,KAAAC,UAAA,KAGH,MAAO,CAAEZ,KAdHyF,EAAJzF,KAcaa,QAbK4E,EAAlBL,UAasBoL,eAZX/K,EAAXH,YAaJ,EAEamL,EAAY,WACvB,IAQYvK,EARNhC,GAAcC,EAAAA,EAAAA,MACZc,GAAMgL,EAAAA,EAAAA,MAANhL,EACRkB,GAII9B,EAAAA,EAAAA,GAAY,CACdC,YAAa,CAAC,UACdC,YAAU2B,EAAAxG,IAAAC,MAAAC,MAAE,SAAAwG,EAAO3B,GAA0B,IAAAiM,EAAA1Q,EAAA,OAAAL,MAAAM,MAAA,SAAAsG,GAAA,cAAAA,EAAApG,KAAAoG,EAAAnG,MAAA,cAAAmG,EAAAnG,KAAA,EACpB4L,EAAAA,GAAY2E,QAAQlM,GAAO,OAKjD,OALiDiM,EAAAnK,EAAA/F,KAChC,KADVR,EAAI0Q,EAAJ1Q,MACC8E,OACPZ,EAAYgB,kBAAkB,CAAE5F,SAAU,CAAC,eAC3C4E,EAAYgB,kBAAkB,CAAE5F,SAAU,CAAC,iBAC3Cd,EAAAA,GAAQuG,QAAQE,EAAE,sBACnBsB,EAAA9F,OAAA,SACMT,EAAK8E,MAAI,wBAAAyB,EAAA7F,OAAA,GAAA0F,EAAA,KACjB,SAAAL,GAAA,OAAAG,EAAAvF,MAAA,KAAAC,UAAA,KAGH,MAAO,CAAEZ,KAhBHmG,EAAJnG,KAgBaa,QAfKsF,EAAlBf,UAesBwL,OAdXzK,EAAXb,YAeJ,EAEauL,EAAe,WAC1B,IAQYjK,EARN1C,GAAcC,EAAAA,EAAAA,MACZc,GAAMgL,EAAAA,EAAAA,MAANhL,EACR+B,GAII3C,EAAAA,EAAAA,GAAY,CACdC,YAAa,CAAC,aACdC,YAAUqC,EAAAlH,IAAAC,MAAAC,MAAE,SAAAqH,EAAOxC,GAA6B,IAAAqM,EAAA9Q,EAAA,OAAAL,MAAAM,MAAA,SAAAsH,GAAA,cAAAA,EAAApH,KAAAoH,EAAAnH,MAAA,cAAAmH,EAAAnH,KAAA,EACvB4L,EAAAA,GAAY+E,WAAWtM,GAAO,OAKpD,OALoDqM,EAAAvJ,EAAA/G,KACnC,KADVR,EAAI8Q,EAAJ9Q,MACC8E,OACPZ,EAAYgB,kBAAkB,CAAE5F,SAAU,CAAC,eAC3C4E,EAAYgB,kBAAkB,CAAE5F,SAAU,CAAC,iBAC3Cd,EAAAA,GAAQuG,QAAQE,EAAE,qBACnBsC,EAAA9G,OAAA,SACMT,EAAK8E,MAAI,wBAAAyC,EAAA7G,OAAA,GAAAuG,EAAA,KACjB,SAAAR,GAAA,OAAAG,EAAAjG,MAAA,KAAAC,UAAA,KAGH,MAAO,CAAEZ,KAhBHgH,EAAJhH,KAgBaa,QAfKmG,EAAlB5B,UAesB4L,UAdXhK,EAAX1B,YAeJ,EAEa2L,EAAmB,WAC9B,IAQYhI,EARN/E,GAAcC,EAAAA,EAAAA,MACZc,GAAMgL,EAAAA,EAAAA,MAANhL,EACRiE,GAII7E,EAAAA,EAAAA,GAAY,CACdC,YAAa,CAAC,iBACdC,YAAU0E,EAAAvJ,IAAAC,MAAAC,MAAE,SAAAgJ,EAAOnE,GAA6B,IAAAyM,EAAAlR,EAAA,OAAAL,MAAAM,MAAA,SAAA6I,GAAA,cAAAA,EAAA3I,KAAA2I,EAAA1I,MAAA,cAAA0I,EAAA1I,KAAA,EACvB4L,EAAAA,GAAYmF,cAAc1M,GAAO,OAKvD,OALuDyM,EAAApI,EAAAtI,KACtC,KADVR,EAAIkR,EAAJlR,MACC8E,OACPZ,EAAYgB,kBAAkB,CAAE5F,SAAU,CAAC,eAC3C4E,EAAYgB,kBAAkB,CAAE5F,SAAU,CAAC,iBAC3Cd,EAAAA,GAAQuG,QAAQE,EAAE,qBACnB6D,EAAArI,OAAA,SACMT,EAAK8E,MAAI,wBAAAgE,EAAApI,OAAA,GAAAkI,EAAA,KACjB,SAAAhB,GAAA,OAAAqB,EAAAtI,MAAA,KAAAC,UAAA,KAGH,MAAO,CAAEZ,KAhBHkJ,EAAJlJ,KAgBaa,QAfKqI,EAAlB9D,UAesB+L,cAdXjI,EAAX5D,YAeJ,C,mLCnVE8L,EA4BEC,EAAAA,EA5BFD,UACAE,EA2BED,EAAAA,EA3BFC,UACAC,EA0BEF,EAAAA,EA1BFE,MACAjR,EAyBE+Q,EAAAA,EAzBF/Q,cACAkR,EAwBEH,EAAAA,EAxBFG,QACAC,EAuBEJ,EAAAA,EAvBFI,kBACAC,EAsBEL,EAAAA,EAtBFK,uBACAC,EAqBEN,EAAAA,EArBFM,YACAC,EAoBEP,EAAAA,EApBFO,gBACAC,EAmBER,EAAAA,EAnBFQ,gBACAC,EAkBET,EAAAA,EAlBFS,uBACAC,EAiBEV,EAAAA,EAjBFU,oBACAC,EAgBEX,EAAAA,EAhBFW,WACAC,EAeEZ,EAAAA,EAfFY,aACAC,EAcEb,EAAAA,EAdFa,UACAC,EAaEd,EAAAA,EAbFc,UACAC,EAYEf,EAAAA,EAZFe,aACAC,EAWEhB,EAAAA,EAXFgB,SACA7K,EAUE6J,EAAAA,EAVF7J,eACA8K,EASEjB,EAAAA,EATFiB,gBACAC,EAQElB,EAAAA,EARFkB,aACAC,EAOEnB,EAAAA,EAPFmB,gBACAC,EAMEpB,EAAAA,EANFoB,UACAC,EAKErB,EAAAA,EALFqB,gBACAC,EAIEtB,EAAAA,EAJFsB,eACAC,EAGEvB,EAAAA,EAHFuB,iBACA3H,EAEEoG,EAAAA,EAFFpG,sBAII4H,EAAU,CAEdhO,SAAU,CACRiO,IAAK1B,EACL2B,OAAQ,QAEVvM,SAAU,CACRsM,IAAKxB,EACLyB,OAAQ,QAEVjN,KAAM,CACJgN,IAAKvB,EACLwB,OAAQ,QAEVzS,cAAe,CACbwS,IAAKxS,EACLyS,OAAQ,OAEVpR,QAAS,CACPmR,IAAKtB,EACLuB,OAAQ,OAGVtB,kBAAmB,CACjBqB,IAAKrB,EACLsB,OAAQ,OAEVrB,uBAAwB,CACtBoB,IAAKpB,EACLqB,OAAQ,QAEVpB,YAAa,CACXmB,IAAKnB,EACLoB,OAAQ,QAEVT,gBAAiB,CACfQ,IAAKR,EACLS,OAAQ,QAEVlB,gBAAiB,CACfiB,IAAKjB,EACLkB,OAAQ,QAEVR,aAAc,CACZO,IAAKP,EACLQ,OAAQ,QAEVjB,uBAAwB,CACtBgB,IAAKhB,EACLiB,OAAQ,QAEVhB,oBAAqB,CACnBe,IAAKf,EACLgB,OAAQ,OAEVP,gBAAiB,CACfM,IAAKN,EACLO,OAAQ,QAEVN,UAAW,CACTK,IAAKL,EACLM,OAAQ,QAEVJ,eAAgB,CACdG,IAAKH,EACLI,OAAQ,QAEVC,QAAS,CACPF,IAtEAzB,EAAAA,EADF2B,QAwEED,OAAQ,QAGVf,WAAY,CACVc,IAAKd,EACLe,OAAQ,QAEVd,aAAc,CACZa,IAAKb,EACLc,OAAQ,QAEVb,UAAW,CACTY,IAAKZ,EACLa,OAAQ,QAEVZ,UAAW,CACTW,IAAKX,EACLY,OAAQ,OAEVX,aAAc,CACZU,IAAKV,EACLW,OAAQ,QAEVV,SAAU,CACRS,IAAKT,EACLU,OAAQ,QAEVvL,eAAgB,CACdsL,IAAKtL,EACLuL,OAAQ,QAEVL,gBAAiB,CACfI,IAAKJ,EACLK,OAAQ,OAEVnB,gBAAiB,CACfkB,IAAKlB,EACLmB,OAAQ,UAEVH,iBAAkB,CAChBE,IAAKF,EACLG,OAAQ,QAEV9H,sBAAuB,CACrB6H,IAAK7H,EACL8H,OAAQ,QAIN1S,GAAY4S,EAAAA,EAAAA,GAAqCJ,EAASK,EAAAA,IAEnDnK,EAAU,SAACoK,GAAmB,OACzCD,EAAAA,GAAAA,IAAY7B,EAAAA,EAAItI,QAAQoK,GAAa,EAE1B3J,EAAY,SAAC2J,EAAqB/J,GAAc,OAC3DgK,EAAAA,EAAAA,IAAK/B,EAAAA,EAAI7H,UAAU2J,GAAc,CAAE/J,KAAAA,GAAO,EAE/Bc,EAAY,SACvBiJ,EAAmB/Z,GAAA,IACjBia,EAAOja,EAAPia,QAASC,EAAKla,EAALka,MAAK,OACbF,EAAAA,EAAAA,IAAK/B,EAAAA,EAAInH,UAAUiJ,GAAc,CAAEE,QAAAA,EAASC,MAAAA,GAAQ,EAElD,SAAS1H,EAAkBuH,GAChC,OAAOD,EAAAA,GAAAA,IAAY7B,EAAAA,EAAIzF,kBAAkBuH,GAC3C,CAEA,M,6IC3Ka5G,EAAiB,SAACC,EAAaC,GACjB,IAAA8G,EAAzB,MAAY,cAAR/G,EAC8B,QAAhC+G,EAAO9G,EAAS+G,MAAM,KAAKjL,GAAG,UAAE,IAAAgL,EAAAA,EAAI,GAG/B/G,CACT,EAEaiH,EAA0B,SAACC,GACtC,IAAAta,GAAuBsa,aAAK,EAALA,EAAOF,MAAM,OAAQ,GAAEjZ,EAAAwE,IAAA3F,EAAA,GAAvCua,EAAOpZ,EAAA,GAEd,MAAO,CAAEqZ,IAFUrZ,EAAA,GAELoZ,QAAAA,EAChB,EAGO,SAASjH,EAAiBiH,GAAiB,IAAAE,EAChD,OAAgC,QAAhCA,EAAOF,EAAQH,MAAM,MAAMjL,GAAG,UAAE,IAAAsL,EAAAA,EAAI,EACtC,C,wBCjBA,IAAIlb,EAAM,CACT,gBAAiB,MACjB,YAAa,MACb,cAAe,MACf,kBAAmB,KACnB,oBAAqB,MACrB,cAAe,MACf,cAAe,MACf,aAAc,MACd,eAAgB,KAChB,sBAAuB,MACvB,gCAAiC,MACjC,kBAAmB,MACnB,6BAA8B,MAC9B,6BAA8B,MAC9B,6BAA8B,MAC9B,6BAA8B,MAC9B,iCAAkC,MAClC,wCAAyC,MACzC,wCAAyC,MACzC,4BAA6B,MAC7B,4BAA6B,MAC7B,+BAAgC,MAChC,+BAAgC,MAChC,+BAAgC,KAChC,+BAAgC,MAChC,8BAA+B,MAC/B,8BAA+B,MAC/B,8BAA+B,MAC/B,8BAA+B,MAC/B,4BAA6B,MAC7B,4BAA6B,MAC7B,4BAA6B,MAC7B,4BAA6B,MAC7B,8BAA+B,MAC/B,8BAA+B,MAC/B,qCAAsC,MACtC,qCAAsC,MACtC,2BAA4B,MAC5B,2BAA4B,MAC5B,+BAAgC,MAChC,+BAAgC,MAChC,8BAA+B,MAC/B,8BAA+B,MAC/B,4BAA6B,MAC7B,4BAA6B,MAC7B,qBAAsB,MACtB,gBAAiB,MACjB,iBAAkB,MAClB,cAAe,MACf,eAAgB,MAChB,gBAAiB,MACjB,aAAc,MACd,cAAe,MACf,eAAgB,KAChB,WAAY,MACZ,eAAgB,MAChB,sBAAuB,MACvB,qBAAsB,MACtB,sBAAuB,MACvB,sBAAuB,MACvB,sBAAuB,MACvB,sBAAuB,MACvB,sBAAuB,MACvB,uBAAwB,MACxB,sBAAuB,MACvB,sBAAuB,MACvB,sBAAuB,MACvB,yBAA0B,MAC1B,sBAAuB,MACvB,uBAAwB,MACxB,uBAAwB,MACxB,uBAAwB,MACxB,uBAAwB,MACxB,sBAAuB,MACvB,qBAAsB,MACtB,uBAAwB,MACxB,qBAAsB,MACtB,sBAAuB,MACvB,sBAAuB,MACvB,sBAAuB,MACvB,uBAAwB,MACxB,sBAAuB,MACvB,sBAAuB,MACvB,sBAAuB,MACvB,uBAAwB,MACxB,sBAAuB,MACvB,sBAAuB,MACvB,sBAAuB,MACvB,sBAAuB,MACvB,uBAAwB,KACxB,sBAAuB,MACvB,sBAAuB,MACvB,uBAAwB,MACxB,sBAAuB,KACvB,uBAAwB,MACxB,sBAAuB,MACvB,wBAAyB,MACzB,eAAgB,MAChB,uBAAwB,MACxB,eAAgB,MAChB,cAAe,MACf,kBAAmB,MACnB,cAAe,MACf,gBAAiB,MACjB,uBAAwB,MACxB,+BAAgC,MAChC,0BAA2B,KAC3B,0BAA2B,MAC3B,sBAAuB,MACvB,kBAAmB,MACnB,iBAAkB,MAClB,qBAAsB,KACtB,oBAAqB,MACrB,yBAA0B,MAC1B,mBAAoB,MACpB,qBAAsB,MACtB,uBAAwB,MACxB,mBAAoB,MACpB,mBAAoB,MACpB,yBAA0B,MAC1B,mBAAoB,MACpB,qBAAsB,MACtB,sBAAuB,MACvB,wBAAyB,MACzB,oBAAqB,MACrB,iBAAkB,MAClB,sBAAuB,MACvB,sBAAuB,MACvB,qBAAsB,MACtB,oBAAqB,MACrB,uBAAwB,MACxB,qBAAsB,MACtB,qBAAsB,MACtB,sBAAuB,MACvB,mBAAoB,MACpB,mBAAoB,MACpB,wBAAyB,MACzB,uBAAwB,MACxB,mBAAoB,MACpB,wBAAyB,MACzB,iBAAkB,MAClB,sBAAuB,MACvB,kCAAmC,MACnC,wBAAyB,MACzB,kBAAmB,KACnB,oBAAqB,MACrB,0BAA2B,MAC3B,wBAAyB,MACzB,mBAAoB,MACpB,oBAAqB,MACrB,iBAAkB,MAClB,wBAAyB,MACzB,mBAAoB,KACpB,mBAAoB,MACpB,uBAAwB,MACxB,eAAgB,MAChB,kBAAmB,MACnB,mBAAoB,MACpB,kBAAmB,MACnB,sBAAuB,MACvB,yBAA0B,MAC1B,mBAAoB,MACpB,eAAgB,MAChB,cAAe,MACf,wBAAyB,MACzB,aAAc,MACd,mBAAoB,MACpB,aAAc,KACd,aAAc,MACd,cAAe,MACf,2BAA4B,KAC5B,sBAAuB,MACvB,aAAc,MACd,gBAAiB,MACjB,mBAAoB,KACpB,iBAAkB,MAClB,yBAA0B,KAC1B,aAAc,MACd,gBAAiB,KACjB,eAAgB,MAChB,eAAgB,MAChB,iBAAkB,MAClB,cAAe,MACf,gBAAiB,MACjB,eAAgB,MAChB,YAAa,MACb,yBAA0B,MAC1B,2BAA4B,MAC5B,gCAAiC,MACjC,gBAAiB,KACjB,eAAgB,KAChB,aAAc,MACd,iBAAkB,MAClB,oBAAqB,MACrB,gBAAiB,MACjB,eAAgB,MAChB,kBAAmB,MACnB,sBAAuB,MAIxB,SAASmb,EAAeC,GACvB,IAAIpX,EAAKqX,EAAsBD,GAC/B,OAAOE,EAAoBtX,EAC5B,CACA,SAASqX,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAEvb,EAAKob,GAAM,CACpC,IAAII,EAAI,IAAIzX,MAAM,uBAAyBqX,EAAM,KAEjD,MADAI,EAAErP,KAAO,mBACHqP,CACP,CACA,OAAOxb,EAAIob,EACZ,CACAD,EAAepb,KAAO,WACrB,OAAOkD,OAAOlD,KAAKC,EACpB,EACAmb,EAAeM,QAAUJ,EACzBK,EAAOC,QAAUR,EACjBA,EAAenX,GAAK,K","sources":["webpack:///./src/components/svg-icon.tsx","webpack:///./src/components/ui/form.tsx","webpack:///./src/components/ui/label.tsx","webpack:///./src/hooks/knowledge-hooks.ts","webpack:///./src/hooks/llm-hooks.tsx","webpack:///./src/services/knowledge-service.ts","webpack:///./src/utils/llm-util.ts","webpack:///./src/assets/svg/ sync \\.svg$"],"sourcesContent":["import { IconMap } from '@/constants/llm';\nimport { cn } from '@/lib/utils';\nimport Icon, { UserOutlined } from '@ant-design/icons';\nimport { IconComponentProps } from '@ant-design/icons/lib/components/Icon';\nimport { Avatar } from 'antd';\nimport { AvatarSize } from 'antd/es/avatar/AvatarContext';\n\nconst importAll = (requireContext: __WebpackModuleApi.RequireContext) => {\n  const list = requireContext.keys().map((key) => {\n    const name = key.replace(/\\.\\/(.*)\\.\\w+$/, '$1');\n    return { name, value: requireContext(key) };\n  });\n  return list;\n};\n\nlet routeList: { name: string; value: string }[] = [];\n\ntry {\n  routeList = importAll(require.context('@/assets/svg', true, /\\.svg$/));\n} catch (error) {\n  console.warn(error);\n  routeList = [];\n}\n\ninterface IProps extends IconComponentProps {\n  name: string;\n  width: string | number;\n  height?: string | number;\n  imgClass?: string;\n}\n\nconst SvgIcon = ({ name, width, height, imgClass, ...restProps }: IProps) => {\n  const ListItem = routeList.find((item) => item.name === name);\n  return (\n    <Icon\n      component={() => (\n        <img\n          src={ListItem?.value}\n          alt=\"\"\n          width={width}\n          height={height}\n          className={cn(imgClass, 'max-w-full')}\n        />\n      )}\n      {...(restProps as any)}\n    />\n  );\n};\n\nexport const LlmIcon = ({\n  name,\n  height = 48,\n  width = 48,\n  size = 'large',\n  imgClass,\n}: {\n  name: string;\n  height?: number;\n  width?: number;\n  size?: AvatarSize;\n  imgClass?: string;\n}) => {\n  const icon = IconMap[name as keyof typeof IconMap];\n\n  return icon ? (\n    <SvgIcon\n      name={`llm/${icon}`}\n      width={width}\n      height={height}\n      imgClass={imgClass}\n    ></SvgIcon>\n  ) : (\n    <Avatar shape=\"square\" size={size} icon={<UserOutlined />} />\n  );\n};\n\nexport default SvgIcon;\n","'use client';\n\nimport * as LabelPrimitive from '@radix-ui/react-label';\nimport { Slot } from '@radix-ui/react-slot';\nimport * as React from 'react';\nimport {\n  Controller,\n  ControllerProps,\n  FieldPath,\n  FieldValues,\n  FormProvider,\n  useFormContext,\n} from 'react-hook-form';\n\nimport { Label } from '@/components/ui/label';\nimport { cn } from '@/lib/utils';\nimport { Info } from 'lucide-react';\nimport { Tooltip, TooltipContent, TooltipTrigger } from './tooltip';\n\nconst Form = FormProvider;\n\ntype FormItemContextValue = {\n  id: string;\n};\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue,\n);\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> = {\n  name: TName;\n};\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue,\n);\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  );\n};\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext);\n  const itemContext = React.useContext(FormItemContext);\n  const { getFieldState, formState } = useFormContext();\n\n  const fieldState = getFieldState(fieldContext.name, formState);\n\n  if (!fieldContext) {\n    throw new Error('useFormField should be used within <FormField>');\n  }\n\n  const { id } = itemContext;\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  };\n};\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId();\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn('space-y-2', className)} {...props} />\n    </FormItemContext.Provider>\n  );\n});\nFormItem.displayName = 'FormItem';\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> & {\n    tooltip?: React.ReactNode;\n  }\n>(({ className, tooltip, ...props }, ref) => {\n  const { error, formItemId } = useFormField();\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && 'text-destructive', className, 'flex')}\n      htmlFor={formItemId}\n      {...props}\n    >\n      {props.children}\n      {tooltip && (\n        <Tooltip>\n          <TooltipTrigger>\n            <Info className=\"size-3 ml-2\" />\n          </TooltipTrigger>\n          <TooltipContent>\n            <p>{tooltip}</p>\n          </TooltipContent>\n        </Tooltip>\n      )}\n    </Label>\n  );\n});\nFormLabel.displayName = 'FormLabel';\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } =\n    useFormField();\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  );\n});\nFormControl.displayName = 'FormControl';\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField();\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn('text-sm text-muted-foreground', className)}\n      {...props}\n    />\n  );\n});\nFormDescription.displayName = 'FormDescription';\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField();\n  const body = error ? String(error?.message) : children;\n\n  if (!body) {\n    return null;\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn('text-sm font-medium text-destructive', className)}\n      {...props}\n    >\n      {body}\n    </p>\n  );\n});\nFormMessage.displayName = 'FormMessage';\n\nexport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n  useFormField,\n};\n","'use client';\n\nimport * as LabelPrimitive from '@radix-ui/react-label';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst labelVariants = cva(\n  'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70',\n);\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n));\nLabel.displayName = LabelPrimitive.Root.displayName;\n\nexport { Label };\n","import { ResponsePostType } from '@/interfaces/database/base';\nimport {\n  IKnowledge,\n  IKnowledgeGraph,\n  IRenameTag,\n  ITestingResult,\n} from '@/interfaces/database/knowledge';\nimport i18n from '@/locales/config';\nimport kbService, {\n  getKnowledgeGraph,\n  listTag,\n  removeTag,\n  renameTag,\n} from '@/services/knowledge-service';\nimport {\n  useInfiniteQuery,\n  useIsMutating,\n  useMutation,\n  useMutationState,\n  useQuery,\n  useQueryClient,\n} from '@tanstack/react-query';\nimport { useDebounce } from 'ahooks';\nimport { message } from 'antd';\nimport { useState } from 'react';\nimport { useSearchParams } from 'umi';\nimport { useHandleSearchChange } from './logic-hooks';\nimport { useSetPaginationParams } from './route-hook';\n\nexport const useKnowledgeBaseId = (): string => {\n  const [searchParams] = useSearchParams();\n  const knowledgeBaseId = searchParams.get('id');\n\n  return knowledgeBaseId || '';\n};\n\nexport const useFetchKnowledgeBaseConfiguration = () => {\n  const knowledgeBaseId = useKnowledgeBaseId();\n\n  const { data, isFetching: loading } = useQuery<IKnowledge>({\n    queryKey: ['fetchKnowledgeDetail'],\n    initialData: {} as IKnowledge,\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await kbService.get_kb_detail({\n        kb_id: knowledgeBaseId,\n      });\n      return data?.data ?? {};\n    },\n  });\n\n  return { data, loading };\n};\n\nexport const useFetchKnowledgeList = (\n  shouldFilterListWithoutDocument: boolean = false,\n): {\n  list: IKnowledge[];\n  loading: boolean;\n} => {\n  const { data, isFetching: loading } = useQuery({\n    queryKey: ['fetchKnowledgeList'],\n    initialData: [],\n    gcTime: 0, // https://tanstack.com/query/latest/docs/framework/react/guides/caching?from=reactQueryV3\n    queryFn: async () => {\n      const { data } = await kbService.getList();\n      const list = data?.data?.kbs ?? [];\n      return shouldFilterListWithoutDocument\n        ? list.filter((x: IKnowledge) => x.chunk_num > 0)\n        : list;\n    },\n  });\n\n  return { list: data, loading };\n};\n\nexport const useSelectKnowledgeOptions = () => {\n  const { list } = useFetchKnowledgeList();\n\n  const options = list?.map((item) => ({\n    label: item.name,\n    value: item.id,\n  }));\n\n  return options;\n};\n\nexport const useInfiniteFetchKnowledgeList = () => {\n  const { searchString, handleInputChange } = useHandleSearchChange();\n  const debouncedSearchString = useDebounce(searchString, { wait: 500 });\n\n  const PageSize = 30;\n  const {\n    data,\n    error,\n    fetchNextPage,\n    hasNextPage,\n    isFetching,\n    isFetchingNextPage,\n    status,\n  } = useInfiniteQuery({\n    queryKey: ['infiniteFetchKnowledgeList', debouncedSearchString],\n    queryFn: async ({ pageParam }) => {\n      const { data } = await kbService.getList({\n        page: pageParam,\n        page_size: PageSize,\n        keywords: debouncedSearchString,\n      });\n      const list = data?.data ?? [];\n      return list;\n    },\n    initialPageParam: 1,\n    getNextPageParam: (lastPage, pages, lastPageParam) => {\n      if (lastPageParam * PageSize <= lastPage.total) {\n        return lastPageParam + 1;\n      }\n      return undefined;\n    },\n  });\n  return {\n    data,\n    loading: isFetching,\n    error,\n    fetchNextPage,\n    hasNextPage,\n    isFetching,\n    isFetchingNextPage,\n    status,\n    handleInputChange,\n    searchString,\n  };\n};\n\nexport const useCreateKnowledge = () => {\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['createKnowledge'],\n    mutationFn: async (params: { id?: string; name: string }) => {\n      const { data = {} } = await kbService.createKb(params);\n      if (data.code === 0) {\n        message.success(\n          i18n.t(`message.${params?.id ? 'modified' : 'created'}`),\n        );\n        queryClient.invalidateQueries({ queryKey: ['fetchKnowledgeList'] });\n      }\n      return data;\n    },\n  });\n\n  return { data, loading, createKnowledge: mutateAsync };\n};\n\nexport const useDeleteKnowledge = () => {\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['deleteKnowledge'],\n    mutationFn: async (id: string) => {\n      const { data } = await kbService.rmKb({ kb_id: id });\n      if (data.code === 0) {\n        message.success(i18n.t(`message.deleted`));\n        queryClient.invalidateQueries({\n          queryKey: ['infiniteFetchKnowledgeList'],\n        });\n      }\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, deleteKnowledge: mutateAsync };\n};\n\n//#region knowledge configuration\n\nexport const useUpdateKnowledge = () => {\n  const knowledgeBaseId = useKnowledgeBaseId();\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['saveKnowledge'],\n    mutationFn: async (params: Record<string, any>) => {\n      const { data = {} } = await kbService.updateKb({\n        kb_id: knowledgeBaseId,\n        ...params,\n      });\n      if (data.code === 0) {\n        message.success(i18n.t(`message.updated`));\n        queryClient.invalidateQueries({ queryKey: ['fetchKnowledgeDetail'] });\n      }\n      return data;\n    },\n  });\n\n  return { data, loading, saveKnowledgeConfiguration: mutateAsync };\n};\n\n//#endregion\n\n//#region Retrieval testing\n\nexport const useTestChunkRetrieval = (): ResponsePostType<ITestingResult> & {\n  testChunk: (...params: any[]) => void;\n} => {\n  const knowledgeBaseId = useKnowledgeBaseId();\n  const { page, size: pageSize } = useSetPaginationParams();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['testChunk'], // This method is invalid\n    gcTime: 0,\n    mutationFn: async (values: any) => {\n      const { data } = await kbService.retrieval_test({\n        ...values,\n        kb_id: values.kb_id ?? knowledgeBaseId,\n        page,\n        size: pageSize,\n      });\n      if (data.code === 0) {\n        const res = data.data;\n        return {\n          ...res,\n          documents: res.doc_aggs,\n        };\n      }\n      return (\n        data?.data ?? {\n          chunks: [],\n          documents: [],\n          total: 0,\n        }\n      );\n    },\n  });\n\n  return {\n    data: data ?? { chunks: [], documents: [], total: 0 },\n    loading,\n    testChunk: mutateAsync,\n  };\n};\n\nexport const useChunkIsTesting = () => {\n  return useIsMutating({ mutationKey: ['testChunk'] }) > 0;\n};\n\nexport const useSelectTestingResult = (): ITestingResult => {\n  const data = useMutationState({\n    filters: { mutationKey: ['testChunk'] },\n    select: (mutation) => {\n      return mutation.state.data;\n    },\n  });\n  return (data.at(-1) ?? {\n    chunks: [],\n    documents: [],\n    total: 0,\n  }) as ITestingResult;\n};\n\nexport const useSelectIsTestingSuccess = () => {\n  const status = useMutationState({\n    filters: { mutationKey: ['testChunk'] },\n    select: (mutation) => {\n      return mutation.state.status;\n    },\n  });\n  return status.at(-1) === 'success';\n};\n//#endregion\n\n//#region tags\n\nexport const useFetchTagList = () => {\n  const knowledgeBaseId = useKnowledgeBaseId();\n\n  const { data, isFetching: loading } = useQuery<Array<[string, number]>>({\n    queryKey: ['fetchTagList'],\n    initialData: [],\n    gcTime: 0, // https://tanstack.com/query/latest/docs/framework/react/guides/caching?from=reactQueryV3\n    queryFn: async () => {\n      const { data } = await listTag(knowledgeBaseId);\n      const list = data?.data || [];\n      return list;\n    },\n  });\n\n  return { list: data, loading };\n};\n\nexport const useDeleteTag = () => {\n  const knowledgeBaseId = useKnowledgeBaseId();\n\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['deleteTag'],\n    mutationFn: async (tags: string[]) => {\n      const { data } = await removeTag(knowledgeBaseId, tags);\n      if (data.code === 0) {\n        message.success(i18n.t(`message.deleted`));\n        queryClient.invalidateQueries({\n          queryKey: ['fetchTagList'],\n        });\n      }\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, deleteTag: mutateAsync };\n};\n\nexport const useRenameTag = () => {\n  const knowledgeBaseId = useKnowledgeBaseId();\n\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['renameTag'],\n    mutationFn: async (params: IRenameTag) => {\n      const { data } = await renameTag(knowledgeBaseId, params);\n      if (data.code === 0) {\n        message.success(i18n.t(`message.modified`));\n        queryClient.invalidateQueries({\n          queryKey: ['fetchTagList'],\n        });\n      }\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, renameTag: mutateAsync };\n};\n\nexport const useTagIsRenaming = () => {\n  return useIsMutating({ mutationKey: ['renameTag'] }) > 0;\n};\n\nexport const useFetchTagListByKnowledgeIds = () => {\n  const [knowledgeIds, setKnowledgeIds] = useState<string[]>([]);\n\n  const { data, isFetching: loading } = useQuery<Array<[string, number]>>({\n    queryKey: ['fetchTagListByKnowledgeIds'],\n    enabled: knowledgeIds.length > 0,\n    initialData: [],\n    gcTime: 0, // https://tanstack.com/query/latest/docs/framework/react/guides/caching?from=reactQueryV3\n    queryFn: async () => {\n      const { data } = await kbService.listTagByKnowledgeIds({\n        kb_ids: knowledgeIds.join(','),\n      });\n      const list = data?.data || [];\n      return list;\n    },\n  });\n\n  return { list: data, loading, setKnowledgeIds };\n};\n\n//#endregion\n\nexport function useFetchKnowledgeGraph() {\n  const knowledgeBaseId = useKnowledgeBaseId();\n\n  const { data, isFetching: loading } = useQuery<IKnowledgeGraph>({\n    queryKey: ['fetchKnowledgeGraph', knowledgeBaseId],\n    initialData: { graph: {}, mind_map: {} } as IKnowledgeGraph,\n    enabled: !!knowledgeBaseId,\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await getKnowledgeGraph(knowledgeBaseId);\n      return data?.data;\n    },\n  });\n\n  return { data, loading };\n}\n","import { LlmIcon } from '@/components/svg-icon';\nimport { LlmModelType } from '@/constants/knowledge';\nimport { ResponseGetType } from '@/interfaces/database/base';\nimport {\n  IFactory,\n  IMyLlmValue,\n  IThirdOAIModelCollection as IThirdAiModelCollection,\n  IThirdOAIModel,\n  IThirdOAIModelCollection,\n} from '@/interfaces/database/llm';\nimport {\n  IAddLlmRequestBody,\n  IDeleteLlmRequestBody,\n} from '@/interfaces/request/llm';\nimport userService from '@/services/user-service';\nimport { sortLLmFactoryListBySpecifiedOrder } from '@/utils/common-util';\nimport { getLLMIconName, getRealModelName } from '@/utils/llm-util';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { Flex, message } from 'antd';\nimport { DefaultOptionType } from 'antd/es/select';\nimport { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport const useFetchLlmList = (\n  modelType?: LlmModelType,\n): IThirdAiModelCollection => {\n  const { data } = useQuery({\n    queryKey: ['llmList'],\n    initialData: {},\n    queryFn: async () => {\n      const { data } = await userService.llm_list({ model_type: modelType });\n\n      return data?.data ?? {};\n    },\n  });\n\n  return data;\n};\n\nexport const useSelectLlmOptions = () => {\n  const llmInfo: IThirdOAIModelCollection = useFetchLlmList();\n\n  const embeddingModelOptions = useMemo(() => {\n    return Object.entries(llmInfo).map(([key, value]) => {\n      return {\n        label: key,\n        options: value.map((x) => ({\n          label: getRealModelName(x.llm_name),\n          value: `${x.llm_name}@${x.fid}`,\n          disabled: !x.available,\n        })),\n      };\n    });\n  }, [llmInfo]);\n\n  return embeddingModelOptions;\n};\n\nfunction buildLlmOptionsWithIcon(x: IThirdOAIModel) {\n  return {\n    label: (\n      <Flex align=\"center\" gap={6}>\n        <LlmIcon\n          name={getLLMIconName(x.fid, x.llm_name)}\n          width={26}\n          height={26}\n          size={'small'}\n        />\n        <span>{getRealModelName(x.llm_name)}</span>\n      </Flex>\n    ),\n    value: `${x.llm_name}@${x.fid}`,\n    disabled: !x.available,\n  };\n}\n\nexport const useSelectLlmOptionsByModelType = () => {\n  const llmInfo: IThirdOAIModelCollection = useFetchLlmList();\n\n  const groupImage2TextOptions = () => {\n    const modelType = LlmModelType.Image2text;\n    const modelTag = modelType.toUpperCase();\n\n    return Object.entries(llmInfo)\n      .map(([key, value]) => {\n        return {\n          label: key,\n          options: value\n            .filter(\n              (x) =>\n                (x.model_type.includes(modelType) ||\n                  (x.tags && x.tags.includes(modelTag))) &&\n                x.available,\n            )\n            .map(buildLlmOptionsWithIcon),\n        };\n      })\n      .filter((x) => x.options.length > 0);\n  };\n\n  const groupOptionsByModelType = (modelType: LlmModelType) => {\n    return Object.entries(llmInfo)\n      .filter(([, value]) =>\n        modelType ? value.some((x) => x.model_type.includes(modelType)) : true,\n      )\n      .map(([key, value]) => {\n        return {\n          label: key,\n          options: value\n            .filter(\n              (x) =>\n                (modelType ? x.model_type.includes(modelType) : true) &&\n                x.available,\n            )\n            .map(buildLlmOptionsWithIcon),\n        };\n      })\n      .filter((x) => x.options.length > 0);\n  };\n\n  return {\n    [LlmModelType.Chat]: groupOptionsByModelType(LlmModelType.Chat),\n    [LlmModelType.Embedding]: groupOptionsByModelType(LlmModelType.Embedding),\n    [LlmModelType.Image2text]: groupImage2TextOptions(),\n    [LlmModelType.Speech2text]: groupOptionsByModelType(\n      LlmModelType.Speech2text,\n    ),\n    [LlmModelType.Rerank]: groupOptionsByModelType(LlmModelType.Rerank),\n    [LlmModelType.TTS]: groupOptionsByModelType(LlmModelType.TTS),\n  };\n};\n\nexport const useComposeLlmOptionsByModelTypes = (\n  modelTypes: LlmModelType[],\n) => {\n  const allOptions = useSelectLlmOptionsByModelType();\n\n  return modelTypes.reduce<\n    (DefaultOptionType & {\n      options: { label: JSX.Element; value: string; disabled: boolean }[];\n    })[]\n  >((pre, cur) => {\n    const options = allOptions[cur];\n    options.forEach((x) => {\n      const item = pre.find((y) => y.label === x.label);\n      if (item) {\n        item.options.push(...x.options);\n      } else {\n        pre.push(x);\n      }\n    });\n\n    return pre;\n  }, []);\n};\n\nexport const useFetchLlmFactoryList = (): ResponseGetType<IFactory[]> => {\n  const { data, isFetching: loading } = useQuery({\n    queryKey: ['factoryList'],\n    initialData: [],\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await userService.factories_list();\n\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading };\n};\n\nexport type LlmItem = { name: string; logo: string } & IMyLlmValue;\n\nexport const useFetchMyLlmList = (): ResponseGetType<\n  Record<string, IMyLlmValue>\n> => {\n  const { data, isFetching: loading } = useQuery({\n    queryKey: ['myLlmList'],\n    initialData: {},\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await userService.my_llm();\n\n      return data?.data ?? {};\n    },\n  });\n\n  return { data, loading };\n};\n\nexport const useSelectLlmList = () => {\n  const { data: myLlmList, loading: myLlmListLoading } = useFetchMyLlmList();\n  const { data: factoryList, loading: factoryListLoading } =\n    useFetchLlmFactoryList();\n\n  const nextMyLlmList: Array<LlmItem> = useMemo(() => {\n    return Object.entries(myLlmList).map(([key, value]) => ({\n      name: key,\n      logo: factoryList.find((x) => x.name === key)?.logo ?? '',\n      ...value,\n      llm: value.llm.map((x) => ({ ...x, name: x.name })),\n    }));\n  }, [myLlmList, factoryList]);\n\n  const nextFactoryList = useMemo(() => {\n    const currentList = factoryList.filter((x) =>\n      Object.keys(myLlmList).every((y) => y !== x.name),\n    );\n    return sortLLmFactoryListBySpecifiedOrder(currentList);\n  }, [factoryList, myLlmList]);\n\n  return {\n    myLlmList: nextMyLlmList,\n    factoryList: nextFactoryList,\n    loading: myLlmListLoading || factoryListLoading,\n  };\n};\n\nexport interface IApiKeySavingParams {\n  llm_factory: string;\n  api_key: string;\n  llm_name?: string;\n  model_type?: string;\n  base_url?: string;\n}\n\nexport const useSaveApiKey = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['saveApiKey'],\n    mutationFn: async (params: IApiKeySavingParams) => {\n      const { data } = await userService.set_api_key(params);\n      if (data.code === 0) {\n        message.success(t('message.modified'));\n        queryClient.invalidateQueries({ queryKey: ['myLlmList'] });\n        queryClient.invalidateQueries({ queryKey: ['factoryList'] });\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, saveApiKey: mutateAsync };\n};\n\nexport interface ISystemModelSettingSavingParams {\n  tenant_id: string;\n  name?: string;\n  asr_id: string;\n  embd_id: string;\n  img2txt_id: string;\n  llm_id: string;\n}\n\nexport const useSaveTenantInfo = () => {\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['saveTenantInfo'],\n    mutationFn: async (params: ISystemModelSettingSavingParams) => {\n      const { data } = await userService.set_tenant_info(params);\n      if (data.code === 0) {\n        message.success(t('message.modified'));\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, saveTenantInfo: mutateAsync };\n};\n\nexport const useAddLlm = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['addLlm'],\n    mutationFn: async (params: IAddLlmRequestBody) => {\n      const { data } = await userService.add_llm(params);\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['myLlmList'] });\n        queryClient.invalidateQueries({ queryKey: ['factoryList'] });\n        message.success(t('message.modified'));\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, addLlm: mutateAsync };\n};\n\nexport const useDeleteLlm = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['deleteLlm'],\n    mutationFn: async (params: IDeleteLlmRequestBody) => {\n      const { data } = await userService.delete_llm(params);\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['myLlmList'] });\n        queryClient.invalidateQueries({ queryKey: ['factoryList'] });\n        message.success(t('message.deleted'));\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, deleteLlm: mutateAsync };\n};\n\nexport const useDeleteFactory = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['deleteFactory'],\n    mutationFn: async (params: IDeleteLlmRequestBody) => {\n      const { data } = await userService.deleteFactory(params);\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['myLlmList'] });\n        queryClient.invalidateQueries({ queryKey: ['factoryList'] });\n        message.success(t('message.deleted'));\n      }\n      return data.code;\n    },\n  });\n\n  return { data, loading, deleteFactory: mutateAsync };\n};\n","import { IRenameTag } from '@/interfaces/database/knowledge';\nimport api from '@/utils/api';\nimport registerServer from '@/utils/register-server';\nimport request, { post } from '@/utils/request';\n\nconst {\n  create_kb,\n  update_kb,\n  rm_kb,\n  get_kb_detail,\n  kb_list,\n  get_document_list,\n  document_change_status,\n  document_rm,\n  document_delete,\n  document_create,\n  document_change_parser,\n  document_thumbnails,\n  chunk_list,\n  create_chunk,\n  set_chunk,\n  get_chunk,\n  switch_chunk,\n  rm_chunk,\n  retrieval_test,\n  document_rename,\n  document_run,\n  document_upload,\n  web_crawl,\n  knowledge_graph,\n  document_infos,\n  upload_and_parse,\n  listTagByKnowledgeIds,\n  setMeta,\n} = api;\n\nconst methods = {\n  // 知识库管理\n  createKb: {\n    url: create_kb,\n    method: 'post',\n  },\n  updateKb: {\n    url: update_kb,\n    method: 'post',\n  },\n  rmKb: {\n    url: rm_kb,\n    method: 'post',\n  },\n  get_kb_detail: {\n    url: get_kb_detail,\n    method: 'get',\n  },\n  getList: {\n    url: kb_list,\n    method: 'get',\n  },\n  // document manager\n  get_document_list: {\n    url: get_document_list,\n    method: 'get',\n  },\n  document_change_status: {\n    url: document_change_status,\n    method: 'post',\n  },\n  document_rm: {\n    url: document_rm,\n    method: 'post',\n  },\n  document_rename: {\n    url: document_rename,\n    method: 'post',\n  },\n  document_create: {\n    url: document_create,\n    method: 'post',\n  },\n  document_run: {\n    url: document_run,\n    method: 'post',\n  },\n  document_change_parser: {\n    url: document_change_parser,\n    method: 'post',\n  },\n  document_thumbnails: {\n    url: document_thumbnails,\n    method: 'get',\n  },\n  document_upload: {\n    url: document_upload,\n    method: 'post',\n  },\n  web_crawl: {\n    url: web_crawl,\n    method: 'post',\n  },\n  document_infos: {\n    url: document_infos,\n    method: 'post',\n  },\n  setMeta: {\n    url: setMeta,\n    method: 'post',\n  },\n  // chunk管理\n  chunk_list: {\n    url: chunk_list,\n    method: 'post',\n  },\n  create_chunk: {\n    url: create_chunk,\n    method: 'post',\n  },\n  set_chunk: {\n    url: set_chunk,\n    method: 'post',\n  },\n  get_chunk: {\n    url: get_chunk,\n    method: 'get',\n  },\n  switch_chunk: {\n    url: switch_chunk,\n    method: 'post',\n  },\n  rm_chunk: {\n    url: rm_chunk,\n    method: 'post',\n  },\n  retrieval_test: {\n    url: retrieval_test,\n    method: 'post',\n  },\n  knowledge_graph: {\n    url: knowledge_graph,\n    method: 'get',\n  },\n  document_delete: {\n    url: document_delete,\n    method: 'delete',\n  },\n  upload_and_parse: {\n    url: upload_and_parse,\n    method: 'post',\n  },\n  listTagByKnowledgeIds: {\n    url: listTagByKnowledgeIds,\n    method: 'get',\n  },\n};\n\nconst kbService = registerServer<keyof typeof methods>(methods, request);\n\nexport const listTag = (knowledgeId: string) =>\n  request.get(api.listTag(knowledgeId));\n\nexport const removeTag = (knowledgeId: string, tags: string[]) =>\n  post(api.removeTag(knowledgeId), { tags });\n\nexport const renameTag = (\n  knowledgeId: string,\n  { fromTag, toTag }: IRenameTag,\n) => post(api.renameTag(knowledgeId), { fromTag, toTag });\n\nexport function getKnowledgeGraph(knowledgeId: string) {\n  return request.get(api.getKnowledgeGraph(knowledgeId));\n}\n\nexport default kbService;\n","export const getLLMIconName = (fid: string, llm_name: string) => {\n  if (fid === 'FastEmbed') {\n    return llm_name.split('/').at(0) ?? '';\n  }\n\n  return fid;\n};\n\nexport const getLlmNameAndFIdByLlmId = (llmId?: string) => {\n  const [llmName, fId] = llmId?.split('@') || [];\n\n  return { fId, llmName };\n};\n\n// The names of the large models returned by the interface are similar to \"deepseek-r1___OpenAI-API\"\nexport function getRealModelName(llmName: string) {\n  return llmName.split('__').at(0) ?? '';\n}\n","var map = {\n\t\"./akshare.svg\": 26032,\n\t\"./api.svg\": 30747,\n\t\"./arxiv.svg\": 90854,\n\t\"./assistant.svg\": 4159,\n\t\"./baidu-fanyi.svg\": 83544,\n\t\"./baidu.svg\": 92892,\n\t\"./begin.svg\": 69779,\n\t\"./bing.svg\": 55914,\n\t\"./cancel.svg\": 8156,\n\t\"./chat-app-cube.svg\": 34339,\n\t\"./chat-configuration-atom.svg\": 57950,\n\t\"./chat-star.svg\": 49570,\n\t\"./chunk-method/book-01.svg\": 38726,\n\t\"./chunk-method/book-02.svg\": 21357,\n\t\"./chunk-method/book-03.svg\": 88093,\n\t\"./chunk-method/book-04.svg\": 58355,\n\t\"./chunk-method/chunk-empty.svg\": 16035,\n\t\"./chunk-method/knowledge-graph-01.svg\": 42576,\n\t\"./chunk-method/knowledge-graph-02.svg\": 46853,\n\t\"./chunk-method/law-01.svg\": 54530,\n\t\"./chunk-method/law-02.svg\": 75787,\n\t\"./chunk-method/manual-01.svg\": 64179,\n\t\"./chunk-method/manual-02.svg\": 40547,\n\t\"./chunk-method/manual-03.svg\": 1437,\n\t\"./chunk-method/manual-04.svg\": 81486,\n\t\"./chunk-method/media-01.svg\": 33952,\n\t\"./chunk-method/media-02.svg\": 93802,\n\t\"./chunk-method/naive-01.svg\": 88488,\n\t\"./chunk-method/naive-02.svg\": 74795,\n\t\"./chunk-method/one-01.svg\": 88533,\n\t\"./chunk-method/one-02.svg\": 99199,\n\t\"./chunk-method/one-03.svg\": 23192,\n\t\"./chunk-method/one-04.svg\": 72906,\n\t\"./chunk-method/paper-01.svg\": 64018,\n\t\"./chunk-method/paper-02.svg\": 77250,\n\t\"./chunk-method/presentation-01.svg\": 87162,\n\t\"./chunk-method/presentation-02.svg\": 59640,\n\t\"./chunk-method/qa-01.svg\": 39420,\n\t\"./chunk-method/qa-02.svg\": 55086,\n\t\"./chunk-method/resume-01.svg\": 76604,\n\t\"./chunk-method/resume-02.svg\": 96131,\n\t\"./chunk-method/table-01.svg\": 42743,\n\t\"./chunk-method/table-02.svg\": 84817,\n\t\"./chunk-method/tag-01.svg\": 96953,\n\t\"./chunk-method/tag-02.svg\": 82472,\n\t\"./concentrator.svg\": 86933,\n\t\"./crawler.svg\": 71090,\n\t\"./database.svg\": 38575,\n\t\"./deepl.svg\": 98301,\n\t\"./delete.svg\": 71483,\n\t\"./disable.svg\": 84377,\n\t\"./duck.svg\": 24287,\n\t\"./email.svg\": 10808,\n\t\"./enable.svg\": 8207,\n\t\"./es.svg\": 96492,\n\t\"./exesql.svg\": 43004,\n\t\"./file-icon/aep.svg\": 83889,\n\t\"./file-icon/ai.svg\": 28897,\n\t\"./file-icon/avi.svg\": 27635,\n\t\"./file-icon/css.svg\": 52229,\n\t\"./file-icon/csv.svg\": 50747,\n\t\"./file-icon/dmg.svg\": 71691,\n\t\"./file-icon/doc.svg\": 35354,\n\t\"./file-icon/docx.svg\": 69139,\n\t\"./file-icon/eps.svg\": 43279,\n\t\"./file-icon/exe.svg\": 46462,\n\t\"./file-icon/fig.svg\": 33179,\n\t\"./file-icon/folder.svg\": 54168,\n\t\"./file-icon/gif.svg\": 73845,\n\t\"./file-icon/html.svg\": 53682,\n\t\"./file-icon/indd.svg\": 26763,\n\t\"./file-icon/java.svg\": 13916,\n\t\"./file-icon/jpeg.svg\": 19525,\n\t\"./file-icon/jpg.svg\": 24674,\n\t\"./file-icon/js.svg\": 38470,\n\t\"./file-icon/json.svg\": 56373,\n\t\"./file-icon/md.svg\": 77357,\n\t\"./file-icon/mkv.svg\": 49197,\n\t\"./file-icon/mp3.svg\": 44538,\n\t\"./file-icon/mp4.svg\": 52038,\n\t\"./file-icon/mpeg.svg\": 77747,\n\t\"./file-icon/pdf.svg\": 82938,\n\t\"./file-icon/png.svg\": 71915,\n\t\"./file-icon/ppt.svg\": 85173,\n\t\"./file-icon/pptx.svg\": 62133,\n\t\"./file-icon/psd.svg\": 30182,\n\t\"./file-icon/rss.svg\": 38428,\n\t\"./file-icon/sql.svg\": 78501,\n\t\"./file-icon/svg.svg\": 72515,\n\t\"./file-icon/tiff.svg\": 4502,\n\t\"./file-icon/txt.svg\": 55773,\n\t\"./file-icon/wav.svg\": 63645,\n\t\"./file-icon/webp.svg\": 87260,\n\t\"./file-icon/xls.svg\": 5343,\n\t\"./file-icon/xlsx.svg\": 41475,\n\t\"./file-icon/xml.svg\": 38476,\n\t\"./file-management.svg\": 39121,\n\t\"./github.svg\": 69696,\n\t\"./google-scholar.svg\": 99466,\n\t\"./google.svg\": 18176,\n\t\"./graph.svg\": 57355,\n\t\"./invoke-ai.svg\": 82888,\n\t\"./jin10.svg\": 31801,\n\t\"./keyword.svg\": 30552,\n\t\"./knowledge-base.svg\": 87055,\n\t\"./knowledge-configration.svg\": 96450,\n\t\"./knowledge-dataset.svg\": 9385,\n\t\"./knowledge-testing.svg\": 65376,\n\t\"./llm/anthropic.svg\": 74768,\n\t\"./llm/azure.svg\": 99817,\n\t\"./llm/baai.svg\": 93594,\n\t\"./llm/baichuan.svg\": 6507,\n\t\"./llm/bedrock.svg\": 30818,\n\t\"./llm/chat-minimax.svg\": 69534,\n\t\"./llm/cohere.svg\": 86198,\n\t\"./llm/deepseek.svg\": 23476,\n\t\"./llm/fish-audio.svg\": 97300,\n\t\"./llm/gemini.svg\": 69156,\n\t\"./llm/github.svg\": 29034,\n\t\"./llm/google-cloud.svg\": 75383,\n\t\"./llm/google.svg\": 93926,\n\t\"./llm/gpustack.svg\": 41538,\n\t\"./llm/groq-next.svg\": 43719,\n\t\"./llm/huggingface.svg\": 20566,\n\t\"./llm/hunyuan.svg\": 10266,\n\t\"./llm/jina.svg\": 19765,\n\t\"./llm/lepton-ai.svg\": 68341,\n\t\"./llm/lm-studio.svg\": 77894,\n\t\"./llm/local-ai.svg\": 97354,\n\t\"./llm/mistral.svg\": 58247,\n\t\"./llm/modelscope.svg\": 21248,\n\t\"./llm/moonshot.svg\": 98184,\n\t\"./llm/nomic-ai.svg\": 14860,\n\t\"./llm/novita-ai.svg\": 72584,\n\t\"./llm/nvidia.svg\": 33325,\n\t\"./llm/ollama.svg\": 59488,\n\t\"./llm/open-router.svg\": 23258,\n\t\"./llm/openai-api.svg\": 63715,\n\t\"./llm/openai.svg\": 81459,\n\t\"./llm/perfx-cloud.svg\": 39886,\n\t\"./llm/ppio.svg\": 89957,\n\t\"./llm/replicate.svg\": 13492,\n\t\"./llm/sentence-transformers.svg\": 85448,\n\t\"./llm/siliconflow.svg\": 65762,\n\t\"./llm/spark.svg\": 4216,\n\t\"./llm/stepfun.svg\": 53618,\n\t\"./llm/tencent-cloud.svg\": 96734,\n\t\"./llm/together-ai.svg\": 65167,\n\t\"./llm/tongyi.svg\": 74296,\n\t\"./llm/upstage.svg\": 30464,\n\t\"./llm/vllm.svg\": 91333,\n\t\"./llm/volc_engine.svg\": 25210,\n\t\"./llm/voyage.svg\": 6385,\n\t\"./llm/wenxin.svg\": 34981,\n\t\"./llm/xinference.svg\": 76577,\n\t\"./llm/yi.svg\": 20447,\n\t\"./llm/yiyan.svg\": 55103,\n\t\"./llm/youdao.svg\": 81010,\n\t\"./llm/zhipu.svg\": 19568,\n\t\"./login-avatars.svg\": 68683,\n\t\"./login-background.svg\": 89624,\n\t\"./login-star.svg\": 31130,\n\t\"./logout.svg\": 67487,\n\t\"./minio.svg\": 32382,\n\t\"./model-providers.svg\": 70410,\n\t\"./moon.svg\": 22350,\n\t\"./more-model.svg\": 88458,\n\t\"./more.svg\": 1333,\n\t\"./move.svg\": 90076,\n\t\"./mysql.svg\": 37124,\n\t\"./navigation-pointer.svg\": 1979,\n\t\"./next-login-bg.svg\": 33391,\n\t\"./note.svg\": 28687,\n\t\"./nothing.svg\": 47138,\n\t\"./paper-clip.svg\": 2306,\n\t\"./password.svg\": 33530,\n\t\"./plus-circle-fill.svg\": 3804,\n\t\"./plus.svg\": 75350,\n\t\"./profile.svg\": 1769,\n\t\"./prompt.svg\": 49261,\n\t\"./pubmed.svg\": 78566,\n\t\"./qweather.svg\": 56077,\n\t\"./redis.svg\": 43867,\n\t\"./refresh.svg\": 96198,\n\t\"./resize.svg\": 80415,\n\t\"./run.svg\": 91449,\n\t\"./select-files-end.svg\": 14387,\n\t\"./select-files-start.svg\": 16734,\n\t\"./selected-files-collapse.svg\": 40975,\n\t\"./storage.svg\": 3949,\n\t\"./switch.svg\": 1311,\n\t\"./team.svg\": 52381,\n\t\"./template.svg\": 63993,\n\t\"./translation.svg\": 40724,\n\t\"./tushare.svg\": 16521,\n\t\"./wencai.svg\": 72835,\n\t\"./wikipedia.svg\": 18684,\n\t\"./yahoo-finance.svg\": 7957\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 78131;"],"names":["requireContext","routeList","require","keys","map","key","name","replace","value","error","console","warn","SvgIcon","_ref","width","height","imgClass","restProps","_objectWithoutProperties","_excluded","ListItem","find","item","_jsx","Icon","_objectSpread","component","src","alt","className","cn","LlmIcon","_ref2","_ref2$height","_ref2$width","_ref2$size","size","icon","IconMap","concat","Avatar","shape","UserOutlined","_excluded2","_excluded3","_excluded4","Form","FormProvider","FormItemContext","React","FormFieldContext","FormField","props","Object","assign","_objectDestructuringEmpty","Provider","children","Controller","useFormField","fieldContext","itemContext","_useFormContext","useFormContext","getFieldState","formState","fieldState","Error","id","formItemId","formDescriptionId","formMessageId","FormItem","ref","displayName","FormLabel","_ref3","tooltip","_useFormField","_jsxs","Label","htmlFor","Tooltip","TooltipTrigger","Info","TooltipContent","FormControl","_ref4","_useFormField2","Slot","FormDescription","_ref5","FormMessage","_ref6","_useFormField4","body","String","message","labelVariants","cva","LabelPrimitive","useKnowledgeBaseId","_useSearchParams","useSearchParams","_slicedToArray","get","useFetchKnowledgeBaseConfiguration","_queryFn","knowledgeBaseId","_useQuery","useQuery","queryKey","initialData","gcTime","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_data$data","_yield$kbService$get_","data","wrap","_context","prev","next","kbService","get_kb_detail","kb_id","sent","abrupt","stop","apply","arguments","loading","isFetching","useFetchKnowledgeList","_queryFn2","shouldFilterListWithoutDocument","length","undefined","_useQuery2","_callee2","_data$data$kbs","_data$data2","_yield$kbService$getL","list","_context2","getList","kbs","filter","x","chunk_num","useSelectKnowledgeOptions","label","useInfiniteFetchKnowledgeList","_queryFn3","_useHandleSearchChang","useHandleSearchChange","searchString","handleInputChange","debouncedSearchString","useDebounce","wait","_useInfiniteQuery","useInfiniteQuery","_callee3","_data$data3","pageParam","_yield$kbService$getL2","_context3","page","page_size","keywords","_x","initialPageParam","getNextPageParam","lastPage","pages","lastPageParam","total","fetchNextPage","hasNextPage","isFetchingNextPage","status","useCreateKnowledge","_mutationFn","queryClient","useQueryClient","_useMutation","useMutation","mutationKey","mutationFn","_callee4","params","_yield$kbService$crea","_yield$kbService$crea2","_context4","createKb","code","success","i18n","t","invalidateQueries","_x2","isPending","createKnowledge","mutateAsync","useDeleteKnowledge","_mutationFn2","_useMutation2","_callee5","_data$data4","_yield$kbService$rmKb","_context5","rmKb","_x3","deleteKnowledge","useUpdateKnowledge","_mutationFn3","_useMutation3","_callee6","_yield$kbService$upda","_yield$kbService$upda2","_context6","updateKb","_x4","saveKnowledgeConfiguration","useTestChunkRetrieval","_mutationFn4","_useSetPaginationPara","useSetPaginationParams","pageSize","_useMutation4","_callee7","values","_values$kb_id","_data$data5","_yield$kbService$retr","res","_context7","retrieval_test","documents","doc_aggs","chunks","_x5","testChunk","useChunkIsTesting","useIsMutating","useSelectTestingResult","_data$at","useMutationState","filters","select","mutation","state","at","useSelectIsTestingSuccess","useFetchTagList","_queryFn4","_useQuery3","_callee8","_yield$listTag","_context8","listTag","useDeleteTag","_mutationFn5","_useMutation5","_callee9","tags","_data$data6","_yield$removeTag","_context9","removeTag","_x6","deleteTag","useRenameTag","_mutationFn6","_useMutation6","_callee10","_data$data7","_yield$renameTag","_context10","renameTag","_x7","useTagIsRenaming","useFetchTagListByKnowledgeIds","_queryFn5","_useState","useState","_useState2","knowledgeIds","setKnowledgeIds","_useQuery4","enabled","_callee11","_yield$kbService$list","_context11","listTagByKnowledgeIds","kb_ids","join","useFetchKnowledgeGraph","_queryFn6","_useQuery5","graph","mind_map","_callee12","_yield$getKnowledgeGr","_context12","getKnowledgeGraph","useFetchLlmList","modelType","_yield$userService$ll","userService","llm_list","model_type","buildLlmOptionsWithIcon","Flex","align","gap","getLLMIconName","fid","llm_name","getRealModelName","disabled","available","useSelectLlmOptionsByModelType","modelTag","llmInfo","groupOptionsByModelType","entries","some","includes","_ref7","_ref8","options","_defineProperty","LlmModelType","Chat","Embedding","Image2text","toUpperCase","Speech2text","Rerank","TTS","useComposeLlmOptionsByModelTypes","modelTypes","allOptions","reduce","pre","cur","forEach","_item$options","y","push","_toConsumableArray","useSelectLlmList","_useFetchMyLlmList","_yield$userService$my","my_llm","myLlmList","myLlmListLoading","_useFetchLlmFactoryLi","_yield$userService$fa","factories_list","factoryList","factoryListLoading","useMemo","_ref10","_factoryList$find$log","_factoryList$find","_ref11","logo","llm","currentList","every","sortLLmFactoryListBySpecifiedOrder","useSaveApiKey","useTranslation","_yield$userService$se","set_api_key","saveApiKey","useSaveTenantInfo","_yield$userService$se2","set_tenant_info","saveTenantInfo","useAddLlm","_yield$userService$ad","add_llm","addLlm","useDeleteLlm","_yield$userService$de","delete_llm","deleteLlm","useDeleteFactory","_yield$userService$de2","deleteFactory","create_kb","api","update_kb","rm_kb","kb_list","get_document_list","document_change_status","document_rm","document_delete","document_create","document_change_parser","document_thumbnails","chunk_list","create_chunk","set_chunk","get_chunk","switch_chunk","rm_chunk","document_rename","document_run","document_upload","web_crawl","knowledge_graph","document_infos","upload_and_parse","methods","url","method","setMeta","registerServer","request","knowledgeId","post","fromTag","toTag","_llm_name$split$at","split","getLlmNameAndFIdByLlmId","llmId","llmName","fId","_llmName$split$at","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","resolve","module","exports"],"sourceRoot":""}