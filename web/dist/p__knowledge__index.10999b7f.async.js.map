{"version":3,"file":"p__knowledge__index.10999b7f.async.js","mappings":"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","sources":["webpack:///./src/components/operate-dropdown/index.less?c9d7","webpack:///./src/components/operate-dropdown/index.tsx","webpack:///./src/pages/knowledge/knowledge-card/index.less?a030","webpack:///./src/pages/knowledge/knowledge-card/index.tsx","webpack:///./src/pages/knowledge/knowledge-creating-modal/index.tsx","webpack:///./src/pages/knowledge/index.less?3ce9","webpack:///./src/pages/knowledge/index.tsx","webpack:///./src/pages/knowledge/hooks.ts","webpack:///./src/utils/date.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"delete\":\"delete___BGyWn\"};","import { useShowDeleteConfirm } from '@/hooks/common-hooks';\nimport { DeleteOutlined, MoreOutlined } from '@ant-design/icons';\nimport { Dropdown, MenuProps, Space } from 'antd';\nimport { useTranslation } from 'react-i18next';\n\nimport React, { useMemo } from 'react';\nimport styles from './index.less';\n\ninterface IProps {\n  deleteItem: () => Promise<any> | void;\n  iconFontSize?: number;\n  iconFontColor?: string;\n  items?: MenuProps['items'];\n  height?: number;\n  needsDeletionValidation?: boolean;\n}\n\nconst OperateDropdown = ({\n  deleteItem,\n  children,\n  iconFontSize = 30,\n  iconFontColor = 'gray',\n  items: otherItems = [],\n  height = 24,\n  needsDeletionValidation = true,\n}: React.PropsWithChildren<IProps>) => {\n  const { t } = useTranslation();\n  const showDeleteConfirm = useShowDeleteConfirm();\n\n  const handleDelete = () => {\n    if (needsDeletionValidation) {\n      showDeleteConfirm({ onOk: deleteItem });\n    } else {\n      deleteItem();\n    }\n  };\n\n  const handleDropdownMenuClick: MenuProps['onClick'] = ({ domEvent, key }) => {\n    domEvent.preventDefault();\n    domEvent.stopPropagation();\n    if (key === '1') {\n      handleDelete();\n    }\n  };\n\n  const items: MenuProps['items'] = useMemo(() => {\n    return [\n      {\n        key: '1',\n        label: (\n          <Space>\n            {t('common.delete')}\n            <DeleteOutlined />\n          </Space>\n        ),\n      },\n      ...otherItems,\n    ];\n  }, [t, otherItems]);\n\n  return (\n    <Dropdown\n      menu={{\n        items,\n        onClick: handleDropdownMenuClick,\n      }}\n    >\n      {children || (\n        <span className={styles.delete}>\n          <MoreOutlined\n            rotate={90}\n            style={{\n              fontSize: iconFontSize,\n              color: iconFontColor,\n              cursor: 'pointer',\n              height,\n            }}\n          />\n        </span>\n      )}\n    </Dropdown>\n  );\n};\n\nexport default OperateDropdown;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container___eQyW8\",\"delete\":\"delete___IVvZv\",\"content\":\"content___BVb9e\",\"context\":\"context___rx_ll\",\"footerTop\":\"footerTop___zv8Sq\",\"titleWrapper\":\"titleWrapper___f7thW\",\"title\":\"title___rMM_S\",\"description\":\"description___G_6nv\",\"titledark\":\"titledark___JUbvS\",\"descriptiondark\":\"descriptiondark___AWThG\",\"card\":\"card___m1xzY\",\"bottom\":\"bottom___oTHOs\",\"bottomLeft\":\"bottomLeft___d92Vz\",\"leftIcon\":\"leftIcon___nOsbs\",\"rightText\":\"rightText___N4_qm\",\"hideRibbon\":\"hideRibbon___cUMiA\",\"ribbon\":\"ribbon___c4quV\"};","import { KnowledgeRouteKey } from '@/constants/knowledge';\nimport { IKnowledge } from '@/interfaces/database/knowledge';\nimport { formatDate } from '@/utils/date';\nimport {\n  CalendarOutlined,\n  FileTextOutlined,\n  UserOutlined,\n} from '@ant-design/icons';\nimport { Avatar, Badge, Card, Space } from 'antd';\nimport classNames from 'classnames';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'umi';\n\nimport OperateDropdown from '@/components/operate-dropdown';\nimport { useTheme } from '@/components/theme-provider';\nimport { useDeleteKnowledge } from '@/hooks/knowledge-hooks';\nimport { useFetchUserInfo } from '@/hooks/user-setting-hooks';\nimport styles from './index.less';\n\ninterface IProps {\n  item: IKnowledge;\n}\n\nconst KnowledgeCard = ({ item }: IProps) => {\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  const { data: userInfo } = useFetchUserInfo();\n  const { theme } = useTheme();\n  const { deleteKnowledge } = useDeleteKnowledge();\n\n  const removeKnowledge = async () => {\n    return deleteKnowledge(item.id);\n  };\n\n  const handleCardClick = () => {\n    navigate(`/knowledge/${KnowledgeRouteKey.Dataset}?id=${item.id}`, {\n      state: { from: 'list' },\n    });\n  };\n\n  return (\n    <Badge.Ribbon\n      text={item?.nickname}\n      color={userInfo?.nickname === item?.nickname ? '#1677ff' : 'pink'}\n      className={classNames(styles.ribbon, {\n        [styles.hideRibbon]: item.permission !== 'team',\n      })}\n    >\n      <Card className={styles.card} onClick={handleCardClick}>\n        <div className={styles.container}>\n          <div className={styles.content}>\n            <Avatar size={34} icon={<UserOutlined />} src={item.avatar} />\n            <OperateDropdown deleteItem={removeKnowledge}></OperateDropdown>\n          </div>\n          <div className={styles.titleWrapper}>\n            <span\n              className={theme === 'dark' ? styles.titledark : styles.title}\n            >\n              {item.name}\n            </span>\n            <p\n              className={\n                theme === 'dark' ? styles.descriptiondark : styles.description\n              }\n            >\n              {item.description}\n            </p>\n          </div>\n          <div className={styles.footer}>\n            <div className={styles.footerTop}>\n              <div className={styles.bottomLeft}>\n                <FileTextOutlined className={styles.leftIcon} />\n                <span className={styles.rightText}>\n                  <Space>\n                    {item.doc_num}\n                    {t('knowledgeList.doc')}\n                  </Space>\n                </span>\n              </div>\n            </div>\n            <div className={styles.bottom}>\n              <div className={styles.bottomLeft}>\n                <CalendarOutlined className={styles.leftIcon} />\n                <span className={styles.rightText}>\n                  {formatDate(item.update_time)}\n                </span>\n              </div>\n              {/* <Avatar.Group size={25}>\n                <Avatar src=\"https://api.dicebear.com/7.x/miniavs/svg?seed=1\" />\n                <a href=\"https://ant.design\">\n                  <Avatar style={{ backgroundColor: '#f56a00' }}>K</Avatar>\n                </a>\n                <Tooltip title=\"Ant User\" placement=\"top\">\n                  <Avatar\n                    style={{ backgroundColor: '#87d068' }}\n                    icon={<UserOutlined />}\n                  />\n                </Tooltip>\n                <Avatar\n                  style={{ backgroundColor: '#1677ff' }}\n                  icon={<AntDesignOutlined />}\n                />\n              </Avatar.Group> */}\n            </div>\n          </div>\n        </div>\n      </Card>\n    </Badge.Ribbon>\n  );\n};\n\nexport default KnowledgeCard;\n","import { IModalManagerChildrenProps } from '@/components/modal-manager';\nimport { Form, Input, Modal } from 'antd';\nimport { useTranslation } from 'react-i18next';\n\ntype FieldType = {\n  name?: string;\n};\n\ninterface IProps extends Omit<IModalManagerChildrenProps, 'showModal'> {\n  loading: boolean;\n  onOk: (name: string) => void;\n}\n\nconst KnowledgeCreatingModal = ({\n  visible,\n  hideModal,\n  loading,\n  onOk,\n}: IProps) => {\n  const [form] = Form.useForm();\n\n  const { t } = useTranslation('translation', { keyPrefix: 'knowledgeList' });\n\n  const handleOk = async () => {\n    const ret = await form.validateFields();\n\n    onOk(ret.name);\n  };\n\n  return (\n    <Modal\n      title={t('createKnowledgeBase')}\n      open={visible}\n      onOk={handleOk}\n      onCancel={hideModal}\n      okButtonProps={{ loading }}\n    >\n      <Form\n        name=\"Create\"\n        labelCol={{ span: 4 }}\n        wrapperCol={{ span: 20 }}\n        style={{ maxWidth: 600 }}\n        autoComplete=\"off\"\n        form={form}\n      >\n        <Form.Item<FieldType>\n          label={t('name')}\n          name=\"name\"\n          rules={[{ required: true, message: t('namePlaceholder') }]}\n        >\n          <Input placeholder={t('namePlaceholder')} />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default KnowledgeCreatingModal;\n","// extracted by mini-css-extract-plugin\nexport default {\"knowledge\":\"knowledge___CaWP3\",\"topWrapper\":\"topWrapper___wSBFd\",\"title\":\"title___K81Cs\",\"description\":\"description___r7Ii4\",\"topButton\":\"topButton___AGnXw\",\"filterButton\":\"filterButton___asdet\",\"knowledgeCardContainer\":\"knowledgeCardContainer___ouwmb\",\"knowledgeEmpty\":\"knowledgeEmpty___YQOlB\"};","import { useInfiniteFetchKnowledgeList } from '@/hooks/knowledge-hooks';\nimport { useFetchUserInfo } from '@/hooks/user-setting-hooks';\nimport { PlusOutlined, SearchOutlined } from '@ant-design/icons';\nimport {\n  Button,\n  Divider,\n  Empty,\n  Flex,\n  Input,\n  Skeleton,\n  Space,\n  Spin,\n} from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { useSaveKnowledge } from './hooks';\nimport KnowledgeCard from './knowledge-card';\nimport KnowledgeCreatingModal from './knowledge-creating-modal';\n\nimport { useMemo } from 'react';\nimport styles from './index.less';\n\nconst KnowledgeList = () => {\n  const { data: userInfo } = useFetchUserInfo();\n  const { t } = useTranslation('translation', { keyPrefix: 'knowledgeList' });\n  const {\n    visible,\n    hideModal,\n    showModal,\n    onCreateOk,\n    loading: creatingLoading,\n  } = useSaveKnowledge();\n  const {\n    fetchNextPage,\n    data,\n    hasNextPage,\n    searchString,\n    handleInputChange,\n    loading,\n  } = useInfiniteFetchKnowledgeList();\n\n  const nextList = useMemo(() => {\n    const list =\n      data?.pages?.flatMap((x) => (Array.isArray(x.kbs) ? x.kbs : [])) ?? [];\n    return list;\n  }, [data?.pages]);\n\n  const total = useMemo(() => {\n    return data?.pages.at(-1).total ?? 0;\n  }, [data?.pages]);\n\n  return (\n    <Flex className={styles.knowledge} vertical flex={1} id=\"scrollableDiv\">\n      <div className={styles.topWrapper}>\n        <div>\n          <span className={styles.title}>\n            {t('welcome')}, {userInfo.nickname}\n          </span>\n          <p className={styles.description}>{t('description')}</p>\n        </div>\n        <Space size={'large'}>\n          <Input\n            placeholder={t('searchKnowledgePlaceholder')}\n            value={searchString}\n            style={{ width: 220 }}\n            allowClear\n            onChange={handleInputChange}\n            prefix={<SearchOutlined />}\n          />\n\n          <Button\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={showModal}\n            className={styles.topButton}\n          >\n            {t('createKnowledgeBase')}\n          </Button>\n        </Space>\n      </div>\n      <Spin spinning={loading}>\n        <InfiniteScroll\n          dataLength={nextList?.length ?? 0}\n          next={fetchNextPage}\n          hasMore={hasNextPage}\n          loader={<Skeleton avatar paragraph={{ rows: 1 }} active />}\n          endMessage={!!total && <Divider plain>{t('noMoreData')} 🤐</Divider>}\n          scrollableTarget=\"scrollableDiv\"\n        >\n          <Flex\n            gap={'large'}\n            wrap=\"wrap\"\n            className={styles.knowledgeCardContainer}\n          >\n            {nextList?.length > 0 ? (\n              nextList.map((item: any, index: number) => {\n                return (\n                  <KnowledgeCard\n                    item={item}\n                    key={`${item?.name}-${index}`}\n                  ></KnowledgeCard>\n                );\n              })\n            ) : (\n              <Empty className={styles.knowledgeEmpty}></Empty>\n            )}\n          </Flex>\n        </InfiniteScroll>\n      </Spin>\n      <KnowledgeCreatingModal\n        loading={creatingLoading}\n        visible={visible}\n        hideModal={hideModal}\n        onOk={onCreateOk}\n      ></KnowledgeCreatingModal>\n    </Flex>\n  );\n};\n\nexport default KnowledgeList;\n","import { KnowledgeRouteKey } from '@/constants/knowledge';\nimport { useSetModalState } from '@/hooks/common-hooks';\nimport { useCreateKnowledge } from '@/hooks/knowledge-hooks';\nimport { useCallback, useState } from 'react';\nimport { useNavigate } from 'umi';\n\nexport const useSearchKnowledge = () => {\n  const [searchString, setSearchString] = useState<string>('');\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchString(e.target.value);\n  };\n  return {\n    searchString,\n    handleInputChange,\n  };\n};\n\nexport const useSaveKnowledge = () => {\n  const { visible: visible, hideModal, showModal } = useSetModalState();\n  const { loading, createKnowledge } = useCreateKnowledge();\n  const navigate = useNavigate();\n\n  const onCreateOk = useCallback(\n    async (name: string) => {\n      const ret = await createKnowledge({\n        name,\n      });\n\n      if (ret?.code === 0) {\n        hideModal();\n        navigate(\n          `/knowledge/${KnowledgeRouteKey.Configuration}?id=${ret.data.kb_id}`,\n        );\n      }\n    },\n    [createKnowledge, hideModal, navigate],\n  );\n\n  return {\n    loading,\n    onCreateOk,\n    visible,\n    hideModal,\n    showModal,\n  };\n};\n","import dayjs from 'dayjs';\n\nexport function formatDate(date: any) {\n  if (!date) {\n    return '';\n  }\n  return dayjs(date).format('DD/MM/YYYY HH:mm:ss');\n}\n\nexport function formatTime(date: any) {\n  if (!date) {\n    return '';\n  }\n  return dayjs(date).format('HH:mm:ss');\n}\n\nexport function today() {\n  return formatDate(dayjs());\n}\n\nexport function lastDay() {\n  return formatDate(dayjs().subtract(1, 'days'));\n}\n\nexport function lastWeek() {\n  return formatDate(dayjs().subtract(1, 'weeks'));\n}\n\nexport function formatPureDate(date: any) {\n  if (!date) {\n    return '';\n  }\n  return dayjs(date).format('DD/MM/YYYY');\n}\n"],"names":["_ref","deleteItem","children","_ref$iconFontSize","iconFontSize","_ref$iconFontColor","iconFontColor","_ref$items","items","otherItems","_ref$height","height","_ref$needsDeletionVal","needsDeletionValidation","t","useTranslation","showDeleteConfirm","useShowDeleteConfirm","useMemo","key","label","_jsxs","Space","_jsx","DeleteOutlined","concat","_toConsumableArray","Dropdown","menu","onClick","_ref2","domEvent","preventDefault","stopPropagation","onOk","className","styles","MoreOutlined","rotate","style","fontSize","color","cursor","item","navigate","useNavigate","userInfo","useFetchUserInfo","data","theme","useTheme","deleteKnowledge","useDeleteKnowledge","removeKnowledge","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","id","stop","apply","arguments","Badge","Ribbon","text","nickname","classNames","ribbon","_defineProperty","hideRibbon","permission","Card","card","KnowledgeRouteKey","Dataset","state","from","container","content","Avatar","size","icon","UserOutlined","src","avatar","OperateDropdown","titleWrapper","titledark","title","name","descriptiondark","description","footer","footerTop","bottomLeft","FileTextOutlined","leftIcon","rightText","doc_num","bottom","CalendarOutlined","formatDate","update_time","visible","hideModal","loading","_Form$useForm","Form","useForm","form","_slicedToArray","keyPrefix","handleOk","ret","validateFields","sent","Modal","open","onCancel","okButtonProps","labelCol","span","wrapperCol","maxWidth","autoComplete","Item","rules","required","message","Input","placeholder","_nextList$length","_useSaveKnowledge","_useSetModalState","useSetModalState","showModal","_useCreateKnowledge","useCreateKnowledge","createKnowledge","onCreateOk","useCallback","code","Configuration","kb_id","_x","useSaveKnowledge","creatingLoading","_useInfiniteFetchKnow","useInfiniteFetchKnowledgeList","fetchNextPage","hasNextPage","searchString","handleInputChange","nextList","_data$pages$flatMap","_data$pages","pages","flatMap","x","Array","isArray","kbs","total","_data$pages$at$total","at","Flex","vertical","flex","value","width","allowClear","onChange","prefix","SearchOutlined","Button","type","PlusOutlined","Spin","spinning","InfiniteScroll","dataLength","length","hasMore","loader","Skeleton","paragraph","rows","active","endMessage","Divider","plain","scrollableTarget","gap","map","index","KnowledgeCard","Empty","KnowledgeCreatingModal","date","dayjs","format","formatTime","formatPureDate"],"sourceRoot":""}