{"version":3,"file":"p__user-setting__setting-api__index.39c2c00b.async.js","mappings":"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","sources":["webpack:///./src/components/api-service/hooks.ts","webpack:///./src/components/copy-to-clipboard.tsx","webpack:///./src/constants/chat.ts","webpack:///./src/hooks/common-hooks.tsx","webpack:///./src/hooks/user-setting-hooks.tsx","webpack:///./src/components/api-service/chat-api-key-modal/index.tsx","webpack:///./src/components/api-service/chat-overview-modal/index.less?9429","webpack:///./src/components/api-service/chat-overview-modal/backend-service-api.tsx","webpack:///./src/components/api-service/chat-overview-modal/markdown-toc.tsx","webpack:///./src/components/api-service/chat-overview-modal/api-content.tsx","webpack:///./src/pages/user-setting/setting-api/index.less?4eda","webpack:///./src/pages/user-setting/setting-api/index.tsx","webpack:///./src/services/user-service.ts","webpack:///./src/utils/api.ts","webpack:///./src/utils/date.ts","webpack:///./src/utils/register-server.ts","webpack:///./src/utils/request.ts","webpack:///./src/hooks/ lazy namespace object"],"sourcesContent":["import { SharedFrom } from '@/constants/chat';\nimport {\n  useSetModalState,\n  useShowDeleteConfirm,\n  useTranslate,\n} from '@/hooks/common-hooks';\nimport {\n  useCreateSystemToken,\n  useFetchManualSystemTokenList,\n  useFetchSystemTokenList,\n  useRemoveSystemToken,\n} from '@/hooks/user-setting-hooks';\nimport { IStats } from '@/interfaces/database/chat';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { message } from 'antd';\nimport { useCallback } from 'react';\n\nexport const useOperateApiKey = (idKey: string, dialogId?: string) => {\n  const { removeToken } = useRemoveSystemToken();\n  const { createToken, loading: creatingLoading } = useCreateSystemToken();\n  const { data: tokenList, loading: listLoading } = useFetchSystemTokenList();\n\n  const showDeleteConfirm = useShowDeleteConfirm();\n\n  const onRemoveToken = (token: string) => {\n    showDeleteConfirm({\n      onOk: () => removeToken(token),\n    });\n  };\n\n  const onCreateToken = useCallback(() => {\n    createToken({ [idKey]: dialogId });\n  }, [createToken, idKey, dialogId]);\n\n  return {\n    removeToken: onRemoveToken,\n    createToken: onCreateToken,\n    tokenList,\n    creatingLoading,\n    listLoading,\n  };\n};\n\ntype ChartStatsType = {\n  [k in keyof IStats]: Array<{ xAxis: string; yAxis: number }>;\n};\n\nexport const useSelectChartStatsList = (): ChartStatsType => {\n  const queryClient = useQueryClient();\n  const data = queryClient.getQueriesData({ queryKey: ['fetchStats'] });\n  const stats: IStats = (data.length > 0 ? data[0][1] : {}) as IStats;\n\n  return Object.keys(stats).reduce((pre, cur) => {\n    const item = stats[cur as keyof IStats];\n    if (item.length > 0) {\n      pre[cur as keyof IStats] = item.map((x) => ({\n        xAxis: x[0] as string,\n        yAxis: x[1] as number,\n      }));\n    }\n    return pre;\n  }, {} as ChartStatsType);\n};\n\nexport const useShowTokenEmptyError = () => {\n  const { t } = useTranslate('chat');\n\n  const showTokenEmptyError = useCallback(() => {\n    message.error(t('tokenError'));\n  }, [t]);\n  return { showTokenEmptyError };\n};\n\nexport const useShowBetaEmptyError = () => {\n  const { t } = useTranslate('chat');\n\n  const showBetaEmptyError = useCallback(() => {\n    message.error(t('betaError'));\n  }, [t]);\n  return { showBetaEmptyError };\n};\n\nconst getUrlWithToken = (token: string, from: string = 'chat') => {\n  const { protocol, host } = window.location;\n  return `${protocol}//${host}/chat/share?shared_id=${token}&from=${from}`;\n};\n\nconst useFetchTokenListBeforeOtherStep = () => {\n  const { showTokenEmptyError } = useShowTokenEmptyError();\n  const { showBetaEmptyError } = useShowBetaEmptyError();\n\n  const { data: tokenList, fetchSystemTokenList } =\n    useFetchManualSystemTokenList();\n\n  let token = '',\n    beta = '';\n\n  if (Array.isArray(tokenList) && tokenList.length > 0) {\n    token = tokenList[0].token;\n    beta = tokenList[0].beta;\n  }\n\n  token =\n    Array.isArray(tokenList) && tokenList.length > 0 ? tokenList[0].token : '';\n\n  const handleOperate = useCallback(async () => {\n    const ret = await fetchSystemTokenList();\n    const list = ret;\n    if (Array.isArray(list) && list.length > 0) {\n      if (!list[0].beta) {\n        showBetaEmptyError();\n        return false;\n      }\n      return list[0]?.token;\n    } else {\n      showTokenEmptyError();\n      return false;\n    }\n  }, [fetchSystemTokenList, showBetaEmptyError, showTokenEmptyError]);\n\n  return {\n    token,\n    beta,\n    handleOperate,\n  };\n};\n\nexport const useShowEmbedModal = () => {\n  const {\n    visible: embedVisible,\n    hideModal: hideEmbedModal,\n    showModal: showEmbedModal,\n  } = useSetModalState();\n\n  const { handleOperate, token, beta } = useFetchTokenListBeforeOtherStep();\n\n  const handleShowEmbedModal = useCallback(async () => {\n    const succeed = await handleOperate();\n    if (succeed) {\n      showEmbedModal();\n    }\n  }, [handleOperate, showEmbedModal]);\n\n  return {\n    showEmbedModal: handleShowEmbedModal,\n    hideEmbedModal,\n    embedVisible,\n    embedToken: token,\n    beta,\n  };\n};\n\nexport const usePreviewChat = (idKey: string) => {\n  const { handleOperate } = useFetchTokenListBeforeOtherStep();\n\n  const open = useCallback(\n    (t: string) => {\n      window.open(\n        getUrlWithToken(\n          t,\n          idKey === 'canvasId' ? SharedFrom.Agent : SharedFrom.Chat,\n        ),\n        '_blank',\n      );\n    },\n    [idKey],\n  );\n\n  const handlePreview = useCallback(async () => {\n    const token = await handleOperate();\n    if (token) {\n      open(token);\n    }\n  }, [handleOperate, open]);\n\n  return {\n    handlePreview,\n  };\n};\n","import { useTranslate } from '@/hooks/common-hooks';\nimport { CheckOutlined, CopyOutlined } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\nimport { useState } from 'react';\nimport { CopyToClipboard as Clipboard, Props } from 'react-copy-to-clipboard';\n\nconst CopyToClipboard = ({ text }: Props) => {\n  const [copied, setCopied] = useState(false);\n  const { t } = useTranslate('common');\n\n  const handleCopy = () => {\n    setCopied(true);\n    setTimeout(() => {\n      setCopied(false);\n    }, 2000);\n  };\n\n  return (\n    <Tooltip title={copied ? t('copied') : t('copy')}>\n      <Clipboard text={text} onCopy={handleCopy}>\n        {copied ? <CheckOutlined /> : <CopyOutlined />}\n      </Clipboard>\n    </Tooltip>\n  );\n};\n\nexport default CopyToClipboard;\n","export enum MessageType {\n  Assistant = 'assistant',\n  User = 'user',\n}\n\nexport enum ChatVariableEnabledField {\n  TemperatureEnabled = 'temperatureEnabled',\n  TopPEnabled = 'topPEnabled',\n  PresencePenaltyEnabled = 'presencePenaltyEnabled',\n  FrequencyPenaltyEnabled = 'frequencyPenaltyEnabled',\n  MaxTokensEnabled = 'maxTokensEnabled',\n}\n\nexport const variableEnabledFieldMap = {\n  [ChatVariableEnabledField.TemperatureEnabled]: 'temperature',\n  [ChatVariableEnabledField.TopPEnabled]: 'top_p',\n  [ChatVariableEnabledField.PresencePenaltyEnabled]: 'presence_penalty',\n  [ChatVariableEnabledField.FrequencyPenaltyEnabled]: 'frequency_penalty',\n  [ChatVariableEnabledField.MaxTokensEnabled]: 'max_tokens',\n};\n\nexport enum SharedFrom {\n  Agent = 'agent',\n  Chat = 'chat',\n}\n\nexport enum ChatSearchParams {\n  DialogId = 'dialogId',\n  ConversationId = 'conversationId',\n  isNew = 'isNew',\n}\n\nexport const EmptyConversationId = 'empty';\n","import { ExclamationCircleFilled } from '@ant-design/icons';\nimport { App } from 'antd';\nimport isEqual from 'lodash/isEqual';\nimport { ReactNode, useCallback, useEffect, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport const useSetModalState = () => {\n  const [visible, setVisible] = useState(false);\n\n  const showModal = useCallback(() => {\n    setVisible(true);\n  }, []);\n  const hideModal = useCallback(() => {\n    setVisible(false);\n  }, []);\n\n  const switchVisible = useCallback(() => {\n    setVisible(!visible);\n  }, [visible]);\n\n  return { visible, showModal, hideModal, switchVisible };\n};\n\nexport const useDeepCompareEffect = (\n  effect: React.EffectCallback,\n  deps: React.DependencyList,\n) => {\n  const ref = useRef<React.DependencyList>();\n  let callback: ReturnType<React.EffectCallback> = () => {};\n  if (!isEqual(deps, ref.current)) {\n    callback = effect();\n    ref.current = deps;\n  }\n  useEffect(() => {\n    return () => {\n      if (callback) {\n        callback();\n      }\n    };\n  }, []);\n};\n\nexport interface UseDynamicSVGImportOptions {\n  onCompleted?: (\n    name: string,\n    SvgIcon: React.FC<React.SVGProps<SVGSVGElement>> | undefined,\n  ) => void;\n  onError?: (err: Error) => void;\n}\n\nexport function useDynamicSVGImport(\n  name: string,\n  options: UseDynamicSVGImportOptions = {},\n) {\n  const ImportedIconRef = useRef<React.FC<React.SVGProps<SVGSVGElement>>>();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<Error>();\n\n  const { onCompleted, onError } = options;\n  useEffect(() => {\n    setLoading(true);\n    const importIcon = async (): Promise<void> => {\n      try {\n        ImportedIconRef.current = (await import(name)).ReactComponent;\n        onCompleted?.(name, ImportedIconRef.current);\n      } catch (err: any) {\n        onError?.(err);\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    importIcon();\n  }, [name, onCompleted, onError]);\n\n  return { error, loading, SvgIcon: ImportedIconRef.current };\n}\n\ninterface IProps {\n  title?: string;\n  content?: ReactNode;\n  onOk?: (...args: any[]) => any;\n  onCancel?: (...args: any[]) => any;\n}\n\nexport const useShowDeleteConfirm = () => {\n  const { modal } = App.useApp();\n  const { t } = useTranslation();\n\n  const showDeleteConfirm = useCallback(\n    ({ title, content, onOk, onCancel }: IProps): Promise<number> => {\n      return new Promise((resolve, reject) => {\n        modal.confirm({\n          title: title ?? t('common.deleteModalTitle'),\n          icon: <ExclamationCircleFilled />,\n          content,\n          okText: t('common.ok'),\n          okType: 'danger',\n          cancelText: t('common.cancel'),\n          async onOk() {\n            try {\n              const ret = await onOk?.();\n              resolve(ret);\n              console.info(ret);\n            } catch (error) {\n              reject(error);\n            }\n          },\n          onCancel() {\n            onCancel?.();\n          },\n        });\n      });\n    },\n    [t, modal],\n  );\n\n  return showDeleteConfirm;\n};\n\nexport const useTranslate = (keyPrefix: string) => {\n  return useTranslation('translation', { keyPrefix });\n};\n\nexport const useCommonTranslation = () => {\n  return useTranslation('translation', { keyPrefix: 'common' });\n};\n","import { LanguageTranslationMap } from '@/constants/common';\nimport { ResponseGetType } from '@/interfaces/database/base';\nimport { IToken } from '@/interfaces/database/chat';\nimport { ITenantInfo } from '@/interfaces/database/knowledge';\nimport {\n  ISystemStatus,\n  ITenant,\n  ITenantUser,\n  IUserInfo,\n} from '@/interfaces/database/user-setting';\nimport userService, {\n  addTenantUser,\n  agreeTenant,\n  deleteTenantUser,\n  listTenant,\n  listTenantUser,\n} from '@/services/user-service';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { Modal, message } from 'antd';\nimport DOMPurify from 'dompurify';\nimport { isEmpty } from 'lodash';\nimport { useCallback, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { history } from 'umi';\n\nexport const useFetchUserInfo = (): ResponseGetType<IUserInfo> => {\n  const { i18n } = useTranslation();\n\n  const { data, isFetching: loading } = useQuery({\n    queryKey: ['userInfo'],\n    initialData: {},\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await userService.user_info();\n      if (data.code === 0) {\n        i18n.changeLanguage(\n          LanguageTranslationMap[\n            data.data.language as keyof typeof LanguageTranslationMap\n          ],\n        );\n      }\n      return data?.data ?? {};\n    },\n  });\n\n  return { data, loading };\n};\n\nexport const useFetchTenantInfo = (\n  showEmptyModelWarn = false,\n): ResponseGetType<ITenantInfo> => {\n  const { t } = useTranslation();\n  const { data, isFetching: loading } = useQuery({\n    queryKey: ['tenantInfo'],\n    initialData: {},\n    gcTime: 0,\n    queryFn: async () => {\n      const { data: res } = await userService.get_tenant_info();\n      if (res.code === 0) {\n        // llm_id is chat_id\n        // asr_id is speech2txt\n        const { data } = res;\n        if (\n          showEmptyModelWarn &&\n          (isEmpty(data.embd_id) || isEmpty(data.llm_id))\n        ) {\n          Modal.warning({\n            title: t('common.warn'),\n            content: (\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: DOMPurify.sanitize(t('setting.modelProvidersWarn')),\n                }}\n              ></div>\n            ),\n            onOk() {\n              history.push('/user-setting/model');\n            },\n          });\n        }\n        data.chat_id = data.llm_id;\n        data.speech2text_id = data.asr_id;\n\n        return data;\n      }\n\n      return res;\n    },\n  });\n\n  return { data, loading };\n};\n\nexport const useSelectParserList = (): Array<{\n  value: string;\n  label: string;\n}> => {\n  const { data: tenantInfo } = useFetchTenantInfo(true);\n\n  const parserList = useMemo(() => {\n    const parserArray: Array<string> = tenantInfo?.parser_ids?.split(',') ?? [];\n    return parserArray.map((x) => {\n      const arr = x.split(':');\n      return { value: arr[0], label: arr[1] };\n    });\n  }, [tenantInfo]);\n\n  return parserList;\n};\n\nexport const useSaveSetting = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['saveSetting'],\n    mutationFn: async (\n      userInfo: { new_password: string } | Partial<IUserInfo>,\n    ) => {\n      const { data } = await userService.setting(userInfo);\n      if (data.code === 0) {\n        message.success(t('message.modified'));\n        queryClient.invalidateQueries({ queryKey: ['userInfo'] });\n      }\n      return data?.code;\n    },\n  });\n\n  return { data, loading, saveSetting: mutateAsync };\n};\n\nexport const useFetchSystemVersion = () => {\n  const [version, setVersion] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const fetchSystemVersion = useCallback(async () => {\n    try {\n      setLoading(true);\n      const { data } = await userService.getSystemVersion();\n      if (data.code === 0) {\n        setVersion(data.data);\n        setLoading(false);\n      }\n    } catch (error) {\n      setLoading(false);\n    }\n  }, []);\n\n  return { fetchSystemVersion, version, loading };\n};\n\nexport const useFetchSystemStatus = () => {\n  const [systemStatus, setSystemStatus] = useState<ISystemStatus>(\n    {} as ISystemStatus,\n  );\n  const [loading, setLoading] = useState(false);\n\n  const fetchSystemStatus = useCallback(async () => {\n    setLoading(true);\n    const { data } = await userService.getSystemStatus();\n    if (data.code === 0) {\n      setSystemStatus(data.data);\n      setLoading(false);\n    }\n  }, []);\n\n  return {\n    systemStatus,\n    fetchSystemStatus,\n    loading,\n  };\n};\n\nexport const useFetchManualSystemTokenList = () => {\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['fetchManualSystemTokenList'],\n    mutationFn: async () => {\n      const { data } = await userService.listToken();\n\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, fetchSystemTokenList: mutateAsync };\n};\n\nexport const useFetchSystemTokenList = () => {\n  const {\n    data,\n    isFetching: loading,\n    refetch,\n  } = useQuery<IToken[]>({\n    queryKey: ['fetchSystemTokenList'],\n    initialData: [],\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await userService.listToken();\n\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, refetch };\n};\n\nexport const useRemoveSystemToken = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['removeSystemToken'],\n    mutationFn: async (token: string) => {\n      const { data } = await userService.removeToken({}, token);\n      if (data.code === 0) {\n        message.success(t('message.deleted'));\n        queryClient.invalidateQueries({ queryKey: ['fetchSystemTokenList'] });\n      }\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, removeToken: mutateAsync };\n};\n\nexport const useCreateSystemToken = () => {\n  const queryClient = useQueryClient();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['createSystemToken'],\n    mutationFn: async (params: Record<string, any>) => {\n      const { data } = await userService.createToken(params);\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['fetchSystemTokenList'] });\n      }\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, createToken: mutateAsync };\n};\n\nexport const useListTenantUser = () => {\n  const { data: tenantInfo } = useFetchTenantInfo();\n  const tenantId = tenantInfo.tenant_id;\n  const {\n    data,\n    isFetching: loading,\n    refetch,\n  } = useQuery<ITenantUser[]>({\n    queryKey: ['listTenantUser', tenantId],\n    initialData: [],\n    gcTime: 0,\n    enabled: !!tenantId,\n    queryFn: async () => {\n      const { data } = await listTenantUser(tenantId);\n\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, refetch };\n};\n\nexport const useAddTenantUser = () => {\n  const { data: tenantInfo } = useFetchTenantInfo();\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['addTenantUser'],\n    mutationFn: async (email: string) => {\n      const { data } = await addTenantUser(tenantInfo.tenant_id, email);\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['listTenantUser'] });\n      }\n      return data?.code;\n    },\n  });\n\n  return { data, loading, addTenantUser: mutateAsync };\n};\n\nexport const useDeleteTenantUser = () => {\n  const { data: tenantInfo } = useFetchTenantInfo();\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['deleteTenantUser'],\n    mutationFn: async ({\n      userId,\n      tenantId,\n    }: {\n      userId: string;\n      tenantId?: string;\n    }) => {\n      const { data } = await deleteTenantUser({\n        tenantId: tenantId ?? tenantInfo.tenant_id,\n        userId,\n      });\n      if (data.code === 0) {\n        message.success(t('message.deleted'));\n        queryClient.invalidateQueries({ queryKey: ['listTenantUser'] });\n        queryClient.invalidateQueries({ queryKey: ['listTenant'] });\n      }\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, deleteTenantUser: mutateAsync };\n};\n\nexport const useListTenant = () => {\n  const { data: tenantInfo } = useFetchTenantInfo();\n  const tenantId = tenantInfo.tenant_id;\n  const {\n    data,\n    isFetching: loading,\n    refetch,\n  } = useQuery<ITenant[]>({\n    queryKey: ['listTenant', tenantId],\n    initialData: [],\n    gcTime: 0,\n    enabled: !!tenantId,\n    queryFn: async () => {\n      const { data } = await listTenant();\n\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, refetch };\n};\n\nexport const useAgreeTenant = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['agreeTenant'],\n    mutationFn: async (tenantId: string) => {\n      const { data } = await agreeTenant(tenantId);\n      if (data.code === 0) {\n        message.success(t('message.operated'));\n        queryClient.invalidateQueries({ queryKey: ['listTenant'] });\n      }\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, agreeTenant: mutateAsync };\n};\n","import CopyToClipboard from '@/components/copy-to-clipboard';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { IModalProps } from '@/interfaces/common';\nimport { IToken } from '@/interfaces/database/chat';\nimport { formatDate } from '@/utils/date';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport type { TableProps } from 'antd';\nimport { Button, Modal, Space, Table } from 'antd';\nimport { useOperateApiKey } from '../hooks';\n\nconst ChatApiKeyModal = ({\n  dialogId,\n  hideModal,\n  idKey,\n}: IModalProps<any> & { dialogId?: string; idKey: string }) => {\n  const { createToken, removeToken, tokenList, listLoading, creatingLoading } =\n    useOperateApiKey(idKey, dialogId);\n  const { t } = useTranslate('chat');\n\n  const columns: TableProps<IToken>['columns'] = [\n    {\n      title: 'Token',\n      dataIndex: 'token',\n      key: 'token',\n      render: (text) => <a>{text}</a>,\n    },\n    {\n      title: t('created'),\n      dataIndex: 'create_date',\n      key: 'create_date',\n      render: (text) => formatDate(text),\n    },\n    {\n      title: t('action'),\n      key: 'action',\n      render: (_, record) => (\n        <Space size=\"middle\">\n          <CopyToClipboard text={record.token}></CopyToClipboard>\n          <DeleteOutlined onClick={() => removeToken(record.token)} />\n        </Space>\n      ),\n    },\n  ];\n\n  return (\n    <>\n      <Modal\n        title={t('apiKey')}\n        open\n        onCancel={hideModal}\n        cancelButtonProps={{ style: { display: 'none' } }}\n        style={{ top: 300 }}\n        onOk={hideModal}\n        width={'50vw'}\n      >\n        <Table\n          columns={columns}\n          dataSource={tokenList}\n          rowKey={'token'}\n          loading={listLoading}\n          pagination={false}\n        />\n        <Button\n          onClick={createToken}\n          loading={creatingLoading}\n          disabled={tokenList?.length > 0}\n        >\n          {t('createNewKey')}\n        </Button>\n      </Modal>\n    </>\n  );\n};\n\nexport default ChatApiKeyModal;\n","// extracted by mini-css-extract-plugin\nexport default {\"chartWrapper\":\"chartWrapper___VN3hN\",\"chartItem\":\"chartItem___q7t7M\",\"chartLabel\":\"chartLabel___OGJbg\",\"apiLinkText\":\"apiLinkText___AxElg\"};","import { Button, Card, Flex, Space, Typography } from 'antd';\n\nimport { useTranslate } from '@/hooks/common-hooks';\nimport styles from './index.less';\n\nconst { Paragraph } = Typography;\n\nconst BackendServiceApi = ({ show }: { show(): void }) => {\n  const { t } = useTranslate('chat');\n\n  return (\n    <Card\n      title={\n        <Space size={'large'}>\n          <span>RAGFlow API</span>\n          <Button onClick={show} type=\"primary\">\n            {t('apiKey')}\n          </Button>\n        </Space>\n      }\n    >\n      <Flex gap={8} align=\"center\">\n        <b>{t('backendServiceApi')}</b>\n        <Paragraph\n          copyable={{ text: `${location.origin}` }}\n          className={styles.apiLinkText}\n        >\n          {location.origin}\n        </Paragraph>\n      </Flex>\n    </Card>\n  );\n};\n\nexport default BackendServiceApi;\n","import { Anchor } from 'antd';\nimport type { AnchorLinkItemProps } from 'antd/es/anchor/Anchor';\nimport React, { useEffect, useState } from 'react';\n\ninterface MarkdownTocProps {\n  content: string;\n}\n\nconst MarkdownToc: React.FC<MarkdownTocProps> = ({ content }) => {\n  const [items, setItems] = useState<AnchorLinkItemProps[]>([]);\n\n  useEffect(() => {\n    const generateTocItems = () => {\n      const headings = document.querySelectorAll(\n        '.wmde-markdown h2, .wmde-markdown h3',\n      );\n      const tocItems: AnchorLinkItemProps[] = [];\n      let currentH2Item: AnchorLinkItemProps | null = null;\n\n      headings.forEach((heading) => {\n        const title = heading.textContent || '';\n        const id = heading.id;\n        const isH2 = heading.tagName.toLowerCase() === 'h2';\n\n        if (id && title) {\n          const item: AnchorLinkItemProps = {\n            key: id,\n            href: `#${id}`,\n            title,\n          };\n\n          if (isH2) {\n            currentH2Item = item;\n            tocItems.push(item);\n          } else {\n            if (currentH2Item) {\n              if (!currentH2Item.children) {\n                currentH2Item.children = [];\n              }\n              currentH2Item.children.push(item);\n            } else {\n              tocItems.push(item);\n            }\n          }\n        }\n      });\n\n      setItems(tocItems.slice(1));\n    };\n\n    setTimeout(generateTocItems, 100);\n  }, [content]);\n\n  return (\n    <div\n      className=\"markdown-toc\"\n      style={{\n        position: 'fixed',\n        right: 20,\n        top: 100,\n        width: 200,\n        background: '#fff',\n        padding: '10px',\n        maxHeight: 'calc(100vh - 170px)',\n        overflowY: 'auto',\n        zIndex: 1000,\n      }}\n    >\n      <Anchor items={items} affix={false} />\n    </div>\n  );\n};\n\nexport default MarkdownToc;\n","import { useSetModalState, useTranslate } from '@/hooks/common-hooks';\nimport apiDoc from '@parent/docs/references/http_api_reference.md';\nimport MarkdownPreview from '@uiw/react-markdown-preview';\nimport { Button, Card, Flex, Space } from 'antd';\nimport ChatApiKeyModal from '../chat-api-key-modal';\nimport { usePreviewChat } from '../hooks';\nimport BackendServiceApi from './backend-service-api';\nimport MarkdownToc from './markdown-toc';\n\nconst ApiContent = ({\n  id,\n  idKey,\n  hideChatPreviewCard = false,\n}: {\n  id?: string;\n  idKey: string;\n  hideChatPreviewCard?: boolean;\n}) => {\n  const { t } = useTranslate('chat');\n  const {\n    visible: apiKeyVisible,\n    hideModal: hideApiKeyModal,\n    showModal: showApiKeyModal,\n  } = useSetModalState();\n  // const { embedVisible, hideEmbedModal, showEmbedModal, embedToken } =\n  //   useShowEmbedModal(idKey);\n\n  const { handlePreview } = usePreviewChat(idKey);\n\n  return (\n    <div>\n      <Flex vertical gap={'middle'}>\n        <BackendServiceApi show={showApiKeyModal}></BackendServiceApi>\n        {!hideChatPreviewCard && (\n          <Card title={`${name} Web App`}>\n            <Flex gap={8} vertical>\n              <Space size={'middle'}>\n                <Button onClick={handlePreview}>{t('preview')}</Button>\n                {/* <Button onClick={() => showEmbedModal(id)}>\n                  {t('embedded')}\n                </Button> */}\n              </Space>\n            </Flex>\n          </Card>\n        )}\n        <div style={{ position: 'relative' }}>\n          <MarkdownToc content={apiDoc} />\n        </div>\n        <MarkdownPreview source={apiDoc}></MarkdownPreview>\n      </Flex>\n      {apiKeyVisible && (\n        <ChatApiKeyModal\n          hideModal={hideApiKeyModal}\n          dialogId={id}\n          idKey={idKey}\n        ></ChatApiKeyModal>\n      )}\n      {/* {embedVisible && (\n        <EmbedModal\n          token={embedToken}\n          visible={embedVisible}\n          hideModal={hideEmbedModal}\n        ></EmbedModal>\n      )} */}\n    </div>\n  );\n};\n\nexport default ApiContent;\n","// extracted by mini-css-extract-plugin\nexport default {\"apiWrapper\":\"apiWrapper___Bulry\"};","import ApiContent from '@/components/api-service/chat-overview-modal/api-content';\n\nimport styles from './index.less';\n\nconst ApiPage = () => {\n  return (\n    <div className={styles.apiWrapper}>\n      <ApiContent idKey=\"dialogId\" hideChatPreviewCard></ApiContent>\n    </div>\n  );\n};\n\nexport default ApiPage;\n","import api from '@/utils/api';\nimport registerServer from '@/utils/register-server';\nimport request, { post } from '@/utils/request';\n\nconst {\n  login,\n  logout,\n  register,\n  setting,\n  user_info,\n  tenant_info,\n  factories_list,\n  llm_list,\n  my_llm,\n  set_api_key,\n  set_tenant_info,\n  add_llm,\n  delete_llm,\n  deleteFactory,\n  getSystemStatus,\n  getSystemVersion,\n  getSystemTokenList,\n  removeSystemToken,\n  createSystemToken,\n} = api;\n\nconst methods = {\n  login: {\n    url: login,\n    method: 'post',\n  },\n  logout: {\n    url: logout,\n    method: 'get',\n  },\n  register: {\n    url: register,\n    method: 'post',\n  },\n  setting: {\n    url: setting,\n    method: 'post',\n  },\n  user_info: {\n    url: user_info,\n    method: 'get',\n  },\n  get_tenant_info: {\n    url: tenant_info,\n    method: 'get',\n  },\n  set_tenant_info: {\n    url: set_tenant_info,\n    method: 'post',\n  },\n  factories_list: {\n    url: factories_list,\n    method: 'get',\n  },\n  llm_list: {\n    url: llm_list,\n    method: 'get',\n  },\n  my_llm: {\n    url: my_llm,\n    method: 'get',\n  },\n  set_api_key: {\n    url: set_api_key,\n    method: 'post',\n  },\n  add_llm: {\n    url: add_llm,\n    method: 'post',\n  },\n  delete_llm: {\n    url: delete_llm,\n    method: 'post',\n  },\n  getSystemStatus: {\n    url: getSystemStatus,\n    method: 'get',\n  },\n  getSystemVersion: {\n    url: getSystemVersion,\n    method: 'get',\n  },\n  deleteFactory: {\n    url: deleteFactory,\n    method: 'post',\n  },\n  listToken: {\n    url: getSystemTokenList,\n    method: 'get',\n  },\n  createToken: {\n    url: createSystemToken,\n    method: 'post',\n  },\n  removeToken: {\n    url: removeSystemToken,\n    method: 'delete',\n  },\n} as const;\n\nconst userService = registerServer<keyof typeof methods>(methods, request);\n\nexport const listTenantUser = (tenantId: string) =>\n  request.get(api.listTenantUser(tenantId));\n\nexport const addTenantUser = (tenantId: string, email: string) =>\n  post(api.addTenantUser(tenantId), { email });\n\nexport const deleteTenantUser = ({\n  tenantId,\n  userId,\n}: {\n  tenantId: string;\n  userId: string;\n}) => request.delete(api.deleteTenantUser(tenantId, userId));\n\nexport const listTenant = () => request.get(api.listTenant);\n\nexport const agreeTenant = (tenantId: string) =>\n  request.put(api.agreeTenant(tenantId));\n\nexport default userService;\n","let api_host = `/v1`;\n\nexport { api_host };\n\nexport default {\n  // user\n  login: `${api_host}/user/login`,\n  logout: `${api_host}/user/logout`,\n  register: `${api_host}/user/register`,\n  setting: `${api_host}/user/setting`,\n  user_info: `${api_host}/user/info`,\n  tenant_info: `${api_host}/user/tenant_info`,\n  set_tenant_info: `${api_host}/user/set_tenant_info`,\n\n  // team\n  addTenantUser: (tenantId: string) => `${api_host}/tenant/${tenantId}/user`,\n  listTenantUser: (tenantId: string) =>\n    `${api_host}/tenant/${tenantId}/user/list`,\n  deleteTenantUser: (tenantId: string, userId: string) =>\n    `${api_host}/tenant/${tenantId}/user/${userId}`,\n  listTenant: `${api_host}/tenant/list`,\n  agreeTenant: (tenantId: string) => `${api_host}/tenant/agree/${tenantId}`,\n\n  // llm model\n  factories_list: `${api_host}/llm/factories`,\n  llm_list: `${api_host}/llm/list`,\n  my_llm: `${api_host}/llm/my_llms`,\n  set_api_key: `${api_host}/llm/set_api_key`,\n  add_llm: `${api_host}/llm/add_llm`,\n  delete_llm: `${api_host}/llm/delete_llm`,\n  deleteFactory: `${api_host}/llm/delete_factory`,\n\n  // knowledge base\n  kb_list: `${api_host}/kb/list`,\n  create_kb: `${api_host}/kb/create`,\n  update_kb: `${api_host}/kb/update`,\n  rm_kb: `${api_host}/kb/rm`,\n  get_kb_detail: `${api_host}/kb/detail`,\n  getKnowledgeGraph: (knowledgeId: string) =>\n    `${api_host}/kb/${knowledgeId}/knowledge_graph`,\n\n  // tags\n  listTag: (knowledgeId: string) => `${api_host}/kb/${knowledgeId}/tags`,\n  listTagByKnowledgeIds: `${api_host}/kb/tags`,\n  removeTag: (knowledgeId: string) => `${api_host}/kb/${knowledgeId}/rm_tags`,\n  renameTag: (knowledgeId: string) =>\n    `${api_host}/kb/${knowledgeId}/rename_tag`,\n\n  // chunk\n  chunk_list: `${api_host}/chunk/list`,\n  create_chunk: `${api_host}/chunk/create`,\n  set_chunk: `${api_host}/chunk/set`,\n  get_chunk: `${api_host}/chunk/get`,\n  switch_chunk: `${api_host}/chunk/switch`,\n  rm_chunk: `${api_host}/chunk/rm`,\n  retrieval_test: `${api_host}/chunk/retrieval_test`,\n  knowledge_graph: `${api_host}/chunk/knowledge_graph`,\n\n  // document\n  get_document_list: `${api_host}/document/list`,\n  document_change_status: `${api_host}/document/change_status`,\n  document_rm: `${api_host}/document/rm`,\n  document_delete: `${api_host}/api/document`,\n  document_rename: `${api_host}/document/rename`,\n  document_create: `${api_host}/document/create`,\n  document_run: `${api_host}/document/run`,\n  document_change_parser: `${api_host}/document/change_parser`,\n  document_thumbnails: `${api_host}/document/thumbnails`,\n  get_document_file: `${api_host}/document/get`,\n  document_upload: `${api_host}/document/upload`,\n  web_crawl: `${api_host}/document/web_crawl`,\n  document_infos: `${api_host}/document/infos`,\n  upload_and_parse: `${api_host}/document/upload_and_parse`,\n  parse: `${api_host}/document/parse`,\n  setMeta: `${api_host}/document/set_meta`,\n\n  // chat\n  setDialog: `${api_host}/dialog/set`,\n  getDialog: `${api_host}/dialog/get`,\n  removeDialog: `${api_host}/dialog/rm`,\n  listDialog: `${api_host}/dialog/list`,\n  setConversation: `${api_host}/conversation/set`,\n  getConversation: `${api_host}/conversation/get`,\n  getConversationSSE: `${api_host}/conversation/getsse`,\n  listConversation: `${api_host}/conversation/list`,\n  removeConversation: `${api_host}/conversation/rm`,\n  completeConversation: `${api_host}/conversation/completion`,\n  deleteMessage: `${api_host}/conversation/delete_msg`,\n  thumbup: `${api_host}/conversation/thumbup`,\n  tts: `${api_host}/conversation/tts`,\n  ask: `${api_host}/conversation/ask`,\n  mindmap: `${api_host}/conversation/mindmap`,\n  getRelatedQuestions: `${api_host}/conversation/related_questions`,\n  // chat for external\n  createToken: `${api_host}/api/new_token`,\n  listToken: `${api_host}/api/token_list`,\n  removeToken: `${api_host}/api/rm`,\n  getStats: `${api_host}/api/stats`,\n  createExternalConversation: `${api_host}/api/new_conversation`,\n  getExternalConversation: `${api_host}/api/conversation`,\n  completeExternalConversation: `${api_host}/api/completion`,\n  uploadAndParseExternal: `${api_host}/api/document/upload_and_parse`,\n\n  // file manager\n  listFile: `${api_host}/file/list`,\n  uploadFile: `${api_host}/file/upload`,\n  removeFile: `${api_host}/file/rm`,\n  renameFile: `${api_host}/file/rename`,\n  getAllParentFolder: `${api_host}/file/all_parent_folder`,\n  createFolder: `${api_host}/file/create`,\n  connectFileToKnowledge: `${api_host}/file2document/convert`,\n  getFile: `${api_host}/file/get`,\n  moveFile: `${api_host}/file/mv`,\n\n  // system\n  getSystemVersion: `${api_host}/system/version`,\n  getSystemStatus: `${api_host}/system/status`,\n  getSystemTokenList: `${api_host}/system/token_list`,\n  createSystemToken: `${api_host}/system/new_token`,\n  listSystemToken: `${api_host}/system/token_list`,\n  removeSystemToken: `${api_host}/system/token`,\n\n  // flow\n  listTemplates: `${api_host}/canvas/templates`,\n  listCanvas: `${api_host}/canvas/list`,\n  getCanvas: `${api_host}/canvas/get`,\n  getCanvasSSE: `${api_host}/canvas/getsse`,\n  removeCanvas: `${api_host}/canvas/rm`,\n  setCanvas: `${api_host}/canvas/set`,\n  resetCanvas: `${api_host}/canvas/reset`,\n  runCanvas: `${api_host}/canvas/completion`,\n  testDbConnect: `${api_host}/canvas/test_db_connect`,\n  getInputElements: `${api_host}/canvas/input_elements`,\n  debug: `${api_host}/canvas/debug`,\n};\n","import dayjs from 'dayjs';\n\nexport function formatDate(date: any) {\n  if (!date) {\n    return '';\n  }\n  return dayjs(date).format('DD/MM/YYYY HH:mm:ss');\n}\n\nexport function formatTime(date: any) {\n  if (!date) {\n    return '';\n  }\n  return dayjs(date).format('HH:mm:ss');\n}\n\nexport function today() {\n  return formatDate(dayjs());\n}\n\nexport function lastDay() {\n  return formatDate(dayjs().subtract(1, 'days'));\n}\n\nexport function lastWeek() {\n  return formatDate(dayjs().subtract(1, 'weeks'));\n}\n\nexport function formatPureDate(date: any) {\n  if (!date) {\n    return '';\n  }\n  return dayjs(date).format('DD/MM/YYYY');\n}\n","import omit from 'lodash/omit';\nimport { RequestMethod } from 'umi-request';\n\ntype Service<T extends string> = Record<\n  T,\n  (params?: any, urlAppendix?: string) => any\n>;\n\nconst Methods = ['post', 'delete', 'put'];\n\nconst registerServer = <T extends string>(\n  opt: Record<T, { url: string; method: string }>,\n  request: RequestMethod,\n) => {\n  const server: Service<T> = {} as Service<T>;\n  for (let key in opt) {\n    server[key] = (params?: any, urlAppendix?: string) => {\n      let url = opt[key].url;\n      const requestOptions = opt[key];\n      if (urlAppendix) {\n        url = url + '/' + urlAppendix;\n      }\n      if (Methods.some((x) => x === opt[key].method.toLowerCase())) {\n        return request(url, {\n          method: opt[key].method,\n          data: params,\n        });\n      }\n\n      if (opt[key].method === 'get' || opt[key].method === 'GET') {\n        return request.get(url, {\n          ...omit(requestOptions, ['method', 'url']),\n          params,\n        });\n      }\n    };\n  }\n  return server;\n};\n\nexport default registerServer;\n","import { Authorization } from '@/constants/authorization';\nimport { ResponseType } from '@/interfaces/database/base';\nimport i18n from '@/locales/config';\nimport authorizationUtil, {\n  getAuthorization,\n  redirectToLogin,\n} from '@/utils/authorization-util';\nimport { message, notification } from 'antd';\nimport { RequestMethod, extend } from 'umi-request';\nimport { convertTheKeysOfTheObjectToSnake } from './common-util';\n\nconst FAILED_TO_FETCH = 'Failed to fetch';\n\nconst RetcodeMessage = {\n  200: i18n.t('message.200'),\n  201: i18n.t('message.201'),\n  202: i18n.t('message.202'),\n  204: i18n.t('message.204'),\n  400: i18n.t('message.400'),\n  401: i18n.t('message.401'),\n  403: i18n.t('message.403'),\n  404: i18n.t('message.404'),\n  406: i18n.t('message.406'),\n  410: i18n.t('message.410'),\n  413: i18n.t('message.413'),\n  422: i18n.t('message.422'),\n  500: i18n.t('message.500'),\n  502: i18n.t('message.502'),\n  503: i18n.t('message.503'),\n  504: i18n.t('message.504'),\n};\ntype ResultCode =\n  | 200\n  | 201\n  | 202\n  | 204\n  | 400\n  | 401\n  | 403\n  | 404\n  | 406\n  | 410\n  | 413\n  | 422\n  | 500\n  | 502\n  | 503\n  | 504;\n\nconst errorHandler = (error: {\n  response: Response;\n  message: string;\n}): Response => {\n  const { response } = error;\n  if (error.message === FAILED_TO_FETCH) {\n    notification.error({\n      description: i18n.t('message.networkAnomalyDescription'),\n      message: i18n.t('message.networkAnomaly'),\n    });\n  } else {\n    if (response && response.status) {\n      const errorText =\n        RetcodeMessage[response.status as ResultCode] || response.statusText;\n      const { status, url } = response;\n      notification.error({\n        message: `${i18n.t('message.requestError')} ${status}: ${url}`,\n        description: errorText,\n      });\n    }\n  }\n  return response ?? { data: { code: 1999 } };\n};\n\nconst request: RequestMethod = extend({\n  errorHandler,\n  timeout: 300000,\n  getResponse: true,\n});\n\nrequest.interceptors.request.use((url: string, options: any) => {\n  const data = convertTheKeysOfTheObjectToSnake(options.data);\n  const params = convertTheKeysOfTheObjectToSnake(options.params);\n\n  return {\n    url,\n    options: {\n      ...options,\n      data,\n      params,\n      headers: {\n        ...(options.skipToken\n          ? undefined\n          : { [Authorization]: getAuthorization() }),\n        ...options.headers,\n      },\n      interceptors: true,\n    },\n  };\n});\n\nrequest.interceptors.response.use(async (response: Response, options) => {\n  if (response?.status === 413 || response?.status === 504) {\n    message.error(RetcodeMessage[response?.status as ResultCode]);\n  }\n\n  if (options.responseType === 'blob') {\n    return response;\n  }\n\n  const data: ResponseType = await response?.clone()?.json();\n  if (data?.code === 100) {\n    message.error(data?.message);\n  } else if (data?.code === 401) {\n    notification.error({\n      message: data?.message,\n      description: data?.message,\n      duration: 3,\n    });\n    authorizationUtil.removeAll();\n    redirectToLogin();\n  } else if (data?.code !== 0) {\n    notification.error({\n      message: `${i18n.t('message.hint')} : ${data?.code}`,\n      description: data?.message,\n      duration: 3,\n    });\n  }\n  return response;\n});\n\nexport default request;\n\nexport const get = (url: string) => {\n  return request.get(url);\n};\n\nexport const post = (url: string, body: any) => {\n  return request.post(url, { data: body });\n};\n\nexport const drop = () => {};\n\nexport const put = () => {};\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 86635;\nmodule.exports = webpackEmptyAsyncContext;"],"names":["useOperateApiKey","idKey","dialogId","removeToken","useRemoveSystemToken","_useCreateSystemToken","useCreateSystemToken","createToken","creatingLoading","loading","_useFetchSystemTokenL","useFetchSystemTokenList","tokenList","data","listLoading","showDeleteConfirm","useShowDeleteConfirm","token","onOk","useCallback","_defineProperty","useFetchTokenListBeforeOtherStep","t","showTokenEmptyError","useTranslate","message","error","_useShowBetaEmptyErro","showBetaEmptyError","useShowBetaEmptyError","_useFetchManualSystem","useFetchManualSystemTokenList","fetchSystemTokenList","beta","Array","isArray","length","handleOperate","_asyncToGenerator","_regeneratorRuntime","mark","_callee","ret","list","_list$","wrap","_context","prev","next","sent","abrupt","stop","useShowEmbedModal","_useSetModalState","useSetModalState","embedVisible","visible","hideEmbedModal","hideModal","showEmbedModal","showModal","_useFetchTokenListBef","_callee2","_context2","embedToken","usePreviewChat","open","window","from","arguments","undefined","_window$location","location","protocol","host","concat","getUrlWithToken","SharedFrom","Agent","Chat","handlePreview","_callee3","_context3","_ref","text","_useState","useState","_useState2","_slicedToArray","copied","setCopied","_jsx","Tooltip","title","children","Clipboard","onCopy","setTimeout","CheckOutlined","CopyOutlined","MessageType","ChatVariableEnabledField","variableEnabledFieldMap","TemperatureEnabled","TopPEnabled","PresencePenaltyEnabled","FrequencyPenaltyEnabled","MaxTokensEnabled","ChatSearchParams","EmptyConversationId","setVisible","switchVisible","modal","App","useApp","useTranslation","_ref2","content","onCancel","Promise","resolve","reject","confirm","icon","ExclamationCircleFilled","okText","okType","cancelText","console","info","t0","keyPrefix","useFetchUserInfo","_queryFn","i18n","_useQuery","useQuery","queryKey","initialData","gcTime","queryFn","_data$data","_yield$userService$us","userService","user_info","code","changeLanguage","LanguageTranslationMap","language","apply","isFetching","useFetchTenantInfo","_queryFn2","showEmptyModelWarn","_useQuery2","_yield$userService$ge","res","_data","get_tenant_info","isEmpty","embd_id","llm_id","Modal","warning","dangerouslySetInnerHTML","__html","DOMPurify","history","push","chat_id","speech2text_id","asr_id","useSelectParserList","tenantInfo","useMemo","_tenantInfo$parser_id","_tenantInfo$parser_id2","parser_ids","split","map","x","arr","value","label","useSaveSetting","_mutationFn","queryClient","useQueryClient","_useMutation","useMutation","mutationKey","mutationFn","userInfo","_yield$userService$se","setting","success","invalidateQueries","_x","isPending","saveSetting","mutateAsync","useFetchSystemVersion","version","setVersion","_useState3","_useState4","setLoading","fetchSystemVersion","_callee4","_yield$userService$ge2","_context4","getSystemVersion","useFetchSystemStatus","_useState5","_useState6","systemStatus","setSystemStatus","_useState7","_useState8","fetchSystemStatus","_callee5","_yield$userService$ge3","_context5","getSystemStatus","_mutationFn2","_useMutation2","_callee6","_data$data2","_yield$userService$li","_context6","listToken","_queryFn3","_useQuery3","_callee7","_data$data3","_yield$userService$li2","_context7","refetch","_mutationFn3","_useMutation3","_callee8","_data$data4","_yield$userService$re","_context8","_x2","_mutationFn4","_useMutation4","_callee9","params","_data$data5","_yield$userService$cr","_context9","_x3","useListTenantUser","_queryFn4","tenantId","tenant_id","_useQuery4","enabled","_callee10","_data$data6","_yield$listTenantUser","_context10","listTenantUser","useAddTenantUser","_mutationFn5","_useMutation5","_callee11","email","_yield$addTenantUser","_context11","addTenantUser","_x4","useDeleteTenantUser","_mutationFn6","_useMutation6","_callee12","_ref3","_data$data7","userId","_yield$deleteTenantUs","_context12","deleteTenantUser","_x5","useListTenant","_queryFn5","_useQuery5","_callee13","_data$data8","_yield$listTenant","_context13","listTenant","useAgreeTenant","_mutationFn7","_useMutation7","_callee14","_data$data9","_yield$agreeTenant","_context14","agreeTenant","_x6","_useOperateApiKey","columns","dataIndex","key","render","formatDate","_","record","_jsxs","Space","size","CopyToClipboard","DeleteOutlined","onClick","_Fragment","cancelButtonProps","style","display","top","width","Table","dataSource","rowKey","pagination","Button","disabled","Paragraph","Typography","show","Card","type","Flex","gap","align","copyable","origin","className","styles","items","setItems","useEffect","headings","document","querySelectorAll","tocItems","currentH2Item","forEach","heading","textContent","id","isH2","tagName","toLowerCase","item","href","slice","position","right","background","padding","maxHeight","overflowY","zIndex","Anchor","affix","_ref$hideChatPreviewC","hideChatPreviewCard","apiKeyVisible","hideApiKeyModal","showApiKeyModal","vertical","BackendServiceApi","name","MarkdownToc","apiDoc","MarkdownPreview","source","ChatApiKeyModal","ApiContent","login","api","logout","register","tenant_info","factories_list","llm_list","my_llm","set_api_key","set_tenant_info","add_llm","delete_llm","deleteFactory","getSystemTokenList","removeSystemToken","methods","url","method","createSystemToken","registerServer","request","post","api_host","kb_list","create_kb","update_kb","rm_kb","get_kb_detail","getKnowledgeGraph","knowledgeId","listTag","listTagByKnowledgeIds","removeTag","renameTag","chunk_list","create_chunk","set_chunk","get_chunk","switch_chunk","rm_chunk","retrieval_test","knowledge_graph","get_document_list","document_change_status","document_rm","document_delete","document_rename","document_create","document_run","document_change_parser","document_thumbnails","get_document_file","document_upload","web_crawl","document_infos","upload_and_parse","parse","setMeta","setDialog","getDialog","removeDialog","listDialog","setConversation","getConversation","getConversationSSE","listConversation","removeConversation","completeConversation","deleteMessage","thumbup","tts","ask","mindmap","getRelatedQuestions","getStats","createExternalConversation","getExternalConversation","completeExternalConversation","uploadAndParseExternal","listFile","uploadFile","removeFile","renameFile","getAllParentFolder","createFolder","connectFileToKnowledge","getFile","moveFile","listSystemToken","listTemplates","listCanvas","getCanvas","getCanvasSSE","removeCanvas","setCanvas","resetCanvas","runCanvas","testDbConnect","getInputElements","debug","date","dayjs","format","formatTime","formatPureDate","Methods","opt","server","_loop","urlAppendix","requestOptions","some","get","_objectSpread","omit","RetcodeMessage","extend","errorHandler","response","notification","description","status","errorText","statusText","timeout","getResponse","interceptors","use","options","convertTheKeysOfTheObjectToSnake","headers","skipToken","Authorization","getAuthorization","_response$clone","responseType","clone","json","duration","authorizationUtil","removeAll","redirectToLogin","body","webpackEmptyAsyncContext","req","then","e","Error","keys","module","exports"],"sourceRoot":""}