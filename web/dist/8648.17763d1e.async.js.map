{"version":3,"file":"8648.17763d1e.async.js","mappings":"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","sources":["webpack:///./src/constants/chat.ts","webpack:///./src/constants/knowledge.ts","webpack:///./src/hooks/common-hooks.tsx","webpack:///./src/hooks/logic-hooks.ts","webpack:///./src/hooks/route-hook.ts","webpack:///./src/hooks/user-setting-hooks.tsx","webpack:///./src/services/user-service.ts","webpack:///./src/utils/api.ts","webpack:///./src/utils/chat.ts","webpack:///./src/utils/register-server.ts","webpack:///./src/utils/request.ts","webpack:///./src/hooks/ lazy namespace object"],"sourcesContent":["export enum MessageType {\n  Assistant = 'assistant',\n  User = 'user',\n}\n\nexport enum ChatVariableEnabledField {\n  TemperatureEnabled = 'temperatureEnabled',\n  TopPEnabled = 'topPEnabled',\n  PresencePenaltyEnabled = 'presencePenaltyEnabled',\n  FrequencyPenaltyEnabled = 'frequencyPenaltyEnabled',\n  MaxTokensEnabled = 'maxTokensEnabled',\n}\n\nexport const variableEnabledFieldMap = {\n  [ChatVariableEnabledField.TemperatureEnabled]: 'temperature',\n  [ChatVariableEnabledField.TopPEnabled]: 'top_p',\n  [ChatVariableEnabledField.PresencePenaltyEnabled]: 'presence_penalty',\n  [ChatVariableEnabledField.FrequencyPenaltyEnabled]: 'frequency_penalty',\n  [ChatVariableEnabledField.MaxTokensEnabled]: 'max_tokens',\n};\n\nexport enum SharedFrom {\n  Agent = 'agent',\n  Chat = 'chat',\n}\n\nexport enum ChatSearchParams {\n  DialogId = 'dialogId',\n  ConversationId = 'conversationId',\n  isNew = 'isNew',\n}\n\nexport const EmptyConversationId = 'empty';\n","export enum KnowledgeRouteKey {\n  Dataset = 'dataset',\n  Testing = 'testing',\n  Configuration = 'configuration',\n  KnowledgeGraph = 'knowledgeGraph',\n}\n\nexport const DatasetBaseKey = 'dataset';\n\nexport enum RunningStatus {\n  UNSTART = '0', // need to run\n  RUNNING = '1', // need to cancel\n  CANCEL = '2', // need to refresh\n  DONE = '3', // need to refresh\n  FAIL = '4', // need to refresh\n}\n\nexport enum ModelVariableType {\n  Improvise = 'Improvise',\n  Precise = 'Precise',\n  Balance = 'Balance',\n}\n\nexport const settledModelVariableMap = {\n  [ModelVariableType.Improvise]: {\n    temperature: 0.9,\n    top_p: 0.9,\n    frequency_penalty: 0.2,\n    presence_penalty: 0.4,\n    max_tokens: 512,\n  },\n  [ModelVariableType.Precise]: {\n    temperature: 0.1,\n    top_p: 0.3,\n    frequency_penalty: 0.7,\n    presence_penalty: 0.4,\n    max_tokens: 512,\n  },\n  [ModelVariableType.Balance]: {\n    temperature: 0.5,\n    top_p: 0.5,\n    frequency_penalty: 0.7,\n    presence_penalty: 0.4,\n    max_tokens: 512,\n  },\n};\n\nexport enum LlmModelType {\n  Embedding = 'embedding',\n  Chat = 'chat',\n  Image2text = 'image2text',\n  Speech2text = 'speech2text',\n  Rerank = 'rerank',\n  TTS = 'tts',\n}\n\nexport enum KnowledgeSearchParams {\n  DocumentId = 'doc_id',\n  KnowledgeId = 'id',\n}\n\nexport enum DocumentType {\n  Virtual = 'virtual',\n  Visual = 'visual',\n}\n\nexport enum DocumentParserType {\n  Naive = 'naive',\n  Qa = 'qa',\n  Resume = 'resume',\n  Manual = 'manual',\n  Table = 'table',\n  Paper = 'paper',\n  Book = 'book',\n  Laws = 'laws',\n  Presentation = 'presentation',\n  Picture = 'picture',\n  One = 'one',\n  Audio = 'audio',\n  Email = 'email',\n  Tag = 'tag',\n  KnowledgeGraph = 'knowledge_graph',\n}\n","import { ExclamationCircleFilled } from '@ant-design/icons';\nimport { App } from 'antd';\nimport isEqual from 'lodash/isEqual';\nimport { ReactNode, useCallback, useEffect, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nexport const useSetModalState = () => {\n  const [visible, setVisible] = useState(false);\n\n  const showModal = useCallback(() => {\n    setVisible(true);\n  }, []);\n  const hideModal = useCallback(() => {\n    setVisible(false);\n  }, []);\n\n  const switchVisible = useCallback(() => {\n    setVisible(!visible);\n  }, [visible]);\n\n  return { visible, showModal, hideModal, switchVisible };\n};\n\nexport const useDeepCompareEffect = (\n  effect: React.EffectCallback,\n  deps: React.DependencyList,\n) => {\n  const ref = useRef<React.DependencyList>();\n  let callback: ReturnType<React.EffectCallback> = () => {};\n  if (!isEqual(deps, ref.current)) {\n    callback = effect();\n    ref.current = deps;\n  }\n  useEffect(() => {\n    return () => {\n      if (callback) {\n        callback();\n      }\n    };\n  }, []);\n};\n\nexport interface UseDynamicSVGImportOptions {\n  onCompleted?: (\n    name: string,\n    SvgIcon: React.FC<React.SVGProps<SVGSVGElement>> | undefined,\n  ) => void;\n  onError?: (err: Error) => void;\n}\n\nexport function useDynamicSVGImport(\n  name: string,\n  options: UseDynamicSVGImportOptions = {},\n) {\n  const ImportedIconRef = useRef<React.FC<React.SVGProps<SVGSVGElement>>>();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<Error>();\n\n  const { onCompleted, onError } = options;\n  useEffect(() => {\n    setLoading(true);\n    const importIcon = async (): Promise<void> => {\n      try {\n        ImportedIconRef.current = (await import(name)).ReactComponent;\n        onCompleted?.(name, ImportedIconRef.current);\n      } catch (err: any) {\n        onError?.(err);\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    importIcon();\n  }, [name, onCompleted, onError]);\n\n  return { error, loading, SvgIcon: ImportedIconRef.current };\n}\n\ninterface IProps {\n  title?: string;\n  content?: ReactNode;\n  onOk?: (...args: any[]) => any;\n  onCancel?: (...args: any[]) => any;\n}\n\nexport const useShowDeleteConfirm = () => {\n  const { modal } = App.useApp();\n  const { t } = useTranslation();\n\n  const showDeleteConfirm = useCallback(\n    ({ title, content, onOk, onCancel }: IProps): Promise<number> => {\n      return new Promise((resolve, reject) => {\n        modal.confirm({\n          title: title ?? t('common.deleteModalTitle'),\n          icon: <ExclamationCircleFilled />,\n          content,\n          okText: t('common.ok'),\n          okType: 'danger',\n          cancelText: t('common.cancel'),\n          async onOk() {\n            try {\n              const ret = await onOk?.();\n              resolve(ret);\n              console.info(ret);\n            } catch (error) {\n              reject(error);\n            }\n          },\n          onCancel() {\n            onCancel?.();\n          },\n        });\n      });\n    },\n    [t, modal],\n  );\n\n  return showDeleteConfirm;\n};\n\nexport const useTranslate = (keyPrefix: string) => {\n  return useTranslation('translation', { keyPrefix });\n};\n\nexport const useCommonTranslation = () => {\n  return useTranslation('translation', { keyPrefix: 'common' });\n};\n","import { Authorization } from '@/constants/authorization';\nimport { MessageType } from '@/constants/chat';\nimport { LanguageTranslationMap } from '@/constants/common';\nimport { ResponseType } from '@/interfaces/database/base';\nimport { IAnswer, Message } from '@/interfaces/database/chat';\nimport { IKnowledgeFile } from '@/interfaces/database/knowledge';\nimport { IClientConversation, IMessage } from '@/pages/chat/interface';\nimport api from '@/utils/api';\nimport { getAuthorization } from '@/utils/authorization-util';\nimport { buildMessageUuid } from '@/utils/chat';\nimport { PaginationProps, message } from 'antd';\nimport { FormInstance } from 'antd/lib';\nimport axios from 'axios';\nimport { EventSourceParserStream } from 'eventsource-parser/stream';\nimport { omit } from 'lodash';\nimport {\n  ChangeEventHandler,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { v4 as uuid } from 'uuid';\nimport { useTranslate } from './common-hooks';\nimport { useSetPaginationParams } from './route-hook';\nimport { useFetchTenantInfo, useSaveSetting } from './user-setting-hooks';\n\nexport const useSetSelectedRecord = <T = IKnowledgeFile>() => {\n  const [currentRecord, setCurrentRecord] = useState<T>({} as T);\n\n  const setRecord = (record: T) => {\n    setCurrentRecord(record);\n  };\n\n  return { currentRecord, setRecord };\n};\n\nexport const useHandleSearchChange = () => {\n  const [searchString, setSearchString] = useState('');\n\n  const handleInputChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n      const value = e.target.value;\n      setSearchString(value);\n    },\n    [],\n  );\n\n  return { handleInputChange, searchString };\n};\n\nexport const useChangeLanguage = () => {\n  const { i18n } = useTranslation();\n  const { saveSetting } = useSaveSetting();\n\n  const changeLanguage = (lng: string) => {\n    i18n.changeLanguage(\n      LanguageTranslationMap[lng as keyof typeof LanguageTranslationMap],\n    );\n    saveSetting({ language: lng });\n  };\n\n  return changeLanguage;\n};\n\nexport const useGetPaginationWithRouter = () => {\n  const { t } = useTranslate('common');\n  const {\n    setPaginationParams,\n    page,\n    size: pageSize,\n  } = useSetPaginationParams();\n\n  const onPageChange: PaginationProps['onChange'] = useCallback(\n    (pageNumber: number, pageSize: number) => {\n      setPaginationParams(pageNumber, pageSize);\n    },\n    [setPaginationParams],\n  );\n\n  const setCurrentPagination = useCallback(\n    (pagination: { page: number; pageSize?: number }) => {\n      setPaginationParams(pagination.page, pagination.pageSize);\n    },\n    [setPaginationParams],\n  );\n\n  const pagination: PaginationProps = useMemo(() => {\n    return {\n      showQuickJumper: true,\n      total: 0,\n      showSizeChanger: true,\n      current: page,\n      pageSize: pageSize,\n      pageSizeOptions: [1, 2, 10, 20, 50, 100],\n      onChange: onPageChange,\n      showTotal: (total) => `${t('total')} ${total}`,\n    };\n  }, [t, onPageChange, page, pageSize]);\n\n  return {\n    pagination,\n    setPagination: setCurrentPagination,\n  };\n};\n\nexport const useGetPagination = () => {\n  const [pagination, setPagination] = useState({ page: 1, pageSize: 10 });\n  const { t } = useTranslate('common');\n\n  const onPageChange: PaginationProps['onChange'] = useCallback(\n    (pageNumber: number, pageSize: number) => {\n      setPagination({ page: pageNumber, pageSize });\n    },\n    [],\n  );\n\n  const currentPagination: PaginationProps = useMemo(() => {\n    return {\n      showQuickJumper: true,\n      total: 0,\n      showSizeChanger: true,\n      current: pagination.page,\n      pageSize: pagination.pageSize,\n      pageSizeOptions: [1, 2, 10, 20, 50, 100],\n      onChange: onPageChange,\n      showTotal: (total) => `${t('total')} ${total}`,\n    };\n  }, [t, onPageChange, pagination]);\n\n  return {\n    pagination: currentPagination,\n  };\n};\n\nexport interface AppConf {\n  appName: string;\n}\n\nexport const useFetchAppConf = () => {\n  const [appConf, setAppConf] = useState<AppConf>({} as AppConf);\n  const fetchAppConf = useCallback(async () => {\n    const ret = await axios.get('/conf.json');\n\n    setAppConf(ret.data);\n  }, []);\n\n  useEffect(() => {\n    fetchAppConf();\n  }, [fetchAppConf]);\n\n  return appConf;\n};\n\nexport const useSendMessageWithSse = (\n  url: string = api.completeConversation,\n) => {\n  const [answer, setAnswer] = useState<IAnswer>({} as IAnswer);\n  const [done, setDone] = useState(true);\n  const timer = useRef<any>();\n\n  const resetAnswer = useCallback(() => {\n    if (timer.current) {\n      clearTimeout(timer.current);\n    }\n    timer.current = setTimeout(() => {\n      setAnswer({} as IAnswer);\n      clearTimeout(timer.current);\n    }, 1000);\n  }, []);\n\n  const send = useCallback(\n    async (\n      body: any,\n      controller?: AbortController,\n    ): Promise<{ response: Response; data: ResponseType } | undefined> => {\n      try {\n        setDone(false);\n        const response = await fetch(url, {\n          method: 'POST',\n          headers: {\n            [Authorization]: getAuthorization(),\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(body),\n          signal: controller?.signal,\n        });\n\n        const res = response.clone().json();\n\n        const reader = response?.body\n          ?.pipeThrough(new TextDecoderStream())\n          .pipeThrough(new EventSourceParserStream())\n          .getReader();\n\n        while (true) {\n          const x = await reader?.read();\n          if (x) {\n            const { done, value } = x;\n            if (done) {\n              console.info('done');\n              resetAnswer();\n              break;\n            }\n            try {\n              const val = JSON.parse(value?.data || '');\n              const d = val?.data;\n              if (typeof d !== 'boolean') {\n                console.info('data:', d);\n                setAnswer({\n                  ...d,\n                  conversationId: body?.conversation_id,\n                });\n              }\n            } catch (e) {\n              console.warn(e);\n            }\n          }\n        }\n        console.info('done?');\n        setDone(true);\n        resetAnswer();\n        return { data: await res, response };\n      } catch (e) {\n        setDone(true);\n        resetAnswer();\n\n        console.warn(e);\n      }\n    },\n    [url, resetAnswer],\n  );\n\n  return { send, answer, done, setDone, resetAnswer };\n};\n\nexport const useSpeechWithSse = (url: string = api.tts) => {\n  const read = useCallback(\n    async (body: any) => {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          [Authorization]: getAuthorization(),\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body),\n      });\n      try {\n        const res = await response.clone().json();\n        if (res?.code !== 0) {\n          message.error(res?.message);\n        }\n      } catch (error) {\n        console.warn('🚀 ~ error:', error);\n      }\n      return response;\n    },\n    [url],\n  );\n\n  return { read };\n};\n\n//#region chat hooks\n\nexport const useScrollToBottom = (messages?: unknown) => {\n  const ref = useRef<HTMLDivElement>(null);\n\n  const scrollToBottom = useCallback(() => {\n    if (messages) {\n      ref.current?.scrollIntoView({ behavior: 'instant' });\n    }\n  }, [messages]); // If the message changes, scroll to the bottom\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [scrollToBottom]);\n\n  return ref;\n};\n\nexport const useHandleMessageInputChange = () => {\n  const [value, setValue] = useState('');\n\n  const handleInputChange: ChangeEventHandler<HTMLTextAreaElement> = (e) => {\n    const value = e.target.value;\n    const nextValue = value.replaceAll('\\\\n', '\\n').replaceAll('\\\\t', '\\t');\n    setValue(nextValue);\n  };\n\n  return {\n    handleInputChange,\n    value,\n    setValue,\n  };\n};\n\nexport const useSelectDerivedMessages = () => {\n  const [derivedMessages, setDerivedMessages] = useState<IMessage[]>([]);\n\n  const ref = useScrollToBottom(derivedMessages);\n\n  const addNewestQuestion = useCallback(\n    (message: Message, answer: string = '') => {\n      setDerivedMessages((pre) => {\n        return [\n          ...pre,\n          {\n            ...message,\n            id: buildMessageUuid(message), // The message id is generated on the front end,\n            // and the message id returned by the back end is the same as the question id,\n            //  so that the pair of messages can be deleted together when deleting the message\n          },\n          {\n            role: MessageType.Assistant,\n            content: answer,\n            id: buildMessageUuid({ ...message, role: MessageType.Assistant }),\n          },\n        ];\n      });\n    },\n    [],\n  );\n\n  // Add the streaming message to the last item in the message list\n  const addNewestAnswer = useCallback((answer: IAnswer) => {\n    setDerivedMessages((pre) => {\n      return [\n        ...(pre?.slice(0, -1) ?? []),\n        {\n          role: MessageType.Assistant,\n          content: answer.answer,\n          reference: answer.reference,\n          id: buildMessageUuid({\n            id: answer.id,\n            role: MessageType.Assistant,\n          }),\n          prompt: answer.prompt,\n          audio_binary: answer.audio_binary,\n          ...omit(answer, 'reference'),\n        },\n      ];\n    });\n  }, []);\n\n  const removeLatestMessage = useCallback(() => {\n    setDerivedMessages((pre) => {\n      const nextMessages = pre?.slice(0, -2) ?? [];\n      return nextMessages;\n    });\n  }, []);\n\n  const removeMessageById = useCallback(\n    (messageId: string) => {\n      setDerivedMessages((pre) => {\n        const nextMessages = pre?.filter((x) => x.id !== messageId) ?? [];\n        return nextMessages;\n      });\n    },\n    [setDerivedMessages],\n  );\n\n  const removeMessagesAfterCurrentMessage = useCallback(\n    (messageId: string) => {\n      setDerivedMessages((pre) => {\n        const index = pre.findIndex((x) => x.id === messageId);\n        if (index !== -1) {\n          let nextMessages = pre.slice(0, index + 2) ?? [];\n          const latestMessage = nextMessages.at(-1);\n          nextMessages = latestMessage\n            ? [\n                ...nextMessages.slice(0, -1),\n                {\n                  ...latestMessage,\n                  content: '',\n                  reference: undefined,\n                  prompt: undefined,\n                },\n              ]\n            : nextMessages;\n          return nextMessages;\n        }\n        return pre;\n      });\n    },\n    [setDerivedMessages],\n  );\n\n  return {\n    ref,\n    derivedMessages,\n    setDerivedMessages,\n    addNewestQuestion,\n    addNewestAnswer,\n    removeLatestMessage,\n    removeMessageById,\n    removeMessagesAfterCurrentMessage,\n  };\n};\n\nexport interface IRemoveMessageById {\n  removeMessageById(messageId: string): void;\n}\n\nexport const useRemoveMessagesAfterCurrentMessage = (\n  setCurrentConversation: (\n    callback: (state: IClientConversation) => IClientConversation,\n  ) => void,\n) => {\n  const removeMessagesAfterCurrentMessage = useCallback(\n    (messageId: string) => {\n      setCurrentConversation((pre) => {\n        const index = pre.message?.findIndex((x) => x.id === messageId);\n        if (index !== -1) {\n          let nextMessages = pre.message?.slice(0, index + 2) ?? [];\n          const latestMessage = nextMessages.at(-1);\n          nextMessages = latestMessage\n            ? [\n                ...nextMessages.slice(0, -1),\n                {\n                  ...latestMessage,\n                  content: '',\n                  reference: undefined,\n                  prompt: undefined,\n                },\n              ]\n            : nextMessages;\n          return {\n            ...pre,\n            message: nextMessages,\n          };\n        }\n        return pre;\n      });\n    },\n    [setCurrentConversation],\n  );\n\n  return { removeMessagesAfterCurrentMessage };\n};\n\nexport interface IRegenerateMessage {\n  regenerateMessage?: (message: Message) => void;\n}\n\nexport const useRegenerateMessage = ({\n  removeMessagesAfterCurrentMessage,\n  sendMessage,\n  messages,\n}: {\n  removeMessagesAfterCurrentMessage(messageId: string): void;\n  sendMessage({\n    message,\n  }: {\n    message: Message;\n    messages?: Message[];\n  }): void | Promise<any>;\n  messages: Message[];\n}) => {\n  const regenerateMessage = useCallback(\n    async (message: Message) => {\n      if (message.id) {\n        removeMessagesAfterCurrentMessage(message.id);\n        const index = messages.findIndex((x) => x.id === message.id);\n        let nextMessages;\n        if (index !== -1) {\n          nextMessages = messages.slice(0, index);\n        }\n        sendMessage({\n          message: { ...message, id: uuid() },\n          messages: nextMessages,\n        });\n      }\n    },\n    [removeMessagesAfterCurrentMessage, sendMessage, messages],\n  );\n\n  return { regenerateMessage };\n};\n\n// #endregion\n\n/**\n *\n * @param defaultId\n * used to switch between different items, similar to radio\n * @returns\n */\nexport const useSelectItem = (defaultId?: string) => {\n  const [selectedId, setSelectedId] = useState('');\n\n  const handleItemClick = useCallback(\n    (id: string) => () => {\n      setSelectedId(id);\n    },\n    [],\n  );\n\n  useEffect(() => {\n    if (defaultId) {\n      setSelectedId(defaultId);\n    }\n  }, [defaultId]);\n\n  return { selectedId, handleItemClick };\n};\n\nexport const useFetchModelId = () => {\n  const { data: tenantInfo } = useFetchTenantInfo(true);\n\n  return tenantInfo?.llm_id ?? '';\n};\n\nconst ChunkTokenNumMap = {\n  naive: 128,\n  knowledge_graph: 8192,\n};\n\nexport const useHandleChunkMethodSelectChange = (form: FormInstance) => {\n  // const form = Form.useFormInstance();\n  const handleChange = useCallback(\n    (value: string) => {\n      if (value in ChunkTokenNumMap) {\n        form.setFieldValue(\n          ['parser_config', 'chunk_token_num'],\n          ChunkTokenNumMap[value as keyof typeof ChunkTokenNumMap],\n        );\n      }\n    },\n    [form],\n  );\n\n  return handleChange;\n};\n\n// reset form fields when modal is form, closed\nexport const useResetFormOnCloseModal = ({\n  form,\n  visible,\n}: {\n  form: FormInstance;\n  visible?: boolean;\n}) => {\n  const prevOpenRef = useRef<boolean>();\n  useEffect(() => {\n    prevOpenRef.current = visible;\n  }, [visible]);\n  const prevOpen = prevOpenRef.current;\n\n  useEffect(() => {\n    if (!visible && prevOpen) {\n      form.resetFields();\n    }\n  }, [form, prevOpen, visible]);\n};\n","import {\n  KnowledgeRouteKey,\n  KnowledgeSearchParams,\n} from '@/constants/knowledge';\nimport { useCallback } from 'react';\nimport { useLocation, useNavigate, useSearchParams } from 'umi';\n\nexport enum SegmentIndex {\n  Second = '2',\n  Third = '3',\n}\n\nexport const useSegmentedPathName = (index: SegmentIndex) => {\n  const { pathname } = useLocation();\n\n  const pathArray = pathname.split('/');\n  return pathArray[index] || '';\n};\n\nexport const useSecondPathName = () => {\n  return useSegmentedPathName(SegmentIndex.Second);\n};\n\nexport const useThirdPathName = () => {\n  return useSegmentedPathName(SegmentIndex.Third);\n};\n\nexport const useGetKnowledgeSearchParams = () => {\n  const [currentQueryParameters] = useSearchParams();\n\n  return {\n    documentId:\n      currentQueryParameters.get(KnowledgeSearchParams.DocumentId) || '',\n    knowledgeId:\n      currentQueryParameters.get(KnowledgeSearchParams.KnowledgeId) || '',\n  };\n};\n\nexport const useNavigateWithFromState = () => {\n  const navigate = useNavigate();\n  return useCallback(\n    (path: string) => {\n      navigate(path, { state: { from: path } });\n    },\n    [navigate],\n  );\n};\n\nexport const useNavigateToDataset = () => {\n  const navigate = useNavigate();\n  const { knowledgeId } = useGetKnowledgeSearchParams();\n\n  return useCallback(() => {\n    navigate(`/knowledge/${KnowledgeRouteKey.Dataset}?id=${knowledgeId}`);\n  }, [knowledgeId, navigate]);\n};\n\nexport const useGetPaginationParams = () => {\n  const [currentQueryParameters] = useSearchParams();\n\n  return {\n    page: currentQueryParameters.get('page') || 1,\n    size: currentQueryParameters.get('size') || 10,\n  };\n};\n\nexport const useSetPaginationParams = () => {\n  const [queryParameters, setSearchParams] = useSearchParams();\n  // const newQueryParameters: URLSearchParams = useMemo(\n  //   () => new URLSearchParams(queryParameters.toString()),\n  //   [queryParameters],\n  // );\n\n  const setPaginationParams = useCallback(\n    (page: number = 1, pageSize?: number) => {\n      queryParameters.set('page', page.toString());\n      if (pageSize) {\n        queryParameters.set('size', pageSize.toString());\n      }\n      setSearchParams(queryParameters);\n    },\n    [setSearchParams, queryParameters],\n  );\n\n  return {\n    setPaginationParams,\n    page: Number(queryParameters.get('page')) || 1,\n    size: Number(queryParameters.get('size')) || 10,\n  };\n};\n","import { LanguageTranslationMap } from '@/constants/common';\nimport { ResponseGetType } from '@/interfaces/database/base';\nimport { IToken } from '@/interfaces/database/chat';\nimport { ITenantInfo } from '@/interfaces/database/knowledge';\nimport {\n  ISystemStatus,\n  ITenant,\n  ITenantUser,\n  IUserInfo,\n} from '@/interfaces/database/user-setting';\nimport userService, {\n  addTenantUser,\n  agreeTenant,\n  deleteTenantUser,\n  listTenant,\n  listTenantUser,\n} from '@/services/user-service';\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { Modal, message } from 'antd';\nimport DOMPurify from 'dompurify';\nimport { isEmpty } from 'lodash';\nimport { useCallback, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { history } from 'umi';\n\nexport const useFetchUserInfo = (): ResponseGetType<IUserInfo> => {\n  const { i18n } = useTranslation();\n\n  const { data, isFetching: loading } = useQuery({\n    queryKey: ['userInfo'],\n    initialData: {},\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await userService.user_info();\n      if (data.code === 0) {\n        i18n.changeLanguage(\n          LanguageTranslationMap[\n            data.data.language as keyof typeof LanguageTranslationMap\n          ],\n        );\n      }\n      return data?.data ?? {};\n    },\n  });\n\n  return { data, loading };\n};\n\nexport const useFetchTenantInfo = (\n  showEmptyModelWarn = false,\n): ResponseGetType<ITenantInfo> => {\n  const { t } = useTranslation();\n  const { data, isFetching: loading } = useQuery({\n    queryKey: ['tenantInfo'],\n    initialData: {},\n    gcTime: 0,\n    queryFn: async () => {\n      const { data: res } = await userService.get_tenant_info();\n      if (res.code === 0) {\n        // llm_id is chat_id\n        // asr_id is speech2txt\n        const { data } = res;\n        if (\n          showEmptyModelWarn &&\n          (isEmpty(data.embd_id) || isEmpty(data.llm_id))\n        ) {\n          Modal.warning({\n            title: t('common.warn'),\n            content: (\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: DOMPurify.sanitize(t('setting.modelProvidersWarn')),\n                }}\n              ></div>\n            ),\n            onOk() {\n              history.push('/user-setting/model');\n            },\n          });\n        }\n        data.chat_id = data.llm_id;\n        data.speech2text_id = data.asr_id;\n\n        return data;\n      }\n\n      return res;\n    },\n  });\n\n  return { data, loading };\n};\n\nexport const useSelectParserList = (): Array<{\n  value: string;\n  label: string;\n}> => {\n  const { data: tenantInfo } = useFetchTenantInfo(true);\n\n  const parserList = useMemo(() => {\n    const parserArray: Array<string> = tenantInfo?.parser_ids?.split(',') ?? [];\n    return parserArray.map((x) => {\n      const arr = x.split(':');\n      return { value: arr[0], label: arr[1] };\n    });\n  }, [tenantInfo]);\n\n  return parserList;\n};\n\nexport const useSaveSetting = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['saveSetting'],\n    mutationFn: async (\n      userInfo: { new_password: string } | Partial<IUserInfo>,\n    ) => {\n      const { data } = await userService.setting(userInfo);\n      if (data.code === 0) {\n        message.success(t('message.modified'));\n        queryClient.invalidateQueries({ queryKey: ['userInfo'] });\n      }\n      return data?.code;\n    },\n  });\n\n  return { data, loading, saveSetting: mutateAsync };\n};\n\nexport const useFetchSystemVersion = () => {\n  const [version, setVersion] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const fetchSystemVersion = useCallback(async () => {\n    try {\n      setLoading(true);\n      const { data } = await userService.getSystemVersion();\n      if (data.code === 0) {\n        setVersion(data.data);\n        setLoading(false);\n      }\n    } catch (error) {\n      setLoading(false);\n    }\n  }, []);\n\n  return { fetchSystemVersion, version, loading };\n};\n\nexport const useFetchSystemStatus = () => {\n  const [systemStatus, setSystemStatus] = useState<ISystemStatus>(\n    {} as ISystemStatus,\n  );\n  const [loading, setLoading] = useState(false);\n\n  const fetchSystemStatus = useCallback(async () => {\n    setLoading(true);\n    const { data } = await userService.getSystemStatus();\n    if (data.code === 0) {\n      setSystemStatus(data.data);\n      setLoading(false);\n    }\n  }, []);\n\n  return {\n    systemStatus,\n    fetchSystemStatus,\n    loading,\n  };\n};\n\nexport const useFetchManualSystemTokenList = () => {\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['fetchManualSystemTokenList'],\n    mutationFn: async () => {\n      const { data } = await userService.listToken();\n\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, fetchSystemTokenList: mutateAsync };\n};\n\nexport const useFetchSystemTokenList = () => {\n  const {\n    data,\n    isFetching: loading,\n    refetch,\n  } = useQuery<IToken[]>({\n    queryKey: ['fetchSystemTokenList'],\n    initialData: [],\n    gcTime: 0,\n    queryFn: async () => {\n      const { data } = await userService.listToken();\n\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, refetch };\n};\n\nexport const useRemoveSystemToken = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['removeSystemToken'],\n    mutationFn: async (token: string) => {\n      const { data } = await userService.removeToken({}, token);\n      if (data.code === 0) {\n        message.success(t('message.deleted'));\n        queryClient.invalidateQueries({ queryKey: ['fetchSystemTokenList'] });\n      }\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, removeToken: mutateAsync };\n};\n\nexport const useCreateSystemToken = () => {\n  const queryClient = useQueryClient();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['createSystemToken'],\n    mutationFn: async (params: Record<string, any>) => {\n      const { data } = await userService.createToken(params);\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['fetchSystemTokenList'] });\n      }\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, createToken: mutateAsync };\n};\n\nexport const useListTenantUser = () => {\n  const { data: tenantInfo } = useFetchTenantInfo();\n  const tenantId = tenantInfo.tenant_id;\n  const {\n    data,\n    isFetching: loading,\n    refetch,\n  } = useQuery<ITenantUser[]>({\n    queryKey: ['listTenantUser', tenantId],\n    initialData: [],\n    gcTime: 0,\n    enabled: !!tenantId,\n    queryFn: async () => {\n      const { data } = await listTenantUser(tenantId);\n\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, refetch };\n};\n\nexport const useAddTenantUser = () => {\n  const { data: tenantInfo } = useFetchTenantInfo();\n  const queryClient = useQueryClient();\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['addTenantUser'],\n    mutationFn: async (email: string) => {\n      const { data } = await addTenantUser(tenantInfo.tenant_id, email);\n      if (data.code === 0) {\n        queryClient.invalidateQueries({ queryKey: ['listTenantUser'] });\n      }\n      return data?.code;\n    },\n  });\n\n  return { data, loading, addTenantUser: mutateAsync };\n};\n\nexport const useDeleteTenantUser = () => {\n  const { data: tenantInfo } = useFetchTenantInfo();\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['deleteTenantUser'],\n    mutationFn: async ({\n      userId,\n      tenantId,\n    }: {\n      userId: string;\n      tenantId?: string;\n    }) => {\n      const { data } = await deleteTenantUser({\n        tenantId: tenantId ?? tenantInfo.tenant_id,\n        userId,\n      });\n      if (data.code === 0) {\n        message.success(t('message.deleted'));\n        queryClient.invalidateQueries({ queryKey: ['listTenantUser'] });\n        queryClient.invalidateQueries({ queryKey: ['listTenant'] });\n      }\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, deleteTenantUser: mutateAsync };\n};\n\nexport const useListTenant = () => {\n  const { data: tenantInfo } = useFetchTenantInfo();\n  const tenantId = tenantInfo.tenant_id;\n  const {\n    data,\n    isFetching: loading,\n    refetch,\n  } = useQuery<ITenant[]>({\n    queryKey: ['listTenant', tenantId],\n    initialData: [],\n    gcTime: 0,\n    enabled: !!tenantId,\n    queryFn: async () => {\n      const { data } = await listTenant();\n\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, refetch };\n};\n\nexport const useAgreeTenant = () => {\n  const queryClient = useQueryClient();\n  const { t } = useTranslation();\n\n  const {\n    data,\n    isPending: loading,\n    mutateAsync,\n  } = useMutation({\n    mutationKey: ['agreeTenant'],\n    mutationFn: async (tenantId: string) => {\n      const { data } = await agreeTenant(tenantId);\n      if (data.code === 0) {\n        message.success(t('message.operated'));\n        queryClient.invalidateQueries({ queryKey: ['listTenant'] });\n      }\n      return data?.data ?? [];\n    },\n  });\n\n  return { data, loading, agreeTenant: mutateAsync };\n};\n","import api from '@/utils/api';\nimport registerServer from '@/utils/register-server';\nimport request, { post } from '@/utils/request';\n\nconst {\n  login,\n  logout,\n  register,\n  setting,\n  user_info,\n  tenant_info,\n  factories_list,\n  llm_list,\n  my_llm,\n  set_api_key,\n  set_tenant_info,\n  add_llm,\n  delete_llm,\n  deleteFactory,\n  getSystemStatus,\n  getSystemVersion,\n  getSystemTokenList,\n  removeSystemToken,\n  createSystemToken,\n} = api;\n\nconst methods = {\n  login: {\n    url: login,\n    method: 'post',\n  },\n  logout: {\n    url: logout,\n    method: 'get',\n  },\n  register: {\n    url: register,\n    method: 'post',\n  },\n  setting: {\n    url: setting,\n    method: 'post',\n  },\n  user_info: {\n    url: user_info,\n    method: 'get',\n  },\n  get_tenant_info: {\n    url: tenant_info,\n    method: 'get',\n  },\n  set_tenant_info: {\n    url: set_tenant_info,\n    method: 'post',\n  },\n  factories_list: {\n    url: factories_list,\n    method: 'get',\n  },\n  llm_list: {\n    url: llm_list,\n    method: 'get',\n  },\n  my_llm: {\n    url: my_llm,\n    method: 'get',\n  },\n  set_api_key: {\n    url: set_api_key,\n    method: 'post',\n  },\n  add_llm: {\n    url: add_llm,\n    method: 'post',\n  },\n  delete_llm: {\n    url: delete_llm,\n    method: 'post',\n  },\n  getSystemStatus: {\n    url: getSystemStatus,\n    method: 'get',\n  },\n  getSystemVersion: {\n    url: getSystemVersion,\n    method: 'get',\n  },\n  deleteFactory: {\n    url: deleteFactory,\n    method: 'post',\n  },\n  listToken: {\n    url: getSystemTokenList,\n    method: 'get',\n  },\n  createToken: {\n    url: createSystemToken,\n    method: 'post',\n  },\n  removeToken: {\n    url: removeSystemToken,\n    method: 'delete',\n  },\n} as const;\n\nconst userService = registerServer<keyof typeof methods>(methods, request);\n\nexport const listTenantUser = (tenantId: string) =>\n  request.get(api.listTenantUser(tenantId));\n\nexport const addTenantUser = (tenantId: string, email: string) =>\n  post(api.addTenantUser(tenantId), { email });\n\nexport const deleteTenantUser = ({\n  tenantId,\n  userId,\n}: {\n  tenantId: string;\n  userId: string;\n}) => request.delete(api.deleteTenantUser(tenantId, userId));\n\nexport const listTenant = () => request.get(api.listTenant);\n\nexport const agreeTenant = (tenantId: string) =>\n  request.put(api.agreeTenant(tenantId));\n\nexport default userService;\n","let api_host = `/v1`;\n\nexport { api_host };\n\nexport default {\n  // user\n  login: `${api_host}/user/login`,\n  logout: `${api_host}/user/logout`,\n  register: `${api_host}/user/register`,\n  setting: `${api_host}/user/setting`,\n  user_info: `${api_host}/user/info`,\n  tenant_info: `${api_host}/user/tenant_info`,\n  set_tenant_info: `${api_host}/user/set_tenant_info`,\n\n  // team\n  addTenantUser: (tenantId: string) => `${api_host}/tenant/${tenantId}/user`,\n  listTenantUser: (tenantId: string) =>\n    `${api_host}/tenant/${tenantId}/user/list`,\n  deleteTenantUser: (tenantId: string, userId: string) =>\n    `${api_host}/tenant/${tenantId}/user/${userId}`,\n  listTenant: `${api_host}/tenant/list`,\n  agreeTenant: (tenantId: string) => `${api_host}/tenant/agree/${tenantId}`,\n\n  // llm model\n  factories_list: `${api_host}/llm/factories`,\n  llm_list: `${api_host}/llm/list`,\n  my_llm: `${api_host}/llm/my_llms`,\n  set_api_key: `${api_host}/llm/set_api_key`,\n  add_llm: `${api_host}/llm/add_llm`,\n  delete_llm: `${api_host}/llm/delete_llm`,\n  deleteFactory: `${api_host}/llm/delete_factory`,\n\n  // knowledge base\n  kb_list: `${api_host}/kb/list`,\n  create_kb: `${api_host}/kb/create`,\n  update_kb: `${api_host}/kb/update`,\n  rm_kb: `${api_host}/kb/rm`,\n  get_kb_detail: `${api_host}/kb/detail`,\n  getKnowledgeGraph: (knowledgeId: string) =>\n    `${api_host}/kb/${knowledgeId}/knowledge_graph`,\n\n  // tags\n  listTag: (knowledgeId: string) => `${api_host}/kb/${knowledgeId}/tags`,\n  listTagByKnowledgeIds: `${api_host}/kb/tags`,\n  removeTag: (knowledgeId: string) => `${api_host}/kb/${knowledgeId}/rm_tags`,\n  renameTag: (knowledgeId: string) =>\n    `${api_host}/kb/${knowledgeId}/rename_tag`,\n\n  // chunk\n  chunk_list: `${api_host}/chunk/list`,\n  create_chunk: `${api_host}/chunk/create`,\n  set_chunk: `${api_host}/chunk/set`,\n  get_chunk: `${api_host}/chunk/get`,\n  switch_chunk: `${api_host}/chunk/switch`,\n  rm_chunk: `${api_host}/chunk/rm`,\n  retrieval_test: `${api_host}/chunk/retrieval_test`,\n  knowledge_graph: `${api_host}/chunk/knowledge_graph`,\n\n  // document\n  get_document_list: `${api_host}/document/list`,\n  document_change_status: `${api_host}/document/change_status`,\n  document_rm: `${api_host}/document/rm`,\n  document_delete: `${api_host}/api/document`,\n  document_rename: `${api_host}/document/rename`,\n  document_create: `${api_host}/document/create`,\n  document_run: `${api_host}/document/run`,\n  document_change_parser: `${api_host}/document/change_parser`,\n  document_thumbnails: `${api_host}/document/thumbnails`,\n  get_document_file: `${api_host}/document/get`,\n  document_upload: `${api_host}/document/upload`,\n  web_crawl: `${api_host}/document/web_crawl`,\n  document_infos: `${api_host}/document/infos`,\n  upload_and_parse: `${api_host}/document/upload_and_parse`,\n  parse: `${api_host}/document/parse`,\n  setMeta: `${api_host}/document/set_meta`,\n\n  // chat\n  setDialog: `${api_host}/dialog/set`,\n  getDialog: `${api_host}/dialog/get`,\n  removeDialog: `${api_host}/dialog/rm`,\n  listDialog: `${api_host}/dialog/list`,\n  setConversation: `${api_host}/conversation/set`,\n  getConversation: `${api_host}/conversation/get`,\n  getConversationSSE: `${api_host}/conversation/getsse`,\n  listConversation: `${api_host}/conversation/list`,\n  removeConversation: `${api_host}/conversation/rm`,\n  completeConversation: `${api_host}/conversation/completion`,\n  deleteMessage: `${api_host}/conversation/delete_msg`,\n  thumbup: `${api_host}/conversation/thumbup`,\n  tts: `${api_host}/conversation/tts`,\n  ask: `${api_host}/conversation/ask`,\n  mindmap: `${api_host}/conversation/mindmap`,\n  getRelatedQuestions: `${api_host}/conversation/related_questions`,\n  // chat for external\n  createToken: `${api_host}/api/new_token`,\n  listToken: `${api_host}/api/token_list`,\n  removeToken: `${api_host}/api/rm`,\n  getStats: `${api_host}/api/stats`,\n  createExternalConversation: `${api_host}/api/new_conversation`,\n  getExternalConversation: `${api_host}/api/conversation`,\n  completeExternalConversation: `${api_host}/api/completion`,\n  uploadAndParseExternal: `${api_host}/api/document/upload_and_parse`,\n\n  // file manager\n  listFile: `${api_host}/file/list`,\n  uploadFile: `${api_host}/file/upload`,\n  removeFile: `${api_host}/file/rm`,\n  renameFile: `${api_host}/file/rename`,\n  getAllParentFolder: `${api_host}/file/all_parent_folder`,\n  createFolder: `${api_host}/file/create`,\n  connectFileToKnowledge: `${api_host}/file2document/convert`,\n  getFile: `${api_host}/file/get`,\n  moveFile: `${api_host}/file/mv`,\n\n  // system\n  getSystemVersion: `${api_host}/system/version`,\n  getSystemStatus: `${api_host}/system/status`,\n  getSystemTokenList: `${api_host}/system/token_list`,\n  createSystemToken: `${api_host}/system/new_token`,\n  listSystemToken: `${api_host}/system/token_list`,\n  removeSystemToken: `${api_host}/system/token`,\n\n  // flow\n  listTemplates: `${api_host}/canvas/templates`,\n  listCanvas: `${api_host}/canvas/list`,\n  getCanvas: `${api_host}/canvas/get`,\n  getCanvasSSE: `${api_host}/canvas/getsse`,\n  removeCanvas: `${api_host}/canvas/rm`,\n  setCanvas: `${api_host}/canvas/set`,\n  resetCanvas: `${api_host}/canvas/reset`,\n  runCanvas: `${api_host}/canvas/completion`,\n  testDbConnect: `${api_host}/canvas/test_db_connect`,\n  getInputElements: `${api_host}/canvas/input_elements`,\n  debug: `${api_host}/canvas/debug`,\n};\n","import {\n  ChatVariableEnabledField,\n  EmptyConversationId,\n} from '@/constants/chat';\nimport { Message } from '@/interfaces/database/chat';\nimport { IMessage } from '@/pages/chat/interface';\nimport { omit } from 'lodash';\nimport { v4 as uuid } from 'uuid';\n\nexport const isConversationIdExist = (conversationId: string) => {\n  return conversationId !== EmptyConversationId && conversationId !== '';\n};\n\nexport const buildMessageUuid = (message: Partial<Message | IMessage>) => {\n  if ('id' in message && message.id) {\n    return message.id;\n  }\n  return uuid();\n};\n\nexport const buildMessageListWithUuid = (messages?: Message[]) => {\n  return (\n    messages?.map((x: Message | IMessage) => ({\n      ...omit(x, 'reference'),\n      id: buildMessageUuid(x),\n    })) ?? []\n  );\n};\n\nexport const getConversationId = () => {\n  return uuid().replace(/-/g, '');\n};\n\n// When rendering each message, add a prefix to the id to ensure uniqueness.\nexport const buildMessageUuidWithRole = (\n  message: Partial<Message | IMessage>,\n) => {\n  return `${message.role}_${message.id}`;\n};\n\n// Preprocess LaTeX equations to be rendered by KaTeX\n// ref: https://github.com/remarkjs/react-markdown/issues/785\n\nexport const preprocessLaTeX = (content: string) => {\n  const blockProcessedContent = content.replace(\n    /\\\\\\[([\\s\\S]*?)\\\\\\]/g,\n    (_, equation) => `$$${equation}$$`,\n  );\n  const inlineProcessedContent = blockProcessedContent.replace(\n    /\\\\\\(([\\s\\S]*?)\\\\\\)/g,\n    (_, equation) => `$${equation}$`,\n  );\n  return inlineProcessedContent;\n};\n\nexport function replaceThinkToSection(text: string = '') {\n  const pattern = /<think>([\\s\\S]*?)<\\/think>/g;\n\n  const result = text.replace(pattern, '<section class=\"think\">$1</section>');\n\n  return result;\n}\n\nexport function setInitialChatVariableEnabledFieldValue(\n  field: ChatVariableEnabledField,\n) {\n  return field !== ChatVariableEnabledField.MaxTokensEnabled;\n}\n","import omit from 'lodash/omit';\nimport { RequestMethod } from 'umi-request';\n\ntype Service<T extends string> = Record<\n  T,\n  (params?: any, urlAppendix?: string) => any\n>;\n\nconst Methods = ['post', 'delete', 'put'];\n\nconst registerServer = <T extends string>(\n  opt: Record<T, { url: string; method: string }>,\n  request: RequestMethod,\n) => {\n  const server: Service<T> = {} as Service<T>;\n  for (let key in opt) {\n    server[key] = (params?: any, urlAppendix?: string) => {\n      let url = opt[key].url;\n      const requestOptions = opt[key];\n      if (urlAppendix) {\n        url = url + '/' + urlAppendix;\n      }\n      if (Methods.some((x) => x === opt[key].method.toLowerCase())) {\n        return request(url, {\n          method: opt[key].method,\n          data: params,\n        });\n      }\n\n      if (opt[key].method === 'get' || opt[key].method === 'GET') {\n        return request.get(url, {\n          ...omit(requestOptions, ['method', 'url']),\n          params,\n        });\n      }\n    };\n  }\n  return server;\n};\n\nexport default registerServer;\n","import { Authorization } from '@/constants/authorization';\nimport { ResponseType } from '@/interfaces/database/base';\nimport i18n from '@/locales/config';\nimport authorizationUtil, {\n  getAuthorization,\n  redirectToLogin,\n} from '@/utils/authorization-util';\nimport { message, notification } from 'antd';\nimport { RequestMethod, extend } from 'umi-request';\nimport { convertTheKeysOfTheObjectToSnake } from './common-util';\n\nconst FAILED_TO_FETCH = 'Failed to fetch';\n\nconst RetcodeMessage = {\n  200: i18n.t('message.200'),\n  201: i18n.t('message.201'),\n  202: i18n.t('message.202'),\n  204: i18n.t('message.204'),\n  400: i18n.t('message.400'),\n  401: i18n.t('message.401'),\n  403: i18n.t('message.403'),\n  404: i18n.t('message.404'),\n  406: i18n.t('message.406'),\n  410: i18n.t('message.410'),\n  413: i18n.t('message.413'),\n  422: i18n.t('message.422'),\n  500: i18n.t('message.500'),\n  502: i18n.t('message.502'),\n  503: i18n.t('message.503'),\n  504: i18n.t('message.504'),\n};\ntype ResultCode =\n  | 200\n  | 201\n  | 202\n  | 204\n  | 400\n  | 401\n  | 403\n  | 404\n  | 406\n  | 410\n  | 413\n  | 422\n  | 500\n  | 502\n  | 503\n  | 504;\n\nconst errorHandler = (error: {\n  response: Response;\n  message: string;\n}): Response => {\n  const { response } = error;\n  if (error.message === FAILED_TO_FETCH) {\n    notification.error({\n      description: i18n.t('message.networkAnomalyDescription'),\n      message: i18n.t('message.networkAnomaly'),\n    });\n  } else {\n    if (response && response.status) {\n      const errorText =\n        RetcodeMessage[response.status as ResultCode] || response.statusText;\n      const { status, url } = response;\n      notification.error({\n        message: `${i18n.t('message.requestError')} ${status}: ${url}`,\n        description: errorText,\n      });\n    }\n  }\n  return response ?? { data: { code: 1999 } };\n};\n\nconst request: RequestMethod = extend({\n  errorHandler,\n  timeout: 300000,\n  getResponse: true,\n});\n\nrequest.interceptors.request.use((url: string, options: any) => {\n  const data = convertTheKeysOfTheObjectToSnake(options.data);\n  const params = convertTheKeysOfTheObjectToSnake(options.params);\n\n  return {\n    url,\n    options: {\n      ...options,\n      data,\n      params,\n      headers: {\n        ...(options.skipToken\n          ? undefined\n          : { [Authorization]: getAuthorization() }),\n        ...options.headers,\n      },\n      interceptors: true,\n    },\n  };\n});\n\nrequest.interceptors.response.use(async (response: Response, options) => {\n  if (response?.status === 413 || response?.status === 504) {\n    message.error(RetcodeMessage[response?.status as ResultCode]);\n  }\n\n  if (options.responseType === 'blob') {\n    return response;\n  }\n\n  const data: ResponseType = await response?.clone()?.json();\n  if (data?.code === 100) {\n    message.error(data?.message);\n  } else if (data?.code === 401) {\n    notification.error({\n      message: data?.message,\n      description: data?.message,\n      duration: 3,\n    });\n    authorizationUtil.removeAll();\n    redirectToLogin();\n  } else if (data?.code !== 0) {\n    notification.error({\n      message: `${i18n.t('message.hint')} : ${data?.code}`,\n      description: data?.message,\n      duration: 3,\n    });\n  }\n  return response;\n});\n\nexport default request;\n\nexport const get = (url: string) => {\n  return request.get(url);\n};\n\nexport const post = (url: string, body: any) => {\n  return request.post(url, { data: body });\n};\n\nexport const drop = () => {};\n\nexport const put = () => {};\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 86635;\nmodule.exports = webpackEmptyAsyncContext;"],"names":["MessageType","ChatVariableEnabledField","variableEnabledFieldMap","_defineProperty","TemperatureEnabled","TopPEnabled","PresencePenaltyEnabled","FrequencyPenaltyEnabled","MaxTokensEnabled","SharedFrom","ChatSearchParams","EmptyConversationId","KnowledgeRouteKey","RunningStatus","ModelVariableType","settledModelVariableMap","Improvise","temperature","top_p","frequency_penalty","presence_penalty","max_tokens","Precise","Balance","LlmModelType","KnowledgeSearchParams","DocumentType","DocumentParserType","useSetModalState","_useState","useState","_useState2","_slicedToArray","visible","setVisible","showModal","useCallback","hideModal","switchVisible","useShowDeleteConfirm","modal","App","useApp","t","useTranslation","_ref2","title","content","onOk","onCancel","Promise","resolve","reject","confirm","icon","_jsx","ExclamationCircleFilled","okText","okType","cancelText","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","ret","wrap","_context2","prev","next","sent","console","info","t0","stop","useTranslate","keyPrefix","useSetSelectedRecord","currentRecord","setCurrentRecord","setRecord","record","useHandleSearchChange","_useState3","_useState4","searchString","setSearchString","handleInputChange","e","value","target","useChangeLanguage","i18n","saveSetting","useSaveSetting","lng","changeLanguage","LanguageTranslationMap","language","useGetPaginationWithRouter","_useSetPaginationPara","useSetPaginationParams","setPaginationParams","page","pageSize","size","onPageChange","pageNumber","setCurrentPagination","pagination","useMemo","showQuickJumper","total","showSizeChanger","current","pageSizeOptions","onChange","showTotal","concat","setPagination","useFetchAppConf","_useState7","_useState8","appConf","setAppConf","fetchAppConf","_callee","_context","axios","get","data","useEffect","useSendMessageWithSse","url","arguments","length","undefined","api","completeConversation","_useState9","_useState10","answer","setAnswer","_useState11","_useState12","done","setDone","timer","useRef","resetAnswer","clearTimeout","setTimeout","send","body","controller","_response$body","response","res","reader","x","_done","val","d","fetch","method","headers","Authorization","getAuthorization","JSON","stringify","signal","clone","json","pipeThrough","TextDecoderStream","EventSourceParserStream","getReader","read","abrupt","parse","_objectSpread","conversationId","conversation_id","warn","t1","t2","_x","_x2","apply","useSpeechWithSse","tts","_ref3","_callee3","_context3","code","message","error","_x3","useHandleMessageInputChange","_useState13","_useState14","setValue","nextValue","replaceAll","useSelectDerivedMessages","_useState15","_useState16","derivedMessages","setDerivedMessages","ref","messages","scrollToBottom","_ref$current","scrollIntoView","behavior","useScrollToBottom","addNewestQuestion","pre","_toConsumableArray","id","buildMessageUuid","role","Assistant","addNewestAnswer","_pre$slice","slice","reference","prompt","audio_binary","omit","removeLatestMessage","_pre$slice2","removeMessageById","messageId","_pre$filter","filter","removeMessagesAfterCurrentMessage","index","findIndex","_pre$slice3","nextMessages","latestMessage","at","useRegenerateMessage","_ref4","sendMessage","regenerateMessage","_ref5","_callee4","_context4","uuid","_x4","useSelectItem","defaultId","_useState17","_useState18","selectedId","setSelectedId","handleItemClick","useFetchModelId","_tenantInfo$llm_id","tenantInfo","useFetchTenantInfo","llm_id","ChunkTokenNumMap","naive","knowledge_graph","useHandleChunkMethodSelectChange","form","setFieldValue","useResetFormOnCloseModal","_ref6","prevOpenRef","prevOpen","resetFields","SegmentIndex","useSegmentedPathName","useLocation","pathname","split","useSecondPathName","Second","useThirdPathName","Third","useGetKnowledgeSearchParams","_useSearchParams","useSearchParams","currentQueryParameters","documentId","DocumentId","knowledgeId","KnowledgeId","useNavigateWithFromState","navigate","useNavigate","path","state","from","useNavigateToDataset","Dataset","_useSearchParams5","_useSearchParams6","queryParameters","setSearchParams","set","toString","Number","useFetchUserInfo","_queryFn","_useQuery","useQuery","queryKey","initialData","gcTime","queryFn","_data$data","_yield$userService$us","userService","user_info","loading","isFetching","_queryFn2","showEmptyModelWarn","_useQuery2","_yield$userService$ge","_data","get_tenant_info","isEmpty","embd_id","Modal","warning","dangerouslySetInnerHTML","__html","DOMPurify","history","push","chat_id","speech2text_id","asr_id","useSelectParserList","_tenantInfo$parser_id","_tenantInfo$parser_id2","parser_ids","map","arr","label","_mutationFn","queryClient","useQueryClient","_useMutation","useMutation","mutationKey","mutationFn","userInfo","_yield$userService$se","setting","success","invalidateQueries","isPending","mutateAsync","useFetchSystemVersion","version","setVersion","setLoading","fetchSystemVersion","_yield$userService$ge2","getSystemVersion","useFetchSystemStatus","_useState5","_useState6","systemStatus","setSystemStatus","fetchSystemStatus","_callee5","_yield$userService$ge3","_context5","getSystemStatus","useFetchManualSystemTokenList","_mutationFn2","_useMutation2","_callee6","_data$data2","_yield$userService$li","_context6","listToken","fetchSystemTokenList","useFetchSystemTokenList","_queryFn3","_useQuery3","_callee7","_data$data3","_yield$userService$li2","_context7","refetch","useRemoveSystemToken","_mutationFn3","_useMutation3","_callee8","token","_data$data4","_yield$userService$re","_context8","removeToken","useCreateSystemToken","_mutationFn4","_useMutation4","_callee9","params","_data$data5","_yield$userService$cr","_context9","createToken","useListTenantUser","_queryFn4","tenantId","tenant_id","_useQuery4","enabled","_callee10","_data$data6","_yield$listTenantUser","_context10","listTenantUser","useAddTenantUser","_mutationFn5","_useMutation5","_callee11","email","_yield$addTenantUser","_context11","addTenantUser","useDeleteTenantUser","_mutationFn6","_useMutation6","_callee12","_data$data7","userId","_yield$deleteTenantUs","_context12","deleteTenantUser","_x5","useListTenant","_queryFn5","_useQuery5","_callee13","_data$data8","_yield$listTenant","_context13","listTenant","useAgreeTenant","_mutationFn7","_useMutation7","_callee14","_data$data9","_yield$agreeTenant","_context14","agreeTenant","_x6","login","logout","register","tenant_info","factories_list","llm_list","my_llm","set_api_key","set_tenant_info","add_llm","delete_llm","deleteFactory","getSystemTokenList","removeSystemToken","methods","createSystemToken","registerServer","request","post","_ref","api_host","kb_list","create_kb","update_kb","rm_kb","get_kb_detail","getKnowledgeGraph","listTag","listTagByKnowledgeIds","removeTag","renameTag","chunk_list","create_chunk","set_chunk","get_chunk","switch_chunk","rm_chunk","retrieval_test","get_document_list","document_change_status","document_rm","document_delete","document_rename","document_create","document_run","document_change_parser","document_thumbnails","get_document_file","document_upload","web_crawl","document_infos","upload_and_parse","setMeta","setDialog","getDialog","removeDialog","listDialog","setConversation","getConversation","getConversationSSE","listConversation","removeConversation","deleteMessage","thumbup","ask","mindmap","getRelatedQuestions","getStats","createExternalConversation","getExternalConversation","completeExternalConversation","uploadAndParseExternal","listFile","uploadFile","removeFile","renameFile","getAllParentFolder","createFolder","connectFileToKnowledge","getFile","moveFile","listSystemToken","listTemplates","listCanvas","getCanvas","getCanvasSSE","removeCanvas","setCanvas","resetCanvas","runCanvas","testDbConnect","getInputElements","debug","isConversationIdExist","buildMessageListWithUuid","_messages$map","getConversationId","replace","buildMessageUuidWithRole","preprocessLaTeX","_","equation","replaceThinkToSection","setInitialChatVariableEnabledFieldValue","field","Methods","opt","server","_loop","key","urlAppendix","requestOptions","some","toLowerCase","RetcodeMessage","extend","errorHandler","notification","description","status","errorText","statusText","timeout","getResponse","interceptors","use","options","convertTheKeysOfTheObjectToSnake","skipToken","_response$clone","responseType","duration","authorizationUtil","removeAll","redirectToLogin","webpackEmptyAsyncContext","req","then","Error","keys","module","exports"],"sourceRoot":""}