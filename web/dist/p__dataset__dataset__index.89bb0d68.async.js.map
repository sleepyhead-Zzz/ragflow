{"version":3,"file":"p__dataset__dataset__index.89bb0d68.async.js","mappings":"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","sources":["webpack:///./src/components/list-filter-bar.tsx","webpack:///./src/components/ui/button.tsx","webpack:///./src/components/ui/checkbox.tsx","webpack:///./src/components/ui/dialog.tsx","webpack:///./src/components/ui/dropdown-menu.tsx","webpack:///./src/components/ui/form.tsx","webpack:///./src/components/ui/label.tsx","webpack:///./src/components/ui/select.tsx","webpack:///./src/components/ui/switch.tsx","webpack:///./src/components/ui/table.tsx","webpack:///./src/components/ui/tabs.tsx","webpack:///./src/components/file-upload-dialog/index.tsx","webpack:///./src/components/chunk-method-dialog/hooks.ts","webpack:///./src/components/chunk-method-dialog/index.tsx","webpack:///./src/pages/dataset/dataset/hooks.ts","webpack:///./src/pages/dataset/dataset/dataset-table.tsx","webpack:///./src/pages/dataset/dataset/use-dataset-table-columns.tsx","webpack:///./src/pages/dataset/dataset/index.tsx","webpack:///./src/services/chat-service.ts","webpack:///./src/utils/date.ts"],"sourcesContent":["import { Filter } from 'lucide-react';\nimport { PropsWithChildren } from 'react';\nimport { Button } from './ui/button';\nimport { SearchInput } from './ui/input';\n\ninterface IProps {\n  title: string;\n  showDialog?: () => void;\n}\n\nexport default function ListFilterBar({\n  title,\n  children,\n  showDialog,\n}: PropsWithChildren<IProps>) {\n  return (\n    <div className=\"flex justify-between mb-6\">\n      <span className=\"text-3xl font-bold \">{title}</span>\n      <div className=\"flex gap-4 items-center\">\n        <Filter className=\"size-5\" />\n        <SearchInput></SearchInput>\n        <Button variant={'tertiary'} size={'sm'} onClick={showDialog}>\n          {children}\n        </Button>\n      </div>\n    </div>\n  );\n}\n","import { Slot } from '@radix-ui/react-slot';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst buttonVariants = cva(\n  'inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0',\n  {\n    variants: {\n      variant: {\n        default: 'bg-primary text-primary-foreground hover:bg-primary/90',\n        destructive:\n          'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n        outline:\n          'border border-colors-outline-sentiment-primary bg-background hover:bg-accent hover:text-accent-foreground',\n        secondary:\n          'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        ghost: 'hover:bg-accent hover:text-accent-foreground',\n        link: 'text-primary underline-offset-4 hover:underline',\n        tertiary:\n          'bg-colors-background-sentiment-solid-primary text-colors-text-persist-light hover:bg-colors-background-sentiment-solid-primary/80',\n        icon: 'bg-colors-background-inverse-standard text-foreground hover:bg-colors-background-inverse-standard/80',\n      },\n      size: {\n        default: 'h-10 px-4 py-2',\n        sm: 'h-9 rounded-md px-3',\n        lg: 'h-11 rounded-md px-8',\n        icon: 'h-10 w-10',\n        auto: 'h-full px-1',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  },\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : 'button';\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  },\n);\nButton.displayName = 'Button';\n\nexport { Button, buttonVariants };\n","'use client';\n\nimport * as CheckboxPrimitive from '@radix-ui/react-checkbox';\nimport { Check } from 'lucide-react';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      'peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground',\n      className,\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn('flex items-center justify-center text-current')}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n));\nCheckbox.displayName = CheckboxPrimitive.Root.displayName;\n\nexport { Checkbox };\n","'use client';\n\nimport * as DialogPrimitive from '@radix-ui/react-dialog';\nimport { X } from 'lucide-react';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Dialog = DialogPrimitive.Root;\n\nconst DialogTrigger = DialogPrimitive.Trigger;\n\nconst DialogPortal = DialogPrimitive.Portal;\n\nconst DialogClose = DialogPrimitive.Close;\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      'fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0',\n      className,\n    )}\n    {...props}\n  />\n));\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName;\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        'fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-colors-background-neutral-standard p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg',\n        className,\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n));\nDialogContent.displayName = DialogPrimitive.Content.displayName;\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      'flex flex-col space-y-1.5 text-center sm:text-left',\n      className,\n    )}\n    {...props}\n  />\n);\nDialogHeader.displayName = 'DialogHeader';\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      'flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2',\n      className,\n    )}\n    {...props}\n  />\n);\nDialogFooter.displayName = 'DialogFooter';\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      'text-lg font-semibold leading-none tracking-tight',\n      className,\n    )}\n    {...props}\n  />\n));\nDialogTitle.displayName = DialogPrimitive.Title.displayName;\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn('text-sm text-muted-foreground', className)}\n    {...props}\n  />\n));\nDialogDescription.displayName = DialogPrimitive.Description.displayName;\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n};\n","'use client';\n\nimport * as DropdownMenuPrimitive from '@radix-ui/react-dropdown-menu';\nimport { Check, ChevronRight, Circle } from 'lucide-react';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst DropdownMenu = DropdownMenuPrimitive.Root;\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger;\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group;\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal;\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub;\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup;\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean;\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      'flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0',\n      inset && 'pl-8',\n      className,\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n));\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName;\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      'z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n      className,\n    )}\n    {...props}\n  />\n));\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName;\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        'z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n        className,\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n));\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName;\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean;\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      'relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0',\n      inset && 'pl-8',\n      className,\n    )}\n    {...props}\n  />\n));\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName;\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      'relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\n      className,\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n));\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName;\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      'relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\n      className,\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n));\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName;\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean;\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      'px-2 py-1.5 text-sm font-semibold',\n      inset && 'pl-8',\n      className,\n    )}\n    {...props}\n  />\n));\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName;\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn('-mx-1 my-1 h-px bg-muted', className)}\n    {...props}\n  />\n));\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName;\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn('ml-auto text-xs tracking-widest opacity-60', className)}\n      {...props}\n    />\n  );\n};\nDropdownMenuShortcut.displayName = 'DropdownMenuShortcut';\n\nexport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuPortal,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuTrigger,\n};\n","'use client';\n\nimport * as LabelPrimitive from '@radix-ui/react-label';\nimport { Slot } from '@radix-ui/react-slot';\nimport * as React from 'react';\nimport {\n  Controller,\n  ControllerProps,\n  FieldPath,\n  FieldValues,\n  FormProvider,\n  useFormContext,\n} from 'react-hook-form';\n\nimport { Label } from '@/components/ui/label';\nimport { cn } from '@/lib/utils';\nimport { Info } from 'lucide-react';\nimport { Tooltip, TooltipContent, TooltipTrigger } from './tooltip';\n\nconst Form = FormProvider;\n\ntype FormItemContextValue = {\n  id: string;\n};\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue,\n);\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> = {\n  name: TName;\n};\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue,\n);\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  );\n};\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext);\n  const itemContext = React.useContext(FormItemContext);\n  const { getFieldState, formState } = useFormContext();\n\n  const fieldState = getFieldState(fieldContext.name, formState);\n\n  if (!fieldContext) {\n    throw new Error('useFormField should be used within <FormField>');\n  }\n\n  const { id } = itemContext;\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  };\n};\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId();\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn('space-y-2', className)} {...props} />\n    </FormItemContext.Provider>\n  );\n});\nFormItem.displayName = 'FormItem';\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> & {\n    tooltip?: React.ReactNode;\n  }\n>(({ className, tooltip, ...props }, ref) => {\n  const { error, formItemId } = useFormField();\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && 'text-destructive', className, 'flex')}\n      htmlFor={formItemId}\n      {...props}\n    >\n      {props.children}\n      {tooltip && (\n        <Tooltip>\n          <TooltipTrigger>\n            <Info className=\"size-3 ml-2\" />\n          </TooltipTrigger>\n          <TooltipContent>\n            <p>{tooltip}</p>\n          </TooltipContent>\n        </Tooltip>\n      )}\n    </Label>\n  );\n});\nFormLabel.displayName = 'FormLabel';\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } =\n    useFormField();\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  );\n});\nFormControl.displayName = 'FormControl';\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField();\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn('text-sm text-muted-foreground', className)}\n      {...props}\n    />\n  );\n});\nFormDescription.displayName = 'FormDescription';\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField();\n  const body = error ? String(error?.message) : children;\n\n  if (!body) {\n    return null;\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn('text-sm font-medium text-destructive', className)}\n      {...props}\n    >\n      {body}\n    </p>\n  );\n});\nFormMessage.displayName = 'FormMessage';\n\nexport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n  useFormField,\n};\n","'use client';\n\nimport * as LabelPrimitive from '@radix-ui/react-label';\nimport { cva, type VariantProps } from 'class-variance-authority';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst labelVariants = cva(\n  'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70',\n);\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n));\nLabel.displayName = LabelPrimitive.Root.displayName;\n\nexport { Label };\n","'use client';\n\nimport * as SelectPrimitive from '@radix-ui/react-select';\nimport { Check, ChevronDown, ChevronUp, X } from 'lucide-react';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\nimport { ControllerRenderProps } from 'react-hook-form';\n\nimport { FormControl } from '@/components/ui/form';\nimport { forwardRef, useCallback, useEffect } from 'react';\n\nconst Select = SelectPrimitive.Root;\n\nconst SelectGroup = SelectPrimitive.Group;\n\nconst SelectValue = SelectPrimitive.Value;\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger> & {\n    onReset?: () => void;\n    allowClear?: boolean;\n  }\n>(({ className, children, value, onReset, allowClear, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      'flex h-10 w-full items-center justify-between rounded-md border border-input bg-colors-background-inverse-weak px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1',\n      className,\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon\n      asChild\n      onPointerDown={(event) => {\n        event.stopPropagation();\n      }}\n    >\n      {value && allowClear ? (\n        <X className=\"h-4 w-4 opacity-50 cursor-pointer\" onClick={onReset} />\n      ) : (\n        <ChevronDown className=\"h-4 w-4 opacity-50\" />\n      )}\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n));\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName;\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      'flex cursor-default items-center justify-center py-1',\n      className,\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n));\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName;\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      'flex cursor-default items-center justify-center py-1',\n      className,\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n));\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName;\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = 'popper', ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        'relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n        position === 'popper' &&\n          'data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1',\n        className,\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          'p-1',\n          position === 'popper' &&\n            'h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]',\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n));\nSelectContent.displayName = SelectPrimitive.Content.displayName;\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn('py-1.5 pl-8 pr-2 text-sm font-semibold', className)}\n    {...props}\n  />\n));\nSelectLabel.displayName = SelectPrimitive.Label.displayName;\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      'relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\n      className,\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n));\nSelectItem.displayName = SelectPrimitive.Item.displayName;\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn('-mx-1 my-1 h-px bg-muted', className)}\n    {...props}\n  />\n));\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName;\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n};\n\nexport type RAGFlowSelectOptionType = {\n  label: React.ReactNode;\n  value: string;\n  disabled?: boolean;\n};\n\nexport type RAGFlowSelectGroupOptionType = {\n  label: React.ReactNode;\n  options: RAGFlowSelectOptionType[];\n};\n\nexport type RAGFlowSelectProps = Partial<ControllerRenderProps> & {\n  FormControlComponent?: typeof FormControl;\n  options?: (RAGFlowSelectOptionType | RAGFlowSelectGroupOptionType)[];\n  allowClear?: boolean;\n  placeholder?: React.ReactNode;\n  contentProps?: React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>;\n} & SelectPrimitive.SelectProps;\n\n/**\n *\n * Reference:\n * https://github.com/shadcn-ui/ui/discussions/638\n * https://github.com/radix-ui/primitives/discussions/2645#discussioncomment-8343397\n *\n * @export\n * @param {(Partial<ControllerRenderProps> & {\n *   FormControlComponent?: typeof FormControl;\n * })} {\n *   value: initialValue,\n *   onChange,\n *   FormControlComponent,\n * }\n * @return {*}\n */\nexport const RAGFlowSelect = forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  RAGFlowSelectProps\n>(function (\n  {\n    value: initialValue,\n    onChange,\n    FormControlComponent,\n    options = [],\n    allowClear,\n    placeholder,\n    contentProps = {},\n  },\n  ref,\n) {\n  const [key, setKey] = React.useState(+new Date());\n  const [value, setValue] = React.useState<string | undefined>(undefined);\n\n  const FormControlWidget = FormControlComponent\n    ? FormControlComponent\n    : ({ children }: React.PropsWithChildren) => <div>{children}</div>;\n\n  const handleChange = useCallback(\n    (val?: string) => {\n      setValue(val);\n      onChange?.(val);\n    },\n    [onChange],\n  );\n\n  const handleReset = useCallback(() => {\n    handleChange(undefined);\n    setKey(+new Date());\n  }, [handleChange]);\n\n  useEffect(() => {\n    setValue((preValue) => {\n      if (preValue !== initialValue) {\n        return initialValue;\n      }\n      return preValue;\n    });\n  }, [initialValue]);\n\n  return (\n    <Select onValueChange={handleChange} value={value} key={key}>\n      <FormControlWidget>\n        <SelectTrigger\n          className=\"bg-colors-background-inverse-weak\"\n          value={value}\n          onReset={handleReset}\n          allowClear={allowClear}\n          ref={ref}\n        >\n          <SelectValue placeholder={placeholder} />\n        </SelectTrigger>\n      </FormControlWidget>\n      <SelectContent {...contentProps}>\n        {options.map((o, idx) => {\n          if ('value' in o) {\n            return (\n              <SelectItem\n                value={o.value as RAGFlowSelectOptionType['value']}\n                key={o.value}\n                disabled={o.disabled}\n              >\n                {o.label}\n              </SelectItem>\n            );\n          }\n\n          return (\n            <SelectGroup key={idx}>\n              <SelectLabel>{o.label}</SelectLabel>\n              {o.options.map((x) => (\n                <SelectItem value={x.value} key={x.value} disabled={x.disabled}>\n                  {x.label}\n                </SelectItem>\n              ))}\n            </SelectGroup>\n          );\n        })}\n      </SelectContent>\n    </Select>\n  );\n});\n\nRAGFlowSelect.displayName = 'RAGFlowSelect';\n","'use client';\n\nimport * as SwitchPrimitives from '@radix-ui/react-switch';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      'peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-colors-background-core-standard data-[state=unchecked]:bg-colors-background-inverse-standard',\n      className,\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        'pointer-events-none block h-5 w-5 rounded-full bg-colors-text-neutral-strong shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0',\n      )}\n    />\n  </SwitchPrimitives.Root>\n));\nSwitch.displayName = SwitchPrimitives.Root.displayName;\n\nexport { Switch };\n","import * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn('w-full caption-bottom text-sm', className)}\n      {...props}\n    />\n  </div>\n));\nTable.displayName = 'Table';\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn('[&_tr]:border-b', className)} {...props} />\n));\nTableHeader.displayName = 'TableHeader';\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn('[&_tr:last-child]:border-0', className)}\n    {...props}\n  />\n));\nTableBody.displayName = 'TableBody';\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      'border-t bg-muted/50 font-medium [&>tr]:last:border-b-0',\n      className,\n    )}\n    {...props}\n  />\n));\nTableFooter.displayName = 'TableFooter';\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      'border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted',\n      className,\n    )}\n    {...props}\n  />\n));\nTableRow.displayName = 'TableRow';\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      'h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0',\n      className,\n    )}\n    {...props}\n  />\n));\nTableHead.displayName = 'TableHead';\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn('p-4 align-middle [&:has([role=checkbox])]:pr-0', className)}\n    {...props}\n  />\n));\nTableCell.displayName = 'TableCell';\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn('mt-4 text-sm text-muted-foreground', className)}\n    {...props}\n  />\n));\nTableCaption.displayName = 'TableCaption';\n\nexport {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableHeader,\n  TableRow,\n};\n","'use client';\n\nimport * as TabsPrimitive from '@radix-ui/react-tabs';\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nconst Tabs = TabsPrimitive.Root;\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      'inline-flex h-10 items-center justify-center rounded-md bg-colors-background-inverse-standard p-1 text-colors-text-neutral-standard',\n      className,\n    )}\n    {...props}\n  />\n));\nTabsList.displayName = TabsPrimitive.List.displayName;\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      'inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-colors-background-inverse-strong data-[state=active]:text-colors-text-inverse-strong data-[state=active]:shadow-sm',\n      className,\n    )}\n    {...props}\n  />\n));\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName;\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      'mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2',\n      className,\n    )}\n    {...props}\n  />\n));\nTabsContent.displayName = TabsPrimitive.Content.displayName;\n\nexport { Tabs, TabsContent, TabsList, TabsTrigger };\n","import { Button } from '@/components/ui/button';\nimport {\n  Dialog,\n  DialogContent,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { IModalProps } from '@/interfaces/common';\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { FileUploader } from '../file-uploader';\n\nexport function UploaderTabs() {\n  const { t } = useTranslation();\n\n  const [files, setFiles] = useState<File[]>([]);\n  console.log('🚀 ~ TabsDemo ~ files:', files);\n\n  return (\n    <Tabs defaultValue=\"account\">\n      <TabsList className=\"grid w-full grid-cols-2 mb-4\">\n        <TabsTrigger value=\"account\">{t('fileManager.local')}</TabsTrigger>\n        <TabsTrigger value=\"password\">{t('fileManager.s3')}</TabsTrigger>\n      </TabsList>\n      <TabsContent value=\"account\">\n        <FileUploader\n          maxFileCount={8}\n          maxSize={8 * 1024 * 1024}\n          onValueChange={setFiles}\n        />\n      </TabsContent>\n      <TabsContent value=\"password\">{t('common.comingSoon')}</TabsContent>\n    </Tabs>\n  );\n}\n\nexport function FileUploadDialog({ hideModal }: IModalProps<any>) {\n  const { t } = useTranslation();\n\n  return (\n    <Dialog open onOpenChange={hideModal}>\n      <DialogContent className=\"sm:max-w-[425px]\">\n        <DialogHeader>\n          <DialogTitle>{t('fileManager.uploadFile')}</DialogTitle>\n        </DialogHeader>\n        <UploaderTabs></UploaderTabs>\n        <DialogFooter>\n          <Button type=\"submit\" variant={'tertiary'} size={'sm'}>\n            {t('common.save')}\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","import { useSelectParserList } from '@/hooks/user-setting-hooks';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\n\nconst ParserListMap = new Map([\n  [\n    ['pdf'],\n    [\n      'naive',\n      'resume',\n      'manual',\n      'paper',\n      'book',\n      'laws',\n      'presentation',\n      'one',\n      'qa',\n      'knowledge_graph',\n    ],\n  ],\n  [\n    ['doc', 'docx'],\n    [\n      'naive',\n      'resume',\n      'book',\n      'laws',\n      'one',\n      'qa',\n      'manual',\n      'knowledge_graph',\n    ],\n  ],\n  [\n    ['xlsx', 'xls'],\n    ['naive', 'qa', 'table', 'one', 'knowledge_graph'],\n  ],\n  [['ppt', 'pptx'], ['presentation']],\n  [\n    ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'tif', 'tiff', 'webp', 'svg', 'ico'],\n    ['picture'],\n  ],\n  [\n    ['txt'],\n    [\n      'naive',\n      'resume',\n      'book',\n      'laws',\n      'one',\n      'qa',\n      'table',\n      'knowledge_graph',\n    ],\n  ],\n  [\n    ['csv'],\n    [\n      'naive',\n      'resume',\n      'book',\n      'laws',\n      'one',\n      'qa',\n      'table',\n      'knowledge_graph',\n    ],\n  ],\n  [['md'], ['naive', 'qa', 'knowledge_graph']],\n  [['json'], ['naive', 'knowledge_graph']],\n  [['eml'], ['email']],\n]);\n\nconst getParserList = (\n  values: string[],\n  parserList: Array<{\n    value: string;\n    label: string;\n  }>,\n) => {\n  return parserList.filter((x) => values?.some((y) => y === x.value));\n};\n\nexport const useFetchParserListOnMount = (\n  documentId: string,\n  parserId: string,\n  documentExtension: string,\n  // form: FormInstance,\n) => {\n  const [selectedTag, setSelectedTag] = useState('');\n  const parserList = useSelectParserList();\n  // const handleChunkMethodSelectChange = useHandleChunkMethodSelectChange(form); // TODO\n\n  const nextParserList = useMemo(() => {\n    const key = [...ParserListMap.keys()].find((x) =>\n      x.some((y) => y === documentExtension),\n    );\n    if (key) {\n      const values = ParserListMap.get(key);\n      return getParserList(values ?? [], parserList);\n    }\n\n    return getParserList(\n      ['naive', 'resume', 'book', 'laws', 'one', 'qa', 'table'],\n      parserList,\n    );\n  }, [parserList, documentExtension]);\n\n  useEffect(() => {\n    setSelectedTag(parserId);\n  }, [parserId, documentId]);\n\n  const handleChange = (tag: string) => {\n    // handleChunkMethodSelectChange(tag);\n    setSelectedTag(tag);\n  };\n\n  return { parserList: nextParserList, handleChange, selectedTag };\n};\n\nconst hideAutoKeywords = ['qa', 'table', 'resume', 'knowledge_graph', 'tag'];\n\nexport const useShowAutoKeywords = () => {\n  const showAutoKeywords = useCallback((selectedTag: string) => {\n    return hideAutoKeywords.every((x) => selectedTag !== x);\n  }, []);\n\n  return showAutoKeywords;\n};\n","import { Button } from '@/components/ui/button';\nimport {\n  Dialog,\n  DialogContent,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { useTranslate } from '@/hooks/common-hooks';\nimport { IModalProps } from '@/interfaces/common';\nimport { IParserConfig } from '@/interfaces/database/document';\nimport { IChangeParserConfigRequestBody } from '@/interfaces/request/document';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useForm } from 'react-hook-form';\nimport { z } from 'zod';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '../ui/select';\nimport { useFetchParserListOnMount } from './hooks';\n\ninterface IProps\n  extends IModalProps<{\n    parserId: string;\n    parserConfig: IChangeParserConfigRequestBody;\n  }> {\n  loading: boolean;\n  parserId: string;\n  parserConfig: IParserConfig;\n  documentExtension: string;\n  documentId: string;\n}\n\nexport function ChunkMethodDialog({\n  hideModal,\n  onOk,\n  parserId,\n  documentId,\n  documentExtension,\n}: IProps) {\n  const { t } = useTranslate('knowledgeDetails');\n\n  const { parserList } = useFetchParserListOnMount(\n    documentId,\n    parserId,\n    documentExtension,\n    // form,\n  );\n\n  const FormSchema = z.object({\n    name: z\n      .string()\n      .min(1, {\n        message: 'namePlaceholder',\n      })\n      .trim(),\n  });\n  const form = useForm<z.infer<typeof FormSchema>>({\n    resolver: zodResolver(FormSchema),\n    defaultValues: { name: '' },\n  });\n\n  async function onSubmit(data: z.infer<typeof FormSchema>) {\n    const ret = await onOk?.();\n    if (ret) {\n      hideModal?.();\n    }\n  }\n\n  return (\n    <Dialog open onOpenChange={hideModal}>\n      <DialogContent>\n        <DialogHeader>\n          <DialogTitle>{t('chunkMethod')}</DialogTitle>\n        </DialogHeader>\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n            <FormField\n              control={form.control}\n              name=\"name\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>{t('name')}</FormLabel>\n                  <FormControl>\n                    <Select\n                      {...field}\n                      autoComplete=\"off\"\n                      onValueChange={field.onChange}\n                    >\n                      <FormControl>\n                        <SelectTrigger>\n                          <SelectValue placeholder=\"Select a verified email to display\" />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        {parserList.map((x) => (\n                          <SelectItem value={x.value} key={x.value}>\n                            {x.label}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          </form>\n        </Form>\n        <DialogFooter>\n          <Button type=\"submit\">Save changes</Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","import { useSetModalState } from '@/hooks/common-hooks';\nimport {\n  useCreateNextDocument,\n  useNextWebCrawl,\n  useRunNextDocument,\n  useSaveNextDocumentName,\n  useSetNextDocumentParser,\n  useUploadNextDocument,\n} from '@/hooks/document-hooks';\nimport { useGetKnowledgeSearchParams } from '@/hooks/route-hook';\nimport { IChangeParserConfigRequestBody } from '@/interfaces/request/document';\nimport { getUnSupportedFilesCount } from '@/utils/document-util';\nimport { UploadFile } from 'antd';\nimport { useCallback, useState } from 'react';\nimport { useNavigate } from 'umi';\n\nexport const useNavigateToOtherPage = () => {\n  const navigate = useNavigate();\n  const { knowledgeId } = useGetKnowledgeSearchParams();\n\n  const linkToUploadPage = useCallback(() => {\n    navigate(`/knowledge/dataset/upload?id=${knowledgeId}`);\n  }, [navigate, knowledgeId]);\n\n  const toChunk = useCallback((id: string) => {}, []);\n\n  return { linkToUploadPage, toChunk };\n};\n\nexport const useRenameDocument = (documentId: string) => {\n  const { saveName, loading } = useSaveNextDocumentName();\n\n  const {\n    visible: renameVisible,\n    hideModal: hideRenameModal,\n    showModal: showRenameModal,\n  } = useSetModalState();\n\n  const onRenameOk = useCallback(\n    async (name: string) => {\n      const ret = await saveName({ documentId, name });\n      if (ret === 0) {\n        hideRenameModal();\n      }\n    },\n    [hideRenameModal, saveName, documentId],\n  );\n\n  return {\n    renameLoading: loading,\n    onRenameOk,\n    renameVisible,\n    hideRenameModal,\n    showRenameModal,\n  };\n};\n\nexport const useCreateEmptyDocument = () => {\n  const { createDocument, loading } = useCreateNextDocument();\n\n  const {\n    visible: createVisible,\n    hideModal: hideCreateModal,\n    showModal: showCreateModal,\n  } = useSetModalState();\n\n  const onCreateOk = useCallback(\n    async (name: string) => {\n      const ret = await createDocument(name);\n      if (ret === 0) {\n        hideCreateModal();\n      }\n    },\n    [hideCreateModal, createDocument],\n  );\n\n  return {\n    createLoading: loading,\n    onCreateOk,\n    createVisible,\n    hideCreateModal,\n    showCreateModal,\n  };\n};\n\nexport const useChangeDocumentParser = (documentId: string) => {\n  const { setDocumentParser, loading } = useSetNextDocumentParser();\n\n  const {\n    visible: changeParserVisible,\n    hideModal: hideChangeParserModal,\n    showModal: showChangeParserModal,\n  } = useSetModalState();\n\n  const onChangeParserOk = useCallback(\n    async ({\n      parserId,\n      parserConfig,\n    }: {\n      parserId: string;\n      parserConfig: IChangeParserConfigRequestBody;\n    }) => {\n      const ret = await setDocumentParser({\n        parserId,\n        documentId,\n        parserConfig,\n      });\n      if (ret === 0) {\n        hideChangeParserModal();\n      }\n    },\n    [hideChangeParserModal, setDocumentParser, documentId],\n  );\n\n  return {\n    changeParserLoading: loading,\n    onChangeParserOk,\n    changeParserVisible,\n    hideChangeParserModal,\n    showChangeParserModal,\n  };\n};\n\nexport const useGetRowSelection = () => {\n  const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([]);\n\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: (newSelectedRowKeys: React.Key[]) => {\n      setSelectedRowKeys(newSelectedRowKeys);\n    },\n  };\n\n  return rowSelection;\n};\n\nexport const useHandleUploadDocument = () => {\n  const {\n    visible: documentUploadVisible,\n    hideModal: hideDocumentUploadModal,\n    showModal: showDocumentUploadModal,\n  } = useSetModalState();\n  const { uploadDocument, loading } = useUploadNextDocument();\n\n  const onDocumentUploadOk = useCallback(\n    async (fileList: UploadFile[]): Promise<number | undefined> => {\n      if (fileList.length > 0) {\n        const ret: any = await uploadDocument(fileList);\n        if (typeof ret?.message !== 'string') {\n          return;\n        }\n        const count = getUnSupportedFilesCount(ret?.message);\n        /// 500 error code indicates that some file types are not supported\n        let code = ret?.code;\n        if (\n          ret?.code === 0 ||\n          (ret?.code === 500 && count !== fileList.length) // Some files were not uploaded successfully, but some were uploaded successfully.\n        ) {\n          code = 0;\n          hideDocumentUploadModal();\n        }\n        return code;\n      }\n    },\n    [uploadDocument, hideDocumentUploadModal],\n  );\n\n  return {\n    documentUploadLoading: loading,\n    onDocumentUploadOk,\n    documentUploadVisible,\n    hideDocumentUploadModal,\n    showDocumentUploadModal,\n  };\n};\n\nexport const useHandleWebCrawl = () => {\n  const {\n    visible: webCrawlUploadVisible,\n    hideModal: hideWebCrawlUploadModal,\n    showModal: showWebCrawlUploadModal,\n  } = useSetModalState();\n  const { webCrawl, loading } = useNextWebCrawl();\n\n  const onWebCrawlUploadOk = useCallback(\n    async (name: string, url: string) => {\n      const ret = await webCrawl({ name, url });\n      if (ret === 0) {\n        hideWebCrawlUploadModal();\n        return 0;\n      }\n      return -1;\n    },\n    [webCrawl, hideWebCrawlUploadModal],\n  );\n\n  return {\n    webCrawlUploadLoading: loading,\n    onWebCrawlUploadOk,\n    webCrawlUploadVisible,\n    hideWebCrawlUploadModal,\n    showWebCrawlUploadModal,\n  };\n};\n\nexport const useHandleRunDocumentByIds = (id: string) => {\n  const { runDocumentByIds, loading } = useRunNextDocument();\n  const [currentId, setCurrentId] = useState<string>('');\n  const isLoading = loading && currentId !== '' && currentId === id;\n\n  const handleRunDocumentByIds = async (\n    documentId: string,\n    isRunning: boolean,\n    shouldDelete: boolean = false,\n  ) => {\n    if (isLoading) {\n      return;\n    }\n    setCurrentId(documentId);\n    try {\n      await runDocumentByIds({\n        documentIds: [documentId],\n        run: isRunning ? 2 : 1,\n        shouldDelete,\n      });\n      setCurrentId('');\n    } catch (error) {\n      setCurrentId('');\n    }\n  };\n\n  return {\n    handleRunDocumentByIds,\n    loading: isLoading,\n  };\n};\n","'use client';\n\nimport {\n  ColumnFiltersState,\n  SortingState,\n  VisibilityState,\n  flexRender,\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  useReactTable,\n} from '@tanstack/react-table';\nimport * as React from 'react';\n\nimport { ChunkMethodDialog } from '@/components/chunk-method-dialog';\nimport { Button } from '@/components/ui/button';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport { useFetchNextDocumentList } from '@/hooks/document-hooks';\nimport { useSetSelectedRecord } from '@/hooks/logic-hooks';\nimport { IDocumentInfo } from '@/interfaces/database/document';\nimport { getExtension } from '@/utils/document-util';\nimport { useMemo } from 'react';\nimport { useChangeDocumentParser } from './hooks';\nimport { useDatasetTableColumns } from './use-dataset-table-columns';\n\nexport function DatasetTable() {\n  const {\n    // searchString,\n    documents,\n    pagination,\n    // handleInputChange,\n    setPagination,\n  } = useFetchNextDocumentList();\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>(\n    [],\n  );\n  const [columnVisibility, setColumnVisibility] =\n    React.useState<VisibilityState>({});\n  const [rowSelection, setRowSelection] = React.useState({});\n\n  const { currentRecord, setRecord } = useSetSelectedRecord<IDocumentInfo>();\n\n  const {\n    changeParserLoading,\n    onChangeParserOk,\n    changeParserVisible,\n    hideChangeParserModal,\n    showChangeParserModal,\n  } = useChangeDocumentParser(currentRecord.id);\n\n  const columns = useDatasetTableColumns({\n    showChangeParserModal,\n    setCurrentRecord: setRecord,\n  });\n\n  const currentPagination = useMemo(() => {\n    return {\n      pageIndex: (pagination.current || 1) - 1,\n      pageSize: pagination.pageSize || 10,\n    };\n  }, [pagination]);\n\n  const table = useReactTable({\n    data: documents,\n    columns,\n    onSortingChange: setSorting,\n    onColumnFiltersChange: setColumnFilters,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    onColumnVisibilityChange: setColumnVisibility,\n    onRowSelectionChange: setRowSelection,\n    onPaginationChange: (updaterOrValue: any) => {\n      if (typeof updaterOrValue === 'function') {\n        const nextPagination = updaterOrValue(currentPagination);\n        setPagination({\n          page: nextPagination.pageIndex + 1,\n          pageSize: nextPagination.pageSize,\n        });\n      } else {\n        setPagination({\n          page: updaterOrValue.pageIndex,\n          pageSize: updaterOrValue.pageSize,\n        });\n      }\n    },\n    manualPagination: true, //we're doing manual \"server-side\" pagination\n    state: {\n      sorting,\n      columnFilters,\n      columnVisibility,\n      rowSelection,\n      pagination: currentPagination,\n    },\n    rowCount: pagination.total ?? 0,\n  });\n\n  return (\n    <div className=\"w-full\">\n      <div className=\"rounded-md border\">\n        <Table>\n          <TableHeader>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <TableRow key={headerGroup.id}>\n                {headerGroup.headers.map((header) => {\n                  return (\n                    <TableHead key={header.id}>\n                      {header.isPlaceholder\n                        ? null\n                        : flexRender(\n                            header.column.columnDef.header,\n                            header.getContext(),\n                          )}\n                    </TableHead>\n                  );\n                })}\n              </TableRow>\n            ))}\n          </TableHeader>\n          <TableBody>\n            {table.getRowModel().rows?.length ? (\n              table.getRowModel().rows.map((row) => (\n                <TableRow\n                  key={row.id}\n                  data-state={row.getIsSelected() && 'selected'}\n                >\n                  {row.getVisibleCells().map((cell) => (\n                    <TableCell\n                      key={cell.id}\n                      className={cell.column.columnDef.meta?.cellClassName}\n                    >\n                      {flexRender(\n                        cell.column.columnDef.cell,\n                        cell.getContext(),\n                      )}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell\n                  colSpan={columns.length}\n                  className=\"h-24 text-center\"\n                >\n                  No results.\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </div>\n      <div className=\"flex items-center justify-end space-x-2 py-4\">\n        <div className=\"flex-1 text-sm text-muted-foreground\">\n          {table.getFilteredSelectedRowModel().rows.length} of{' '}\n          {pagination?.total} row(s) selected.\n        </div>\n        <div className=\"space-x-2\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => table.previousPage()}\n            disabled={!table.getCanPreviousPage()}\n          >\n            Previous\n          </Button>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => table.nextPage()}\n            disabled={!table.getCanNextPage()}\n          >\n            Next\n          </Button>\n        </div>\n      </div>\n      {changeParserVisible && (\n        <ChunkMethodDialog\n          documentId={currentRecord.id}\n          parserId={currentRecord.parser_id}\n          parserConfig={currentRecord.parser_config}\n          documentExtension={getExtension(currentRecord.name)}\n          onOk={onChangeParserOk}\n          visible={changeParserVisible}\n          hideModal={hideChangeParserModal}\n          loading={changeParserLoading}\n        ></ChunkMethodDialog>\n      )}\n    </div>\n  );\n}\n","import SvgIcon from '@/components/svg-icon';\nimport { Button } from '@/components/ui/button';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\nimport { Switch } from '@/components/ui/switch';\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipTrigger,\n} from '@/components/ui/tooltip';\nimport { useNavigatePage } from '@/hooks/logic-hooks/navigate-hooks';\nimport { IDocumentInfo } from '@/interfaces/database/document';\nimport { cn } from '@/lib/utils';\nimport { formatDate } from '@/utils/date';\nimport { getExtension } from '@/utils/document-util';\nimport { ColumnDef } from '@tanstack/table-core';\nimport { ArrowUpDown, MoreHorizontal, Pencil, Wrench } from 'lucide-react';\nimport { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useChangeDocumentParser } from './hooks';\n\ntype UseDatasetTableColumnsType = Pick<\n  ReturnType<typeof useChangeDocumentParser>,\n  'showChangeParserModal'\n> & { setCurrentRecord: (record: IDocumentInfo) => void };\n\nexport function useDatasetTableColumns({\n  showChangeParserModal,\n  setCurrentRecord,\n}: UseDatasetTableColumnsType) {\n  const { t } = useTranslation('translation', {\n    keyPrefix: 'knowledgeDetails',\n  });\n\n  // const onShowRenameModal = (record: IDocumentInfo) => {\n  //   setCurrentRecord(record);\n  //   showRenameModal();\n  // };\n  const onShowChangeParserModal = useCallback(\n    (record: IDocumentInfo) => () => {\n      setCurrentRecord(record);\n      showChangeParserModal();\n    },\n    [setCurrentRecord, showChangeParserModal],\n  );\n\n  // const onShowSetMetaModal = useCallback(() => {\n  //   setRecord();\n  //   showSetMetaModal();\n  // }, [setRecord, showSetMetaModal]);\n\n  const { navigateToChunkParsedResult } = useNavigatePage();\n\n  const columns: ColumnDef<IDocumentInfo>[] = [\n    {\n      id: 'select',\n      header: ({ table }) => (\n        <Checkbox\n          checked={\n            table.getIsAllPageRowsSelected() ||\n            (table.getIsSomePageRowsSelected() && 'indeterminate')\n          }\n          onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\n          aria-label=\"Select all\"\n        />\n      ),\n      cell: ({ row }) => (\n        <Checkbox\n          checked={row.getIsSelected()}\n          onCheckedChange={(value) => row.toggleSelected(!!value)}\n          aria-label=\"Select row\"\n        />\n      ),\n      enableSorting: false,\n      enableHiding: false,\n    },\n    {\n      accessorKey: 'name',\n      header: ({ column }) => {\n        return (\n          <Button\n            variant=\"ghost\"\n            onClick={() => column.toggleSorting(column.getIsSorted() === 'asc')}\n          >\n            {t('name')}\n            <ArrowUpDown />\n          </Button>\n        );\n      },\n      meta: { cellClassName: 'max-w-[20vw]' },\n      cell: ({ row }) => {\n        const name: string = row.getValue('name');\n\n        return (\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <div\n                className=\"flex gap-2 cursor-pointer\"\n                onClick={navigateToChunkParsedResult(\n                  row.original.id,\n                  row.original.kb_id,\n                )}\n              >\n                <SvgIcon\n                  name={`file-icon/${getExtension(name)}`}\n                  width={24}\n                ></SvgIcon>\n                <span className={cn('truncate')}>{name}</span>\n              </div>\n            </TooltipTrigger>\n            <TooltipContent>\n              <p>{name}</p>\n            </TooltipContent>\n          </Tooltip>\n        );\n      },\n    },\n    {\n      accessorKey: 'create_time',\n      header: ({ column }) => {\n        return (\n          <Button\n            variant=\"ghost\"\n            onClick={() => column.toggleSorting(column.getIsSorted() === 'asc')}\n          >\n            {t('uploadDate')}\n            <ArrowUpDown />\n          </Button>\n        );\n      },\n      cell: ({ row }) => (\n        <div className=\"lowercase\">\n          {formatDate(row.getValue('create_time'))}\n        </div>\n      ),\n    },\n    {\n      accessorKey: 'parser_id',\n      header: t('chunkMethod'),\n      cell: ({ row }) => (\n        <div className=\"capitalize\">{row.getValue('parser_id')}</div>\n      ),\n    },\n    {\n      accessorKey: 'run',\n      header: t('parsingStatus'),\n      cell: ({ row }) => (\n        <Button variant=\"destructive\" size={'sm'}>\n          {row.getValue('run')}\n        </Button>\n      ),\n    },\n    {\n      id: 'actions',\n      header: t('action'),\n      enableHiding: false,\n      cell: ({ row }) => {\n        const record = row.original;\n\n        return (\n          <section className=\"flex gap-4 items-center\">\n            <Switch id=\"airplane-mode\" />\n            <Button\n              variant=\"icon\"\n              size={'icon'}\n              onClick={onShowChangeParserModal(record)}\n            >\n              <Wrench />\n            </Button>\n            <Button variant=\"icon\" size={'icon'}>\n              <Pencil />\n            </Button>\n            <DropdownMenu>\n              <DropdownMenuTrigger asChild>\n                <Button variant=\"icon\" size={'icon'}>\n                  <MoreHorizontal />\n                </Button>\n              </DropdownMenuTrigger>\n              <DropdownMenuContent align=\"end\">\n                <DropdownMenuLabel>Actions</DropdownMenuLabel>\n                <DropdownMenuItem\n                  onClick={() => navigator.clipboard.writeText(record.id)}\n                >\n                  Copy payment ID\n                </DropdownMenuItem>\n                <DropdownMenuSeparator />\n                <DropdownMenuItem>View customer</DropdownMenuItem>\n                <DropdownMenuItem>View payment details</DropdownMenuItem>\n              </DropdownMenuContent>\n            </DropdownMenu>\n          </section>\n        );\n      },\n    },\n  ];\n\n  return columns;\n}\n","import { FileUploadDialog } from '@/components/file-upload-dialog';\nimport ListFilterBar from '@/components/list-filter-bar';\nimport { Upload } from 'lucide-react';\nimport { DatasetTable } from './dataset-table';\nimport { useHandleUploadDocument } from './hooks';\n\nexport default function Dataset() {\n  const {\n    documentUploadVisible,\n    hideDocumentUploadModal,\n    showDocumentUploadModal,\n    onDocumentUploadOk,\n    documentUploadLoading,\n  } = useHandleUploadDocument();\n  return (\n    <section className=\"p-8\">\n      <ListFilterBar title=\"Files\" showDialog={showDocumentUploadModal}>\n        <Upload />\n        Upload file\n      </ListFilterBar>\n      <DatasetTable></DatasetTable>\n\n      {documentUploadVisible && (\n        <FileUploadDialog\n          hideModal={hideDocumentUploadModal}\n          onOk={onDocumentUploadOk}\n          loading={documentUploadLoading}\n        ></FileUploadDialog>\n      )}\n    </section>\n  );\n}\n","import api from '@/utils/api';\nimport registerServer from '@/utils/register-server';\nimport request from '@/utils/request';\n\nconst {\n  getDialog,\n  setDialog,\n  listDialog,\n  removeDialog,\n  getConversation,\n  getConversationSSE,\n  setConversation,\n  completeConversation,\n  listConversation,\n  removeConversation,\n  createToken,\n  listToken,\n  removeToken,\n  getStats,\n  createExternalConversation,\n  getExternalConversation,\n  completeExternalConversation,\n  uploadAndParseExternal,\n  deleteMessage,\n  thumbup,\n  tts,\n  ask,\n  mindmap,\n  getRelatedQuestions,\n} = api;\n\nconst methods = {\n  getDialog: {\n    url: getDialog,\n    method: 'get',\n  },\n  setDialog: {\n    url: setDialog,\n    method: 'post',\n  },\n  removeDialog: {\n    url: removeDialog,\n    method: 'post',\n  },\n  listDialog: {\n    url: listDialog,\n    method: 'get',\n  },\n  listConversation: {\n    url: listConversation,\n    method: 'get',\n  },\n  getConversation: {\n    url: getConversation,\n    method: 'get',\n  },\n  getConversationSSE: {\n    url: getConversationSSE,\n    method: 'get',\n  },\n  setConversation: {\n    url: setConversation,\n    method: 'post',\n  },\n  completeConversation: {\n    url: completeConversation,\n    method: 'post',\n  },\n  removeConversation: {\n    url: removeConversation,\n    method: 'post',\n  },\n  createToken: {\n    url: createToken,\n    method: 'post',\n  },\n  listToken: {\n    url: listToken,\n    method: 'get',\n  },\n  removeToken: {\n    url: removeToken,\n    method: 'post',\n  },\n  getStats: {\n    url: getStats,\n    method: 'get',\n  },\n  createExternalConversation: {\n    url: createExternalConversation,\n    method: 'get',\n  },\n  getExternalConversation: {\n    url: getExternalConversation,\n    method: 'get',\n  },\n  completeExternalConversation: {\n    url: completeExternalConversation,\n    method: 'post',\n  },\n  uploadAndParseExternal: {\n    url: uploadAndParseExternal,\n    method: 'post',\n  },\n  deleteMessage: {\n    url: deleteMessage,\n    method: 'post',\n  },\n  thumbup: {\n    url: thumbup,\n    method: 'post',\n  },\n  tts: {\n    url: tts,\n    method: 'post',\n  },\n  ask: {\n    url: ask,\n    method: 'post',\n  },\n  getMindMap: {\n    url: mindmap,\n    method: 'post',\n  },\n  getRelatedQuestions: {\n    url: getRelatedQuestions,\n    method: 'post',\n  },\n} as const;\n\nconst chatService = registerServer<keyof typeof methods>(methods, request);\n\nexport default chatService;\n","import dayjs from 'dayjs';\n\nexport function formatDate(date: any) {\n  if (!date) {\n    return '';\n  }\n  return dayjs(date).format('DD/MM/YYYY HH:mm:ss');\n}\n\nexport function formatTime(date: any) {\n  if (!date) {\n    return '';\n  }\n  return dayjs(date).format('HH:mm:ss');\n}\n\nexport function today() {\n  return formatDate(dayjs());\n}\n\nexport function lastDay() {\n  return formatDate(dayjs().subtract(1, 'days'));\n}\n\nexport function lastWeek() {\n  return formatDate(dayjs().subtract(1, 'weeks'));\n}\n\nexport function formatPureDate(date: any) {\n  if (!date) {\n    return '';\n  }\n  return dayjs(date).format('DD/MM/YYYY');\n}\n"],"names":["ListFilterBar","_ref","title","children","showDialog","_jsxs","className","_jsx","Filter","SearchInput","Button","variant","size","onClick","buttonVariants","cva","variants","default","destructive","outline","secondary","ghost","link","tertiary","icon","sm","lg","auto","defaultVariants","React","ref","_ref$asChild","asChild","props","_objectWithoutProperties","_excluded","Comp","Slot","_objectSpread","cn","displayName","Checkbox","CheckboxPrimitive","Check","_excluded2","_excluded3","_excluded4","_excluded5","_excluded6","Dialog","DialogPrimitive","DialogPortal","DialogOverlay","DialogContent","_ref2","X","DialogHeader","_ref3","DialogFooter","_ref4","DialogTitle","_ref5","_ref6","_excluded7","_excluded8","DropdownMenu","DropdownMenuPrimitive","DropdownMenuTrigger","inset","ChevronRight","DropdownMenuContent","_ref3$sideOffset","sideOffset","DropdownMenuItem","checked","Circle","DropdownMenuLabel","_ref7","DropdownMenuSeparator","_ref8","Form","FormProvider","FormItemContext","FormFieldContext","FormField","Object","assign","_objectDestructuringEmpty","Provider","value","name","Controller","useFormField","fieldContext","itemContext","_useFormContext","useFormContext","getFieldState","formState","fieldState","Error","id","formItemId","concat","formDescriptionId","formMessageId","FormItem","FormLabel","tooltip","_useFormField","error","Label","htmlFor","Tooltip","TooltipTrigger","Info","TooltipContent","FormControl","_useFormField2","FormDescription","FormMessage","_useFormField4","body","String","message","labelVariants","LabelPrimitive","Select","SelectPrimitive","SelectGroup","SelectValue","SelectTrigger","onReset","allowClear","onPointerDown","event","stopPropagation","ChevronDown","SelectScrollUpButton","ChevronUp","SelectScrollDownButton","SelectContent","_ref4$position","position","SelectLabel","SelectItem","RAGFlowSelect","forwardRef","initialValue","onChange","FormControlComponent","_ref8$options","options","placeholder","_ref8$contentProps","contentProps","_React$useState","Date","_React$useState2","_slicedToArray","key","setKey","_React$useState3","undefined","_React$useState4","setValue","FormControlWidget","_ref9","handleChange","useCallback","val","handleReset","useEffect","preValue","onValueChange","map","o","idx","disabled","label","x","Switch","SwitchPrimitives","Table","TableHeader","TableBody","TableRow","TableHead","TableCell","Tabs","TabsPrimitive","TabsList","TabsTrigger","TabsContent","UploaderTabs","t","useTranslation","_useState","useState","_useState2","files","setFiles","console","log","defaultValue","FileUploader","maxFileCount","maxSize","FileUploadDialog","hideModal","open","onOpenChange","type","ParserListMap","Map","getParserList","values","parserList","filter","some","y","useFetchParserListOnMount","documentId","parserId","documentExtension","selectedTag","setSelectedTag","useSelectParserList","nextParserList","useMemo","_toConsumableArray","keys","find","get","tag","ChunkMethodDialog","onOk","useTranslate","FormSchema","z","object","string","min","trim","form","useForm","resolver","zodResolver","defaultValues","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","sent","stop","apply","arguments","onSubmit","handleSubmit","_x","control","render","field","autoComplete","useChangeDocumentParser","_useSetNextDocumentPa","useSetNextDocumentParser","setDocumentParser","loading","_useSetModalState3","useSetModalState","changeParserVisible","visible","hideChangeParserModal","showChangeParserModal","showModal","onChangeParserOk","_callee3","parserConfig","_context3","_x3","changeParserLoading","useHandleUploadDocument","_useSetModalState4","documentUploadVisible","hideDocumentUploadModal","showDocumentUploadModal","_useUploadNextDocumen","useUploadNextDocument","uploadDocument","onDocumentUploadOk","_callee4","fileList","ret","count","code","_context4","length","abrupt","getUnSupportedFilesCount","_x4","documentUploadLoading","DatasetTable","_pagination$total","_table$getRowModel$ro","_useFetchNextDocument","useFetchNextDocumentList","documents","pagination","setPagination","sorting","setSorting","columnFilters","setColumnFilters","_React$useState5","_React$useState6","columnVisibility","setColumnVisibility","_React$useState7","_React$useState8","rowSelection","setRowSelection","_useSetSelectedRecord","useSetSelectedRecord","currentRecord","setRecord","_useChangeDocumentPar","columns","setCurrentRecord","keyPrefix","onShowChangeParserModal","record","navigateToChunkParsedResult","useNavigatePage","header","table","getIsAllPageRowsSelected","getIsSomePageRowsSelected","onCheckedChange","toggleAllPageRowsSelected","cell","row","getIsSelected","toggleSelected","enableSorting","enableHiding","accessorKey","column","toggleSorting","getIsSorted","ArrowUpDown","meta","cellClassName","getValue","original","kb_id","SvgIcon","getExtension","width","formatDate","_ref10","Wrench","Pencil","MoreHorizontal","align","navigator","clipboard","writeText","useDatasetTableColumns","currentPagination","pageIndex","current","pageSize","useReactTable","onSortingChange","onColumnFiltersChange","getCoreRowModel","getPaginationRowModel","getSortedRowModel","getFilteredRowModel","onColumnVisibilityChange","onRowSelectionChange","onPaginationChange","updaterOrValue","nextPagination","page","manualPagination","state","rowCount","total","getHeaderGroups","headerGroup","headers","isPlaceholder","flexRender","columnDef","getContext","getRowModel","rows","getVisibleCells","_cell$column$columnDe","colSpan","getFilteredSelectedRowModel","previousPage","getCanPreviousPage","nextPage","getCanNextPage","parser_id","parser_config","Dataset","_useHandleUploadDocum","Upload","getDialog","api","setDialog","listDialog","removeDialog","getConversation","getConversationSSE","setConversation","completeConversation","methods","url","method","listConversation","removeConversation","createToken","listToken","removeToken","getStats","createExternalConversation","getExternalConversation","completeExternalConversation","uploadAndParseExternal","deleteMessage","thumbup","tts","ask","getMindMap","mindmap","getRelatedQuestions","chatService","registerServer","request","date","dayjs","format","formatTime","formatPureDate"],"sourceRoot":""}